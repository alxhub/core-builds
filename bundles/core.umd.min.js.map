{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","compiler","rxjs","operators","this","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","InjectionToken","_desc","ngMetadataName","ngInjectableDef","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","chainFn","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","args","_i","apply","_a","annotationInstance","bind","TypeDecorator","cls","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ÉµChangeDetectorStatus","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","type","Inject","Optional","Self","SkipSelf","Host","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","get","notFoundValue","Error","Injector","parent","isArray","StaticInjector","NULL","inject","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","GET_PROPERTY_NAME","USE_VALUE","getClosureSafeProperty","objWithPropertyToExtract","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","source","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","j","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","flags","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","forEach","v","text","obj","charAt","substr","context","parts","JSON","replace","_currentInjector","setCurrentInjector","injector","former","injectableDef","injectArgs","types","arg","Type","Function","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","result","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","fill","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","prop","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getPrototypeOf","getClosureSafeProperty$1","GET_PROPERTY_NAME$1","USE_VALUE$1","EMPTY_ARRAY","convertInjectableProviderToFactory","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","Injectable","R3_COMPILE_INJECTABLE","preR3InjectableCompile","injectableType","NgModule","ngModule","R3_COMPILE_NGMODULE","preR3NgModuleCompile","moduleType","ngInjectorDef","queueContentHooks","def","tView","afterContentInit","contentHooks","afterContentChecked","contentCheckHooks","queueViewHooks","afterViewInit","viewHooks","afterViewChecked","viewCheckHooks","queueDestroyHooks","onDestroy","destroyHooks","executeInitHooks","currentView","creationMode","executeHooks","directives","initHooks","checkHooks","allHooks","hooksToCall","callHooks","arr","RendererStyleFlags3","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","stringify$1","flatten","list","item","findNextRNodeSibling","node","stopNode","currentNode","pNextOrParent","tNode","nativeNode","findFirstRNode","currentSibling","getNextLNode","parentNode","getParentLNode","parentType","lView","view","getChildLNode","child","getNextLNodeWithProjection","getNextOrParentSiblingNode","initialNode","rootNode","nextNode","native","childContainerData","dynamicLContainerNode","views","head","addRemoveViewFromContainer","container","insertMode","beforeNode","renderParent","insertBefore","removeChild","destroyNode","insertView","viewNode","splice","queries","containerNextNativeNode","removeView","removeIndex","destroyViewTree","rootView","childIndex","cleanUpView","viewOrContainer","getLViewChild","getParentState","removedLview","hostNode","state","removeListeners","cleanup","removeEventListener","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","id","destroy","canInsertNativeNode","appendChild","appendProjectedNode","currentParent","lContainer","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","mode","nodeAttrs","attrs","selectOnlyMarkerIdx","skipToNextSelector","tagName","isPositive","attrIndexInNode","findAttrIndexInNode","selectorAttrValue","nodeAttrValue","step","attrName","isNodeMatchingSelectorList","matchingSelectorIndex","selectors","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","throwMultipleComponentError","rendererFactory","previousOrParentNode","isParent","tData","NG_HOST_SYMBOL","_CLEAN_PROMISE","_ROOT_DIRECTIVE_INDICES","CIRCULAR$1","getCurrentSanitizer","sanitizer","getPreviousOrParentNode","currentQueries","checkNoChangesMode","firstTemplatePass","enterView","newView","host","oldView","leaveView","creationOnly","bindingIndex","refreshView","refreshDynamicChildren","nextIndex","container_1","lViewNode","dynamicView","renderEmbeddedTemplate","template","setHostBindings","hostBindings","refreshChildComponents","components","componentRefresh","bindings","defs","dirIndex","executeInitAndContentHooks","createLView","tail","createLNodeObject","nodeInjector","createLNode","tParent","isState","createTNode","previousTNode","dynamicContainerNode","_isParent","_previousOrParentNode","rf","createView","getRenderFlags","elementStart","localRefs","createElement","setUpAttributes","createDirectivesAndLocals","cacheMatchingDirectivesForNode","exportsMap","","matches","currentMatches","findDirectiveMatches","registry","directiveRegistry","diPublic","valueIndex","resolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","instantiateDirectivesDirectly","count","start","end","tDirectives","directiveCreate","saveResolvedLocalsInData","instance","throwCyclicDependencyError","initChangeDetectorIfExisting","changeDetectorRef","_setComponentContext","exportAs","getOrCreateTView","pipes","ngPrivateData","createTView","viewIndex","bindingStartIndex","pipeRegistry","isProc","attrVal","setAttribute","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","querySelector","listener","eventName","listenerFn","useCapture","cleanupFns","wrappedListener","wrapListenerWithDirtyLogic","markViewDirty","cleanupFn","listen","wrapListenerWithDirtyAndDefault","wrapListenerIn_markViewDirty","preventDefault","returnValue","addEventListener","outputs","generatePropertyAliases","outputData","createOutput","subscription","subscribe","unsubscribe","elementEnd","addNode","queueLifecycleHooks","elementAttribute","NO_CHANGE","element","removeAttribute","strValue","elementProperty","inputs","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","setProperty","tViews","initialInputs","tNodeFlags","direction","propStore","isInput","directiveDef","propertyAliasMap","publicName","internalName","elementClassNamed","className","lElement","addClass","classList","add","removeClass","remove","elementClass","elementStyleNamed","styleName","suffixOrSanitizer","removeStyle","DashCase","removeProperty","setStyle","elementStyle","style","styleValue","textNode","createTextNode","createText","textBinding","existingNode","setValue","textContent","directive","baseDirectiveCreate","addComponentLogic","directiveDefs","pipeDefs","hostView","addToViewTree","onPush","queueComponentIndexForCheck","queueInitHooks","onInit","doCheck","queueHostBindingForCheck","setInputsFromAttrs","directiveIndex","initialInputData","generateInitialInputs","minifiedInputName","attrValue","enumerable","attributes","createLContainer","parentLNode","isForViewContainerRef","containerRefreshStart","containerRefreshEnd","embeddedViewStart","viewBlockId","scanForView","containerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","embeddedViewEnd","setRenderParentInProjectedNodes","nodeToProject","lastNodeToProject","elementIndex","viewAttached","detectChangesInternal","getDirectiveInstance","appendToProjectionNode","projectionNode","appendedFirst","appendedLast","projectionNodeData","findComponentHost","viewRootLNode","hostIndex","scheduleTick","rootContext","res_1","clean","scheduler","tick","component","getRootView","rootComponent","renderComponentOrTemplate","componentOrContext","begin","_getComponentHostLElementNode","detectChanges","initBindings","bindingUpdated","moveBindingIndexToReservedSlot","offset","currentSlot","restoreBindingIndex","interpolation1","prefix","v0","suffix","interpolation2","i0","v1","bindingUpdated2","interpolation3","i1","v2","different","interpolation4","i2","v3","bindingUpdated4","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","store","load","loadDirective","consumeBinding","isDifferent","throwErrorIfNoChangesMode","oldValue","currValue","msg","checkAndUpdateBinding","exp1","exp2","exp3","exp4","getTView","instanceOrArray","CLEAN_PROMISE","ROOT_DIRECTIVE_INDICES","ViewRef","_view","callback","markForCheck","detach","reattach","checkNoChanges","EmbeddedViewRef","_super","_this","_lViewNode","createViewRef","addDestroyable","destroyFn","destroyed","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","isDirty","configurable","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","clear","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","delete","size","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","has","record_1","KeyValueChangeRecord_","_addToAdditions","newValue","_addToChanges","k","IterableDiffers","factories","copied","extend","find","iterable","f","getTypeNameForDebugging","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","optional","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","some","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","existing","_normalizeProviders","invalidProviderError","from","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","dep","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","APP_ROOT","NOT_YET","CIRCULAR$2","EMPTY_ARRAY$2","NULL_INJECTOR$2","getNullInjector","R3Injector","injectorDefTypes","Set","deepForEach","injectorDef","processInjectorType","makeRecord","isRootInjector","defType","assertNotDestroyed","service","ngOnDestroy","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefRecord","hydrate","defOrWrappedDef","parents","imported","processProvider","isTypeProvider","providerToRecord","isValueProvider","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","multiRecord_1","hasOnDestroy","input","ViewEncapsulation","KeyValueDiffers","kv","ChangeDetectorRef","keyValDiff","iterableDiff","defaultIterableDiffers","defaultKeyValueDiffers","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","action","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createEmbeddedView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","UNDEFINED_RENDERER_TYPE_ID","EMPTY_RENDERER_TYPE_ID","_renderCompCount","resolveRendererType2","isFilled","encapsulation","None","styles","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding$1","checkBindingNoChanges","bindingName","nodeIndex","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","componentView","root","errorHandler","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","_b","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","nextSibling","lastRenderRootNode","visitSiblingRenderNodes","startIndex","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","projectableNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","match","calcBindingFlags","_toStringWithNull","NG_ELEMENT_ID","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjector","getOrCreateNodeInjectorForNode","parentInjector","bf0","bf1","bf2","bf3","bf4","bf5","bf6","bf7","cbf0","cbf1","cbf2","cbf3","cbf4","cbf5","cbf6","cbf7","templateRef","viewContainerRef","elementRef","diPublicInInjector","di","bloomAdd","bloomBit","mask","directiveInject","getOrCreateInjectable","bloomHash","bloomHashBit","formerInjector","bloomFindPossibleInjector","nodeFlags","searchMatchesQueuedForCreation","sameHostView","injectTemplateRef","getOrCreateTemplateRef","hostTNode","hostTView","TemplateRef","getOrCreateElementRef","getRenderer","injectViewContainerRef","getOrCreateContainerRef","vcRefHost","hostParent","lContainerNode","ViewContainerRef","injectChangeDetectorRef","getOrCreateChangeDetectorRef","isComponent","getOrCreateHostChangeDetector","getClosestComponentAncestor","hostInjector","injectAttribute","attrNameToInject","startInjector","ReadFromInjectorFn","read","ElementRef","nativeElement","_lContainerNode","_viewRefs","viewRef","insert","createComponent","componentFactory","notImplemented","adjustedIdx","_adjustIndex","move","newIndex","shift","_tView","_template","_renderer","_queries","defineComponent","componentDefinition","pipeTypes","directiveTypes","invertObject","ngOnInit","ngDoCheck","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","changeDetection","OnPush","extractDirectiveDef","extractPipeDef","feature","features","ngComponentDef","ngDirectiveDef","ngPipeDef","PRIVATE_PREFIX","NgOnChangesFeature","inputPropertyNames","definition","proto","_loop_1","pubKey","minKey","propertyName","privateMinKey","originalProperty","simpleChanges","writable","currentChange","onChangesWrapper","delegateHook","ngOnChanges","EMPTY$1","newObj","minifiedKey","defineDirective","pureFunction0","slotOffset","pureFn","thisArg","getCreationMode","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipeBind1","pipeInstance","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","pure","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","setTimeout","sink","Subscription","Subject","LQueries_","deep","shallow","track","queryList","predicate","descend","createQuery","query","containerValues","clonedQuery","setDirty","getIdxOfMatchingSelector","getIdxOfMatchingDirective","readFromNodeInjector","directiveIdx","matchingIdx","addMatch","matchingValue","previous","createPredicate","_valuesTree","QueryList","QueryList_","dirty","changes","_values","filter","reduce","init","toArray","reset","notifyOnChanges","memoryIndex","getCurrentQueries","QueryType","queryRefresh","angularCoreEnv","ÉµdefineComponent","ÉµdefineDirective","ÉµdefineNgModule","defineNgModule","bootstrap","declarations","transitiveCompileScope","ÉµdirectiveInject","ÉµinjectAttribute","ÉµinjectChangeDetectorRef","ÉµinjectElementRef","injectElementRef","ÉµinjectTemplateRef","ÉµinjectViewContainerRef","ÉµNgOnChangesFeature","Éµa","Éµb","ÉµC","ÉµcR","Éµcr","Éµd","ÉµE","Éµe","Éµf0","Éµf1","Éµf2","Éµf3","Éµf4","Éµf5","Éµf6","Éµf7","Éµf8","ÉµfV","Éµi1","Éµi2","Éµi3","Éµi4","Éµi5","Éµi6","Éµi7","Éµi8","Éµk","Éµkn","ÉµL","Éµld","Éµp","Éµpb1","Éµpb2","Éµpb3","Éµpb4","ÉµpbV","ÉµQ","ÉµqR","Éµs","Éµsn","Éµst","ÉµT","Éµt","ÉµV","Éµv","ElementRef$1","TemplateRef$1","ViewContainerRef$1","getReflect","reflectDependencies","convertDependencies","reflectDependency","LiteralExpr","resolved","R3ResolvedDependencyType","Token","skipSelf","setTokenAndResolvedType","WrappedNodeExpr","param","_pendingPromises","directiveMetadata","field","ann","isOutput","bindingPropertyName","listeners","properties","lifecycle","usesOnChanges","typeSourceSpan","isUseClassProvider","GET_PROPERTY_NAME$2","USE_VALUE$2","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","EMPTY_ARRAY$3","expandModuleWithProviders","isModuleWithProviders","isNgModule","ngModuleDef","Version","compileInjectable$1","hasAProvider","expression","compileInjectable","computeProvidedIn","jitExpression","compileNgModule$1","importExport","mod","addExportsFrom","decl","patchComponentWithScope","dir","pipe","ngSelectorScope","meta_1","emitInline","compileNgModule","Directive","compileDirective","constantPool","ConstantPool","sourceMapUrl","compileDirectiveFromMetadata","makeBindingParser","Component","Default","compileComponentDecorator","compileComponent","templateStr","parseTemplate","errors","compileComponentFromMetadata","viewQueries","Pipe","Input","Output","HostBinding","hostPropertyName","HostListener","VERSION","full","major","split","minor","patch","isPromise","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","Math","floor","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","warn","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","COMPILER_OPTIONS","CompilerFactory","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","trace","events","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","ngContentSelectors","rootSelectorOrNode","NgModuleRef","NgModuleFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","scope","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","taskTrackingZone","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","pop","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","isPeriodic","delay","creationLocation","xhr","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","_devMode","_runModeLocked","ALLOW_MULTIPLE_PLATFORMS","isDevMode","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","marker","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","compilerFactory","optionsReducer","createCompiler","appRef","ApplicationRef","_bootstrapComponents","ngDoBootstrap","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","isCurrentlyStable","Observable","observer","stableSub","unstableSub","merge","share","ApplicationRef_1","componentOrFactory","compRef","_unloadComponent","location","_loadComponent","_tickScope","attachView","attachToAppRef","detachView","detachFromAppRef","componentRef","el","RendererStyleFlags2","RenderComponentType","templateUrl","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Renderer2","NgModuleFactoryLoader","moduleFactories","QueryList$1","_results","flatten$1","flat","flatItem","last","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewRef$1","EmbeddedViewRef$1","EventListener","DebugNode","_debugContext","DebugElement","addChild","providerTokens","classes","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","MissingTranslationStrategy","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","locale","ApplicationModule","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","XMLHttpRequest","responseType","open","send","response","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","elAttrs","childNode","nodeType","Node","ELEMENT_NODE","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","tagSet","tags","e_1","_c","e_1_1","return","merge$1","sets","e_2","sets_1","sets_1_1","e_2_1","inertBodyHelper","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","srcset","elAttr","lower","trim","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","parent_1","isTemplateElement","content","SecurityContext","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","Sanitizer","elDef","selectorOrNode","ns","createComment","parentEl","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","binding","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","sanitize","setElementClass","setElementStyle","STYLE","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance$1","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","ViewContainerRef_","_data","ref","attachToViewContainerRef","ngModuleRef","contextInjector","viewRef_","attachEmbeddedView","parentView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","viewData","createChangeDetectorRef","_viewContainerRef","_appRef","rootRenderNodes","renderNodes","fs","vcRef","createTemplateData","TemplateRef_","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","comment","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyValue","attributeValue","setBindingDebugInfo","isAdd","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey","INJECTORRefTokenKey","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance","createPipeInstance","createClass","createDirectiveInstance","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","startView","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","directiveInstance","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","embeddedView","dvc","projectedView","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","attr","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","NgModuleFactory_","_ngModuleDefFactory","BRAND","bypassSanitizationTrustString","trustedString","trusted","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","createInjector","getModuleFactory","ÉµALLOW_MULTIPLE_PLATFORMS","ÉµAPP_ID_RANDOM_PROVIDER","ÉµdefaultIterableDiffers","ÉµdevModeEqual","ÉµisListLikeIterable","ÉµisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ÉµConsole","Éµinject","ÉµsetCurrentInjector","ÉµAPP_ROOT","ÉµivyEnabled","ÉµComponentFactory","ÉµCodegenComponentFactoryResolver","ÉµReflectionCapabilities","ÉµRenderDebugInfo","Éµ_sanitizeHtml","Éµ_sanitizeStyle","Éµ_sanitizeUrl","Éµglobal","ÉµlooseIdentical","Éµstringify","ÉµmakeDecorator","ÉµisObservable","isObservable","ÉµisPromise","ÉµclearOverrides","ÉµoverrideComponentView","ÉµoverrideProvider","ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ÉµdefinePipe","definePipe","pipeDef","ÉµdetectChanges","ÉµrenderComponent","renderComponent","componentDef","requestAnimationFrame","elementNode","tag","rNode","resetApplicationState","componentTag","hostFeatures","ÉµPublicFeature","PublicFeature","ÉµmarkDirty","markDirty","ÉµNC","ÉµP","projection","localIndex","selectorIndex","nodesForSelector","previouslyProjected","ÉµiV","interpolationV","ÉµpD","projectionDef","noOfNodeBuckets","distributedNodes","componentChild","ÉµrS","reserveSlots","numSlots","ÉµPp","pipeName","getPipeDef","ÉµwhenRendered","whenRendered","getRootContext","ÉµbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ÉµbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ÉµbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ÉµbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ÉµbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ÉµsanitizeHtml","sanitizeHtml","HTML","ÉµsanitizeStyle","sanitizeStyle","unsafeStyle","ÉµsanitizeUrl","sanitizeUrl","unsafeUrl","URL","ÉµsanitizeResourceUrl","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ÉµregisterModuleFactory","registerModuleFactory","ÉµEMPTY_ARRAY","ÉµEMPTY_MAP","Éµand","templateFactory","Éµccf","createComponentFactory","Éµcmf","createNgModuleFactory","ngModuleType","defFactory","Éµcrt","createRendererType2","Éµdid","outputDefs","Éµeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","name_1","_e","ÉµelementEventFullName","ÉµgetComponentViewDefinitionFactory","ÉµinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","Éµinterpolate","interpolate","constAndInterp","Éµmod","moduleDef","Éµmpd","moduleProvideDef","Éµncd","ngContentDef","Éµnov","Éµpid","Éµprd","Éµpad","pureArrayDef","argCount","Éµpod","pureObjectDef","propToIndex","nbKeys","Éµppd","purePipeDef","Éµqud","Éµted","textDef","staticText","Éµunv","unwrapValue","nodeIdx","globalBindingIdx","Éµvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v6.0.0-rc.5+311.sha-dc03f78.with-local-changes\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/compiler'), require('rxjs'), require('rxjs/operators')) :\n\ttypeof define === 'function' && define.amd ? define('@angular/core', ['exports', '@angular/compiler', 'rxjs', 'rxjs/operators'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.core = {}),global.ng.compiler,global.rxjs,global.rxjs.operators));\n}(this, (function (exports,compiler,rxjs,operators) { 'use strict';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\n\r\n\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n * in which injectors (if any) it will be available.\n *\n * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n * `InjectableType`.\n *\n * Options:\n * * `providedIn` determines which injectors will include the injectable, by either associating it\n *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n * * `factory` gives the zero argument function which will create an instance of the injectable.\n *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n *\n * @experimental\n */\nfunction defineInjectable(opts) {\n    return {\n        providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n    };\n}\n/**\n * Construct an `InjectorDef` which configures an injector.\n *\n * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n * `InjectorType`.\n *\n * Options:\n *\n * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n *   create the type must be provided. If that factory function needs to inject arguments, it can\n *   use the `inject` function.\n * * `providers`: an optional array of providers to add to the injector. Each provider must\n *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n *   type must be an `InjectableType`).\n * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n *   whose providers will also be added to the injector. Locally provided types will override\n *   providers from imports.\n *\n * @experimental\n */\nfunction defineInjector(options) {\n    return {\n        factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n    };\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates a token that can be used in a DI Provider.\n *\n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parametrized type.\n *\n * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n * the `Injector`. This provides additional level of type safety.\n *\n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n *\n * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n * application's root injector. If the factory function, which takes zero arguments, needs to inject\n * dependencies, it can do so using the `inject` function. See below for an example.\n *\n * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n * mentioned above, `'root'` is the default value for `providedIn`.\n *\n * ### Example\n *\n * #### Tree-shakeable InjectionToken\n *\n * {@example core/di/ts/injector_spec.ts region='ShakeableInjectionToken'}\n *\n * #### Plain InjectionToken\n *\n * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n *\n *\n */\nvar InjectionToken = /** @class */ (function () {\n    function InjectionToken(_desc, options) {\n        this._desc = _desc;\n        /** @internal */\n        this.ngMetadataName = 'InjectionToken';\n        if (options !== undefined) {\n            this.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn || 'root',\n                factory: options.factory,\n            });\n        }\n        else {\n            this.ngInjectableDef = undefined;\n        }\n    }\n    InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n    return InjectionToken;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ANNOTATIONS = '__annotations__';\nvar PARAMETERS = '__parameters__';\nvar PROP_METADATA = '__prop__metadata__';\n/**\n * @suppress {globalThis}\n */\nfunction makeDecorator(name, props, parentClass, chainFn, typeFn) {\n    var metaCtor = makeMetadataCtor(props);\n    function DecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof DecoratorFactory) {\n            metaCtor.call.apply(metaCtor, __spread([this], args));\n            return this;\n        }\n        var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n        var TypeDecorator = function TypeDecorator(cls) {\n            typeFn && typeFn.apply(void 0, __spread([cls], args));\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                cls[ANNOTATIONS] :\n                Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n            annotations.push(annotationInstance);\n            return cls;\n        };\n        if (chainFn)\n            chainFn(TypeDecorator);\n        return TypeDecorator;\n        var _a;\n    }\n    if (parentClass) {\n        DecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    DecoratorFactory.prototype.ngMetadataName = name;\n    DecoratorFactory.annotationCls = DecoratorFactory;\n    return DecoratorFactory;\n}\nfunction makeMetadataCtor(props) {\n    return function ctor() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (props) {\n            var values = props.apply(void 0, __spread(args));\n            for (var propName in values) {\n                this[propName] = values[propName];\n            }\n        }\n    };\n}\nfunction makeParamDecorator(name, props, parentClass) {\n    var metaCtor = makeMetadataCtor(props);\n    function ParamDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof ParamDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n        ParamDecorator.annotation = annotationInstance;\n        return ParamDecorator;\n        function ParamDecorator(cls, unusedKey, index) {\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                cls[PARAMETERS] :\n                Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n            // there might be gaps if some in between parameters do not have annotations.\n            // we pad with nulls.\n            while (parameters.length <= index) {\n                parameters.push(null);\n            }\n            (parameters[index] = parameters[index] || []).push(annotationInstance);\n            return cls;\n        }\n        var _a;\n    }\n    if (parentClass) {\n        ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    ParamDecoratorFactory.prototype.ngMetadataName = name;\n    ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n    return ParamDecoratorFactory;\n}\nfunction makePropDecorator(name, props, parentClass) {\n    var metaCtor = makeMetadataCtor(props);\n    function PropDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof PropDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n        return function PropDecorator(target, name) {\n            var constructor = target.constructor;\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                constructor[PROP_METADATA] :\n                Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n            meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n            meta[name].unshift(decoratorInstance);\n        };\n        var _a;\n    }\n    if (parentClass) {\n        PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    PropDecoratorFactory.prototype.ngMetadataName = name;\n    PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n    return PropDecoratorFactory;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This token can be used to create a virtual provider that will populate the\n * `entryComponents` fields of components and ng modules based on its `useValue`.\n * All components that are referenced in the `useValue` value (either directly\n * or in a nested array or map) will be added to the `entryComponents` property.\n *\n * ### Example\n * The following example shows how the router can populate the `entryComponents`\n * field of an NgModule based on the router configuration which refers\n * to components.\n *\n * ```typescript\n * // helper function inside the router\n * function provideRoutes(routes) {\n *   return [\n *     {provide: ROUTES, useValue: routes},\n *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n *   ];\n * }\n *\n * // user code\n * let routes = [\n *   {path: '/root', component: RootComp},\n *   {path: '/teams', component: TeamsComp}\n * ];\n *\n * @NgModule({\n *   providers: [provideRoutes(routes)]\n * })\n * class ModuleWithRoutes {}\n * ```\n *\n * @experimental\n */\nvar ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n/**\n * Attribute decorator and metadata.\n *\n *\n * @Annotation\n */\nvar Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n/**\n * Base class for query metadata.\n *\n * See {@link ContentChildren}, {@link ContentChild}, {@link ViewChildren}, {@link ViewChild} for\n * more information.\n *\n *\n */\nvar Query = /** @class */ (function () {\n    function Query() {\n    }\n    return Query;\n}());\n/**\n * ContentChildren decorator and metadata.\n *\n *\n *  @Annotation\n */\nvar ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n}, Query);\n/**\n * ContentChild decorator and metadata.\n *\n *\n * @Annotation\n */\nvar ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n}, Query);\n/**\n * ViewChildren decorator and metadata.\n *\n *\n * @Annotation\n */\nvar ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n}, Query);\n/**\n * ViewChild decorator and metadata.\n *\n *\n * @Annotation\n */\nvar ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n    return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n}, Query);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Describes within the change detector which strategy will be used the next time change\n * detection is triggered.\n *\n */\n\n(function (ChangeDetectionStrategy) {\n    /**\n     * `OnPush` means that the change detector's mode will be initially set to `CheckOnce`.\n     */\n    ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n    /**\n     * `Default` means that the change detector's mode will be initially set to `CheckAlways`.\n     */\n    ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n})(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n/**\n * Describes the status of the detector.\n */\n\n(function (ChangeDetectorStatus) {\n    /**\n     * `CheckOnce` means that after calling detectChanges the mode of the change detector\n     * will become `Checked`.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n    /**\n     * `Checked` means that the change detector should be skipped until its mode changes to\n     * `CheckOnce`.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n    /**\n     * `CheckAlways` means that after calling detectChanges the mode of the change detector\n     * will remain `CheckAlways`.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n    /**\n     * `Detached` means that the change detector sub tree is not a part of the main tree and\n     * should be skipped.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n    /**\n     * `Errored` means that the change detector encountered an error checking a binding\n     * or calling a directive lifecycle method and is now in an inconsistent state. Change\n     * detectors in this state will no longer detect changes.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n    /**\n     * `Destroyed` means that the change detector is destroyed.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n})(exports.ÉµChangeDetectorStatus || (exports.ÉµChangeDetectorStatus = {}));\nfunction isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n    return changeDetectionStrategy == null ||\n        changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\n// Check __global first, because in Node tests both __global and __window may be defined and _global\n// should be __global in that case.\nvar _global = __global || __window || __self;\nvar promise = Promise.resolve(0);\nvar _symbolIterator = null;\nfunction getSymbolIterator() {\n    if (!_symbolIterator) {\n        var Symbol_1 = _global['Symbol'];\n        if (Symbol_1 && Symbol_1.iterator) {\n            _symbolIterator = Symbol_1.iterator;\n        }\n        else {\n            // es6-shim specific logic\n            var keys = Object.getOwnPropertyNames(Map.prototype);\n            for (var i = 0; i < keys.length; ++i) {\n                var key = keys[i];\n                if (key !== 'entries' && key !== 'size' &&\n                    Map.prototype[key] === Map.prototype['entries']) {\n                    _symbolIterator = key;\n                }\n            }\n        }\n    }\n    return _symbolIterator;\n}\nfunction scheduleMicroTask(fn) {\n    if (typeof Zone === 'undefined') {\n        // use promise to schedule microTask instead of use Zone\n        promise.then(function () { fn && fn.apply(null, null); });\n    }\n    else {\n        Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n    }\n}\n// JS has NaN !== NaN\nfunction looseIdentical(a, b) {\n    return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n}\nfunction stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    var res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    var newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Allows to refer to references which are not yet defined.\n *\n * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n * DI is declared,\n * but not yet defined. It is also used when the `token` which we use when creating a query is not\n * yet defined.\n *\n * ### Example\n * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n * @experimental\n */\nfunction forwardRef(forwardRefFn) {\n    forwardRefFn.__forward_ref__ = forwardRef;\n    forwardRefFn.toString = function () { return stringify(this()); };\n    return forwardRefFn;\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n *\n * Acts as the identity function when given a non-forward-ref value.\n *\n * ### Example ([live demo](http://plnkr.co/edit/GU72mJrk1fiodChcmiDR?p=preview))\n *\n * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n *\n * See: {@link forwardRef}\n * @experimental\n */\nfunction resolveForwardRef(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n        type.__forward_ref__ === forwardRef) {\n        return type();\n    }\n    else {\n        return type;\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Inject decorator and metadata.\n *\n *\n * @Annotation\n */\nvar Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n/**\n * Optional decorator and metadata.\n *\n *\n * @Annotation\n */\nvar Optional = makeParamDecorator('Optional');\n/**\n * Self decorator and metadata.\n *\n *\n * @Annotation\n */\nvar Self = makeParamDecorator('Self');\n/**\n * SkipSelf decorator and metadata.\n *\n *\n * @Annotation\n */\nvar SkipSelf = makeParamDecorator('SkipSelf');\n/**\n * Host decorator and metadata.\n *\n *\n * @Annotation\n */\nvar Host = makeParamDecorator('Host');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SOURCE = '__source';\nvar _THROW_IF_NOT_FOUND = new Object();\nvar THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n/**\n * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n *\n * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n * project.\n *\n * @experimental\n */\nvar INJECTOR = new InjectionToken('INJECTOR');\nvar NullInjector = /** @class */ (function () {\n    function NullInjector() {\n    }\n    NullInjector.prototype.get = function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n        if (notFoundValue === _THROW_IF_NOT_FOUND) {\n            throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n        }\n        return notFoundValue;\n    };\n    return NullInjector;\n}());\n/**\n * @usageNotes\n * ```\n * const injector: Injector = ...;\n * injector.get(...);\n * ```\n *\n * @description\n *\n * Concrete injectors implement this interface.\n *\n * For more details, see the {@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * ### Example\n *\n * {@example core/di/ts/injector_spec.ts region='Injector'}\n *\n * `Injector` returns itself when given `Injector` as a token:\n * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n *\n *\n */\nvar Injector = /** @class */ (function () {\n    function Injector() {\n    }\n    /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     */\n    Injector.create = function (options, parent) {\n        if (Array.isArray(options)) {\n            return new StaticInjector(options, parent);\n        }\n        else {\n            return new StaticInjector(options.providers, options.parent, options.name || null);\n        }\n    };\n    Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    Injector.NULL = new NullInjector();\n    Injector.ngInjectableDef = defineInjectable({\n        providedIn: 'any',\n        factory: function () { return inject(INJECTOR); },\n    });\n    return Injector;\n}());\nvar IDENT = function (value) {\n    return value;\n};\nvar EMPTY = [];\nvar CIRCULAR = IDENT;\nvar MULTI_PROVIDER_FN = function () {\n    return Array.prototype.slice.call(arguments);\n};\nvar GET_PROPERTY_NAME = {};\nvar USE_VALUE = getClosureSafeProperty({ provide: String, useValue: GET_PROPERTY_NAME });\nvar NG_TOKEN_PATH = 'ngTokenPath';\nvar NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\nvar NULL_INJECTOR = Injector.NULL;\nvar NEW_LINE = /\\n/gm;\nvar NO_NEW_LINE = 'Éµ';\nvar StaticInjector = /** @class */ (function () {\n    function StaticInjector(providers, parent, source) {\n        if (parent === void 0) { parent = NULL_INJECTOR; }\n        if (source === void 0) { source = null; }\n        this.parent = parent;\n        this.source = source;\n        var records = this._records = new Map();\n        records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n        records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n        recursivelyProcessProviders(records, providers);\n    }\n    StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var record = this._records.get(token);\n        try {\n            return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n        }\n        catch (e) {\n            var tokenPath = e[NG_TEMP_TOKEN_PATH];\n            if (token[SOURCE]) {\n                tokenPath.unshift(token[SOURCE]);\n            }\n            e.message = formatError('\\n' + e.message, tokenPath, this.source);\n            e[NG_TOKEN_PATH] = tokenPath;\n            e[NG_TEMP_TOKEN_PATH] = null;\n            throw e;\n        }\n    };\n    StaticInjector.prototype.toString = function () {\n        var tokens = [], records = this._records;\n        records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n        return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n    };\n    return StaticInjector;\n}());\nfunction resolveProvider(provider) {\n    var deps = computeDeps(provider);\n    var fn = IDENT;\n    var value = EMPTY;\n    var useNew = false;\n    var provide = resolveForwardRef(provider.provide);\n    if (USE_VALUE in provider) {\n        // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n        value = provider.useValue;\n    }\n    else if (provider.useFactory) {\n        fn = provider.useFactory;\n    }\n    else if (provider.useExisting) {\n        // Just use IDENT\n    }\n    else if (provider.useClass) {\n        useNew = true;\n        fn = resolveForwardRef(provider.useClass);\n    }\n    else if (typeof provide == 'function') {\n        useNew = true;\n        fn = provide;\n    }\n    else {\n        throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n    }\n    return { deps: deps, fn: fn, useNew: useNew, value: value };\n}\nfunction multiProviderMixError(token) {\n    return staticError('Cannot mix multi providers and regular providers', token);\n}\nfunction recursivelyProcessProviders(records, provider) {\n    if (provider) {\n        provider = resolveForwardRef(provider);\n        if (provider instanceof Array) {\n            // if we have an array recurse into the array\n            for (var i = 0; i < provider.length; i++) {\n                recursivelyProcessProviders(records, provider[i]);\n            }\n        }\n        else if (typeof provider === 'function') {\n            // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n            // error messages\n            throw staticError('Function/Class not supported', provider);\n        }\n        else if (provider && typeof provider === 'object' && provider.provide) {\n            // At this point we have what looks like a provider: {provide: ?, ....}\n            var token = resolveForwardRef(provider.provide);\n            var resolvedProvider = resolveProvider(provider);\n            if (provider.multi === true) {\n                // This is a multi provider.\n                var multiProvider = records.get(token);\n                if (multiProvider) {\n                    if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                        throw multiProviderMixError(token);\n                    }\n                }\n                else {\n                    // Create a placeholder factory which will look up the constituents of the multi provider.\n                    records.set(token, multiProvider = {\n                        token: provider.provide,\n                        deps: [],\n                        useNew: false,\n                        fn: MULTI_PROVIDER_FN,\n                        value: EMPTY\n                    });\n                }\n                // Treat the provider as the token.\n                token = provider;\n                multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n            }\n            var record = records.get(token);\n            if (record && record.fn == MULTI_PROVIDER_FN) {\n                throw multiProviderMixError(token);\n            }\n            records.set(token, resolvedProvider);\n        }\n        else {\n            throw staticError('Unexpected provider', provider);\n        }\n    }\n}\nfunction tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n    try {\n        return resolveToken(token, record, records, parent, notFoundValue, flags);\n    }\n    catch (e) {\n        // ensure that 'e' is of type Error.\n        if (!(e instanceof Error)) {\n            e = new Error(e);\n        }\n        var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n        path.unshift(token);\n        if (record && record.value == CIRCULAR) {\n            // Reset the Circular flag.\n            record.value = EMPTY;\n        }\n        throw e;\n    }\n}\nfunction resolveToken(token, record, records, parent, notFoundValue, flags) {\n    var value;\n    if (record && !(flags & 4 /* SkipSelf */)) {\n        // If we don't have a record, this implies that we don't own the provider hence don't know how\n        // to resolve it.\n        value = record.value;\n        if (value == CIRCULAR) {\n            throw Error(NO_NEW_LINE + 'Circular dependency');\n        }\n        else if (value === EMPTY) {\n            record.value = CIRCULAR;\n            var obj = undefined;\n            var useNew = record.useNew;\n            var fn = record.fn;\n            var depRecords = record.deps;\n            var deps = EMPTY;\n            if (depRecords.length) {\n                deps = [];\n                for (var i = 0; i < depRecords.length; i++) {\n                    var depRecord = depRecords[i];\n                    var options = depRecord.options;\n                    var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                    deps.push(tryResolveToken(\n                    // Current Token to resolve\n                    depRecord.token, \n                    // A record which describes how to resolve the token.\n                    // If undefined, this means we don't have such a record\n                    childRecord, \n                    // Other records we know about.\n                    records, \n                    // If we don't know how to resolve dependency and we should not check parent for it,\n                    // than pass in Null injector.\n                    !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, 0 /* Default */));\n                }\n            }\n            record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n        }\n    }\n    else if (!(flags & 2 /* Self */)) {\n        value = parent.get(token, notFoundValue, 0 /* Default */);\n    }\n    return value;\n    var _a;\n}\nfunction computeDeps(provider) {\n    var deps = EMPTY;\n    var providerDeps = provider.deps;\n    if (providerDeps && providerDeps.length) {\n        deps = [];\n        for (var i = 0; i < providerDeps.length; i++) {\n            var options = 6;\n            var token = resolveForwardRef(providerDeps[i]);\n            if (token instanceof Array) {\n                for (var j = 0, annotations = token; j < annotations.length; j++) {\n                    var annotation = annotations[j];\n                    if (annotation instanceof Optional || annotation == Optional) {\n                        options = options | 1 /* Optional */;\n                    }\n                    else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                        options = options & ~2 /* CheckSelf */;\n                    }\n                    else if (annotation instanceof Self || annotation == Self) {\n                        options = options & ~4 /* CheckParent */;\n                    }\n                    else if (annotation instanceof Inject) {\n                        token = annotation.token;\n                    }\n                    else {\n                        token = resolveForwardRef(annotation);\n                    }\n                }\n            }\n            deps.push({ token: token, options: options });\n        }\n    }\n    else if (provider.useExisting) {\n        var token = resolveForwardRef(provider.useExisting);\n        deps = [{ token: token, options: 6 /* Default */ }];\n    }\n    else if (!providerDeps && !(USE_VALUE in provider)) {\n        // useValue & useExisting are the only ones which are exempt from deps all others need it.\n        throw staticError('\\'deps\\' required', provider);\n    }\n    return deps;\n}\nfunction formatError(text, obj, source) {\n    if (source === void 0) { source = null; }\n    text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n    var context = stringify(obj);\n    if (obj instanceof Array) {\n        context = obj.map(stringify).join(' -> ');\n    }\n    else if (typeof obj === 'object') {\n        var parts = [];\n        for (var key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                var value = obj[key];\n                parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n            }\n        }\n        context = \"{\" + parts.join(', ') + \"}\";\n    }\n    return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n}\nfunction staticError(text, obj) {\n    return new Error(formatError(text, obj));\n}\nfunction getClosureSafeProperty(objWithPropertyToExtract) {\n    for (var key in objWithPropertyToExtract) {\n        if (objWithPropertyToExtract[key] === GET_PROPERTY_NAME) {\n            return key;\n        }\n    }\n    throw Error('!prop');\n}\n/**\n * Current injector value used by `inject`.\n * - `undefined`: it is an error to call `inject`\n * - `null`: `inject` can be called but there is no injector (limp-mode).\n * - Injector instance: Use the injector for resolution.\n */\nvar _currentInjector = undefined;\nfunction setCurrentInjector(injector) {\n    var former = _currentInjector;\n    _currentInjector = injector;\n    return former;\n}\nfunction inject(token, flags) {\n    if (flags === void 0) { flags = 0 /* Default */; }\n    if (_currentInjector === undefined) {\n        throw new Error(\"inject() must be called from an injection context\");\n    }\n    else if (_currentInjector === null) {\n        var injectableDef = token.ngInjectableDef;\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & 8 /* Optional */)\n            return null;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    else {\n        return _currentInjector.get(token, flags & 8 /* Optional */ ? null : undefined, flags);\n    }\n}\nfunction injectArgs(types) {\n    var args = [];\n    for (var i = 0; i < types.length; i++) {\n        var arg = types[i];\n        if (Array.isArray(arg)) {\n            if (arg.length === 0) {\n                throw new Error('Arguments array must have arguments.');\n            }\n            var type = undefined;\n            var flags = 0;\n            for (var j = 0; j < arg.length; j++) {\n                var meta = arg[j];\n                if (meta instanceof Optional || meta.__proto__.ngMetadataName === 'Optional') {\n                    flags |= 8 /* Optional */;\n                }\n                else if (meta instanceof SkipSelf || meta.__proto__.ngMetadataName === 'SkipSelf') {\n                    flags |= 4 /* SkipSelf */;\n                }\n                else if (meta instanceof Self || meta.__proto__.ngMetadataName === 'Self') {\n                    flags |= 2 /* Self */;\n                }\n                else if (meta instanceof Inject) {\n                    type = meta.token;\n                }\n                else {\n                    type = meta;\n                }\n            }\n            args.push(inject(type, flags));\n        }\n        else {\n            args.push(inject(arg));\n        }\n    }\n    return args;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Represents a type that a Component or other object is instances of.\n *\n * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n * the `MyCustomComponent` constructor function.\n *\n *\n */\nvar Type = Function;\nfunction isType(v) {\n    return typeof v === 'function';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Attention: These regex has to hold even if the code is minified!\n */\nvar DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\nvar INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{/;\nvar INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{[\\s\\S]*constructor\\s*\\(/;\nvar ReflectionCapabilities = /** @class */ (function () {\n    function ReflectionCapabilities(reflect) {\n        this._reflect = reflect || _global['Reflect'];\n    }\n    ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n    ReflectionCapabilities.prototype.factory = function (t) { return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new (t.bind.apply(t, __spread([void 0], args)))();\n    }; };\n    /** @internal */\n    ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n        var result;\n        if (typeof paramTypes === 'undefined') {\n            result = new Array(paramAnnotations.length);\n        }\n        else {\n            result = new Array(paramTypes.length);\n        }\n        for (var i = 0; i < result.length; i++) {\n            // TS outputs Object for parameters without types, while Traceur omits\n            // the annotations. For now we preserve the Traceur behavior to aid\n            // migration, but this can be revisited.\n            if (typeof paramTypes === 'undefined') {\n                result[i] = [];\n            }\n            else if (paramTypes[i] != Object) {\n                result[i] = [paramTypes[i]];\n            }\n            else {\n                result[i] = [];\n            }\n            if (paramAnnotations && paramAnnotations[i] != null) {\n                result[i] = result[i].concat(paramAnnotations[i]);\n            }\n        }\n        return result;\n    };\n    ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n        var typeStr = type.toString();\n        // If we have no decorators, we only have function.length as metadata.\n        // In that case, to detect whether a child class declared an own constructor or not,\n        // we need to look inside of that constructor to check whether it is\n        // just calling the parent.\n        // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n        // that sets 'design:paramtypes' to []\n        // if a class inherits from another class but has no ctor declared itself.\n        if (DELEGATE_CTOR.exec(typeStr) ||\n            (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n            return null;\n        }\n        // Prefer the direct API.\n        if (type.parameters && type.parameters !== parentCtor.parameters) {\n            return type.parameters;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        var tsickleCtorParams = type.ctorParameters;\n        if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n            // Newer tsickle uses a function closure\n            // Retain the non-function case for compatibility with older tsickle\n            var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n            var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n            var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n            });\n            return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n        }\n        // API for metadata created by invoking the decorators.\n        var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n        var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n            this._reflect.getOwnMetadata('design:paramtypes', type);\n        if (paramTypes || paramAnnotations) {\n            return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n        }\n        // If a class has no decorators, at least create metadata\n        // based on function.length.\n        // Note: We know that this is a real constructor as we checked\n        // the content of the constructor above.\n        return new Array(type.length).fill(undefined);\n    };\n    ReflectionCapabilities.prototype.parameters = function (type) {\n        // Note: only report metadata if we have at least one class decorator\n        // to stay in sync with the static reflector.\n        if (!isType(type)) {\n            return [];\n        }\n        var parentCtor = getParentCtor(type);\n        var parameters = this._ownParameters(type, parentCtor);\n        if (!parameters && parentCtor !== Object) {\n            parameters = this.parameters(parentCtor);\n        }\n        return parameters || [];\n    };\n    ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n            var annotations = typeOrFunc.annotations;\n            if (typeof annotations === 'function' && annotations.annotations) {\n                annotations = annotations.annotations;\n            }\n            return annotations;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n            return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n            return typeOrFunc[ANNOTATIONS];\n        }\n        return null;\n    };\n    ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return [];\n        }\n        var parentCtor = getParentCtor(typeOrFunc);\n        var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n        var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n        return parentAnnotations.concat(ownAnnotations);\n    };\n    ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if (typeOrFunc.propMetadata &&\n            typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n            var propMetadata = typeOrFunc.propMetadata;\n            if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                propMetadata = propMetadata.propMetadata;\n            }\n            return propMetadata;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if (typeOrFunc.propDecorators &&\n            typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n            var propDecorators_1 = typeOrFunc.propDecorators;\n            var propMetadata_1 = {};\n            Object.keys(propDecorators_1).forEach(function (prop) {\n                propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n            });\n            return propMetadata_1;\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n            return typeOrFunc[PROP_METADATA];\n        }\n        return null;\n    };\n    ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return {};\n        }\n        var parentCtor = getParentCtor(typeOrFunc);\n        var propMetadata = {};\n        if (parentCtor !== Object) {\n            var parentPropMetadata_1 = this.propMetadata(parentCtor);\n            Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                propMetadata[propName] = parentPropMetadata_1[propName];\n            });\n        }\n        var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n        if (ownPropMetadata) {\n            Object.keys(ownPropMetadata).forEach(function (propName) {\n                var decorators = [];\n                if (propMetadata.hasOwnProperty(propName)) {\n                    decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                }\n                decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                propMetadata[propName] = decorators;\n            });\n        }\n        return propMetadata;\n    };\n    ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n        return type instanceof Type && lcProperty in type.prototype;\n    };\n    ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n    ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n    ReflectionCapabilities.prototype.setter = function (name) {\n        return new Function('o', 'v', 'return o.' + name + ' = v;');\n    };\n    ReflectionCapabilities.prototype.method = function (name) {\n        var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n        return new Function('o', 'args', functionBody);\n    };\n    // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n    ReflectionCapabilities.prototype.importUri = function (type) {\n        // StaticSymbol\n        if (typeof type === 'object' && type['filePath']) {\n            return type['filePath'];\n        }\n        // Runtime type\n        return \"./\" + stringify(type);\n    };\n    ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n    ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n        return runtime;\n    };\n    ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n    return ReflectionCapabilities;\n}());\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n    if (!decoratorInvocations) {\n        return [];\n    }\n    return decoratorInvocations.map(function (decoratorInvocation) {\n        var decoratorType = decoratorInvocation.type;\n        var annotationCls = decoratorType.annotationCls;\n        var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n        return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n    });\n}\nfunction getParentCtor(ctor) {\n    var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n    var parentCtor = parentProto ? parentProto.constructor : null;\n    // Note: We always use `Object` as the null value\n    // to simplify checking later on.\n    return parentCtor || Object;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction getClosureSafeProperty$1(objWithPropertyToExtract, target) {\n    for (var key in objWithPropertyToExtract) {\n        if (objWithPropertyToExtract[key] === target) {\n            return key;\n        }\n    }\n    throw Error('Could not find renamed property on target object.');\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar GET_PROPERTY_NAME$1 = {};\nvar USE_VALUE$1 = getClosureSafeProperty$1({ provide: String, useValue: GET_PROPERTY_NAME$1 }, GET_PROPERTY_NAME$1);\nvar EMPTY_ARRAY = [];\nfunction convertInjectableProviderToFactory(type, provider) {\n    if (!provider) {\n        var reflectionCapabilities = new ReflectionCapabilities();\n        var deps_1 = reflectionCapabilities.parameters(type);\n        // TODO - convert to flags.\n        return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n    }\n    if (USE_VALUE$1 in provider) {\n        var valueProvider_1 = provider;\n        return function () { return valueProvider_1.useValue; };\n    }\n    else if (provider.useExisting) {\n        var existingProvider_1 = provider;\n        return function () { return inject(existingProvider_1.useExisting); };\n    }\n    else if (provider.useFactory) {\n        var factoryProvider_1 = provider;\n        return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY))); };\n    }\n    else if (provider.useClass) {\n        var classProvider_1 = provider;\n        var deps_2 = provider.deps;\n        if (!deps_2) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            deps_2 = reflectionCapabilities.parameters(type);\n        }\n        return function () {\n            return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            var _a;\n        };\n    }\n    else {\n        var deps_3 = provider.deps;\n        if (!deps_3) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            deps_3 = reflectionCapabilities.parameters(type);\n        }\n        return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n    }\n}\n/**\n * Supports @Injectable() in JIT mode for Render2.\n */\nfunction preR3InjectableCompile(injectableType, options) {\n    if (options && options.providedIn !== undefined && injectableType.ngInjectableDef === undefined) {\n        injectableType.ngInjectableDef = defineInjectable({\n            providedIn: options.providedIn,\n            factory: convertInjectableProviderToFactory(injectableType, options),\n        });\n    }\n}\n/**\n* Injectable decorator and metadata.\n*\n*\n* @Annotation\n*/\nvar Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) {\n    return (R3_COMPILE_INJECTABLE || preR3InjectableCompile)(type, meta);\n});\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction defineNgModule(def) {\n    var res = {\n        type: def.type,\n        bootstrap: def.bootstrap || [],\n        declarations: def.declarations || [],\n        imports: def.imports || [],\n        exports: def.exports || [],\n        transitiveCompileScope: undefined,\n    };\n    return res;\n}\n/**\n * Defines a schema that will allow:\n * - any non-Angular elements with a `-` in their name,\n * - any properties on elements with a `-` in their name which is the common rule for custom\n * elements.\n *\n *\n */\nvar CUSTOM_ELEMENTS_SCHEMA = {\n    name: 'custom-elements'\n};\n/**\n * Defines a schema that will allow any property on any element.\n *\n * @experimental\n */\nvar NO_ERRORS_SCHEMA = {\n    name: 'no-errors-schema'\n};\nfunction preR3NgModuleCompile(moduleType, metadata) {\n    var imports = (metadata && metadata.imports) || [];\n    if (metadata && metadata.exports) {\n        imports = __spread(imports, [metadata.exports]);\n    }\n    moduleType.ngInjectorDef = defineInjector({\n        factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n        providers: metadata && metadata.providers,\n        imports: imports,\n    });\n}\n/**\n * NgModule decorator and metadata.\n *\n *\n * @Annotation\n */\nvar NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, function (type, meta) { return (R3_COMPILE_NGMODULE || preR3NgModuleCompile)(type, meta); });\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// The functions in this file verify that the assumptions we are making\n// about state in an instruction are correct before implementing any logic.\n// They are meant only to be called in dev mode as sanity checks.\n\nfunction assertEqual(actual, expected, msg) {\n    if (actual != expected) {\n        throwError(msg);\n    }\n}\nfunction assertNotEqual(actual, expected, msg) {\n    if (actual == expected) {\n        throwError(msg);\n    }\n}\nfunction assertSame(actual, expected, msg) {\n    if (actual !== expected) {\n        throwError(msg);\n    }\n}\nfunction assertLessThan(actual, expected, msg) {\n    if (actual >= expected) {\n        throwError(msg);\n    }\n}\nfunction assertGreaterThan(actual, expected, msg) {\n    if (actual <= expected) {\n        throwError(msg);\n    }\n}\nfunction assertNull(actual, msg) {\n    if (actual != null) {\n        throwError(msg);\n    }\n}\nfunction assertNotNull(actual, msg) {\n    if (actual == null) {\n        throwError(msg);\n    }\n}\nfunction assertComponentType(actual, msg) {\n    if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n    if (!actual.ngComponentDef) {\n        throwError(msg);\n    }\n}\nfunction throwError(msg) {\n    debugger; // Left intentionally for better debugger experience.\n    throw new Error(\"ASSERTION ERROR: \" + msg);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n * TView.initHooks during directiveCreate.\n *\n * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n * directive index), then saved in the even indices of the initHooks array. The odd indices\n * hold the hook functions themselves.\n *\n * @param index The index of the directive in LView.data\n * @param hooks The static hooks map on the directive def\n * @param tView The current TView\n */\nfunction queueInitHooks(index, onInit, doCheck, tView) {\n    ngDevMode &&\n        assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n    if (onInit) {\n        (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n    }\n    if (doCheck) {\n        (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n        (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n    }\n}\n/**\n * Loops through the directives on a node and queues all their hooks except ngOnInit\n * and ngDoCheck, which are queued separately in directiveCreate.\n */\nfunction queueLifecycleHooks(flags, currentView) {\n    var tView = currentView.tView;\n    if (tView.firstTemplatePass === true) {\n        var start = flags >> 13;\n        var count = flags & 4095;\n        var end = start + count;\n        // It's necessary to loop through the directives at elementEnd() (rather than processing in\n        // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n        // hooks for projected components and directives must be called *before* their hosts.\n        for (var i = start; i < end; i++) {\n            var def = tView.directives[i];\n            queueContentHooks(def, tView, i);\n            queueViewHooks(def, tView, i);\n            queueDestroyHooks(def, tView, i);\n        }\n    }\n}\n/** Queues afterContentInit and afterContentChecked hooks on TView */\nfunction queueContentHooks(def, tView, i) {\n    if (def.afterContentInit) {\n        (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n    }\n    if (def.afterContentChecked) {\n        (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n        (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n    }\n}\n/** Queues afterViewInit and afterViewChecked hooks on TView */\nfunction queueViewHooks(def, tView, i) {\n    if (def.afterViewInit) {\n        (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n    }\n    if (def.afterViewChecked) {\n        (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n        (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n    }\n}\n/** Queues onDestroy hooks on TView */\nfunction queueDestroyHooks(def, tView, i) {\n    if (def.onDestroy != null) {\n        (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n    }\n}\n/**\n * Calls onInit and doCheck calls if they haven't already been called.\n *\n * @param currentView The current view\n */\nfunction executeInitHooks(currentView, tView, creationMode) {\n    if (currentView.flags & 16 /* RunInit */) {\n        executeHooks(currentView.directives, tView.initHooks, tView.checkHooks, creationMode);\n        currentView.flags &= ~16 /* RunInit */;\n    }\n}\n/**\n * Iterates over afterViewInit and afterViewChecked functions and calls them.\n *\n * @param currentView The current view\n */\nfunction executeHooks(data, allHooks, checkHooks, creationMode) {\n    var hooksToCall = creationMode ? allHooks : checkHooks;\n    if (hooksToCall) {\n        callHooks(data, hooksToCall);\n    }\n}\n/**\n * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n * creation mode.\n *\n * @param currentView The current view\n * @param arr The array in which the hooks are found\n */\nfunction callHooks(data, arr) {\n    for (var i = 0; i < arr.length; i += 2) {\n        arr[i + 1].call(data[arr[i]]);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ngDevModeResetPerfCounters = (typeof ngDevMode == 'undefined' && (function (global) {\n    function ngDevModeResetPerfCounters() {\n        global['ngDevMode'] = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n        };\n    }\n    ngDevModeResetPerfCounters();\n    return ngDevModeResetPerfCounters;\n})(typeof window != 'undefined' && window || typeof self != 'undefined' && self ||\n    typeof global != 'undefined' && global));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction assertNodeType(node, type) {\n    assertNotNull(node, 'should be called with a node');\n    assertEqual(node.tNode.type, type, \"should be a \" + typeName(type));\n}\nfunction assertNodeOfPossibleTypes(node) {\n    var types = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        types[_i - 1] = arguments[_i];\n    }\n    assertNotNull(node, 'should be called with a node');\n    var found = types.some(function (type) { return node.tNode.type === type; });\n    assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', '));\n}\nfunction typeName(type) {\n    if (type == 1 /* Projection */)\n        return 'Projection';\n    if (type == 0 /* Container */)\n        return 'Container';\n    if (type == 2 /* View */)\n        return 'View';\n    if (type == 3 /* Element */)\n        return 'Element';\n    return '<unknown>';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO: cleanup once the code is merged in angular/angular\nvar RendererStyleFlags3;\n(function (RendererStyleFlags3) {\n    RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n    RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n})(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n/** Returns whether the `renderer` is a `ProceduralRenderer3` */\nfunction isProceduralRenderer(renderer) {\n    return !!(renderer.listen);\n}\nvar domRendererFactory3 = {\n    createRenderer: function (hostElement, rendererType) { return document; }\n};\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n* Must use this method for CD (instead of === ) since NaN !== NaN\n*/\nfunction isDifferent(a, b) {\n    // NaN is the only value that is not equal to itself so the first\n    // test checks if both a and b are not NaN\n    return !(a !== a && b !== b) && a !== b;\n}\nfunction stringify$1(value) {\n    if (typeof value == 'function')\n        return value.name || value;\n    if (typeof value == 'string')\n        return value;\n    if (value == null)\n        return '';\n    return '' + value;\n}\n/**\n *  Function that throws a \"not implemented\" error so it's clear certain\n *  behaviors/methods aren't yet ready.\n *\n * @returns Not implemented error\n */\nfunction notImplemented() {\n    return new Error('NotImplemented');\n}\n/**\n * Flattens an array in non-recursive way. Input arrays are not modified.\n */\nfunction flatten(list) {\n    var result = [];\n    var i = 0;\n    while (i < list.length) {\n        var item = list[i];\n        if (Array.isArray(item)) {\n            if (item.length > 0) {\n                list = item.concat(list.slice(i + 1));\n                i = 0;\n            }\n            else {\n                i++;\n            }\n        }\n        else {\n            result.push(item);\n            i++;\n        }\n    }\n    return result;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns the first RNode following the given LNode in the same parent DOM element.\n *\n * This is needed in order to insert the given node with insertBefore.\n *\n * @param node The node whose following DOM node must be found.\n * @param stopNode A parent node at which the lookup in the tree should be stopped, or null if the\n * lookup should not be stopped until the result is found.\n * @returns RNode before which the provided node should be inserted or null if the lookup was\n * stopped\n * or if there is no native node after the given logical node in the same native parent.\n */\nfunction findNextRNodeSibling(node, stopNode) {\n    var currentNode = node;\n    while (currentNode && currentNode !== stopNode) {\n        var pNextOrParent = currentNode.pNextOrParent;\n        if (pNextOrParent) {\n            while (pNextOrParent.tNode.type !== 1 /* Projection */) {\n                var nativeNode = findFirstRNode(pNextOrParent);\n                if (nativeNode) {\n                    return nativeNode;\n                }\n                pNextOrParent = pNextOrParent.pNextOrParent;\n            }\n            currentNode = pNextOrParent;\n        }\n        else {\n            var currentSibling = getNextLNode(currentNode);\n            while (currentSibling) {\n                var nativeNode = findFirstRNode(currentSibling);\n                if (nativeNode) {\n                    return nativeNode;\n                }\n                currentSibling = getNextLNode(currentSibling);\n            }\n            var parentNode = getParentLNode(currentNode);\n            currentNode = null;\n            if (parentNode) {\n                var parentType = parentNode.tNode.type;\n                if (parentType === 0 /* Container */ || parentType === 2 /* View */) {\n                    currentNode = parentNode;\n                }\n            }\n        }\n    }\n    return null;\n}\n/** Retrieves the sibling node for the given node. */\nfunction getNextLNode(node) {\n    // View nodes don't have TNodes, so their next must be retrieved through their LView.\n    if (node.tNode.type === 2 /* View */) {\n        var lView = node.data;\n        return lView.next ? lView.next.node : null;\n    }\n    return node.tNode.next ? node.view.data[node.tNode.next.index] : null;\n}\n/** Retrieves the first child of a given node */\nfunction getChildLNode(node) {\n    if (node.tNode.child) {\n        var view = node.tNode.type === 2 /* View */ ? node.data : node.view;\n        return view.data[node.tNode.child.index];\n    }\n    return null;\n}\nfunction getParentLNode(node) {\n    if (node.tNode.index === -1)\n        return null;\n    var parent = node.tNode.parent;\n    return parent ? node.view.data[parent.index] : node.view.node;\n}\n/**\n * Get the next node in the LNode tree, taking into account the place where a node is\n * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n *\n * @param node The node whose next node in the LNode tree must be found.\n * @return LNode|null The next sibling in the LNode tree.\n */\nfunction getNextLNodeWithProjection(node) {\n    var pNextOrParent = node.pNextOrParent;\n    if (pNextOrParent) {\n        // The node is projected\n        var isLastProjectedNode = pNextOrParent.tNode.type === 1;\n        // returns pNextOrParent if we are not at the end of the list, null otherwise\n        return isLastProjectedNode ? null : pNextOrParent;\n    }\n    // returns node.next because the the node is not projected\n    return getNextLNode(node);\n}\n/**\n * Find the next node in the LNode tree, taking into account the place where a node is\n * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n *\n * If there is no sibling node, this function goes to the next sibling of the parent node...\n * until it reaches rootNode (at which point null is returned).\n *\n * @param initialNode The node whose following node in the LNode tree must be found.\n * @param rootNode The root node at which the lookup should stop.\n * @return LNode|null The following node in the LNode tree.\n */\nfunction getNextOrParentSiblingNode(initialNode, rootNode) {\n    var node = initialNode;\n    var nextNode = getNextLNodeWithProjection(node);\n    while (node && !nextNode) {\n        // if node.pNextOrParent is not null here, it is not the next node\n        // (because, at this point, nextNode is null, so it is the parent)\n        node = node.pNextOrParent || getParentLNode(node);\n        if (node === rootNode) {\n            return null;\n        }\n        nextNode = node && getNextLNodeWithProjection(node);\n    }\n    return nextNode;\n}\n/**\n * Returns the first RNode inside the given LNode.\n *\n * @param node The node whose first DOM node must be found\n * @returns RNode The first RNode of the given LNode or null if there is none.\n */\nfunction findFirstRNode(rootNode) {\n    var node = rootNode;\n    while (node) {\n        var nextNode = null;\n        if (node.tNode.type === 3 /* Element */) {\n            // A LElementNode has a matching RNode in LElementNode.native\n            return node.native;\n        }\n        else if (node.tNode.type === 0 /* Container */) {\n            var lContainerNode = node;\n            var childContainerData = lContainerNode.dynamicLContainerNode ?\n                lContainerNode.dynamicLContainerNode.data :\n                lContainerNode.data;\n            nextNode =\n                childContainerData.views.length ? getChildLNode(childContainerData.views[0]) : null;\n        }\n        else if (node.tNode.type === 1 /* Projection */) {\n            // For Projection look at the first projected node\n            nextNode = node.data.head;\n        }\n        else {\n            // Otherwise look at the first child\n            nextNode = getChildLNode(node);\n        }\n        node = nextNode === null ? getNextOrParentSiblingNode(node, rootNode) : nextNode;\n    }\n    return null;\n}\nfunction createTextNode(value, renderer) {\n    return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n        renderer.createTextNode(stringify$1(value));\n}\nfunction addRemoveViewFromContainer(container, rootNode, insertMode, beforeNode) {\n    ngDevMode && assertNodeType(container, 0 /* Container */);\n    ngDevMode && assertNodeType(rootNode, 2 /* View */);\n    var parentNode = container.data.renderParent;\n    var parent = parentNode ? parentNode.native : null;\n    var node = getChildLNode(rootNode);\n    if (parent) {\n        while (node) {\n            var nextNode = null;\n            var renderer = container.view.renderer;\n            if (node.tNode.type === 3 /* Element */) {\n                if (insertMode) {\n                    isProceduralRenderer(renderer) ?\n                        renderer.insertBefore(parent, node.native, beforeNode) :\n                        parent.insertBefore(node.native, beforeNode, true);\n                }\n                else {\n                    if (isProceduralRenderer(renderer)) {\n                        renderer.removeChild(parent, node.native);\n                        if (renderer.destroyNode) {\n                            ngDevMode && ngDevMode.rendererDestroyNode++;\n                            renderer.destroyNode(node.native);\n                        }\n                    }\n                    else {\n                        parent.removeChild(node.native);\n                    }\n                }\n                nextNode = getNextLNode(node);\n            }\n            else if (node.tNode.type === 0 /* Container */) {\n                // if we get to a container, it must be a root node of a view because we are only\n                // propagating down into child views / containers and not child elements\n                var childContainerData = node.data;\n                childContainerData.renderParent = parentNode;\n                nextNode =\n                    childContainerData.views.length ? getChildLNode(childContainerData.views[0]) : null;\n            }\n            else if (node.tNode.type === 1 /* Projection */) {\n                nextNode = node.data.head;\n            }\n            else {\n                nextNode = getChildLNode(node);\n            }\n            if (nextNode === null) {\n                node = getNextOrParentSiblingNode(node, rootNode);\n            }\n            else {\n                node = nextNode;\n            }\n        }\n    }\n}\n/**\n * Traverses down and up the tree of views and containers to remove listeners and\n * call onDestroy callbacks.\n *\n * Notes:\n *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n *  - Must process containers instead of their views to avoid splicing\n *  when views are destroyed and re-added.\n *  - Using a while loop because it's faster than recursion\n *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n *\n *  @param rootView The view to destroy\n */\nfunction destroyViewTree(rootView) {\n    // If the view has no children, we can clean it up and return early.\n    if (rootView.tView.childIndex === -1) {\n        return cleanUpView(rootView);\n    }\n    var viewOrContainer = getLViewChild(rootView);\n    while (viewOrContainer) {\n        var next = null;\n        if (viewOrContainer.views && viewOrContainer.views.length) {\n            next = viewOrContainer.views[0].data;\n        }\n        else if (viewOrContainer.tView && viewOrContainer.tView.childIndex > -1) {\n            next = getLViewChild(viewOrContainer);\n        }\n        else if (viewOrContainer.next) {\n            // Only move to the side and clean if operating below rootView -\n            // otherwise we would start cleaning up sibling views of the rootView.\n            cleanUpView(viewOrContainer);\n            next = viewOrContainer.next;\n        }\n        if (next == null) {\n            // If the viewOrContainer is the rootView and next is null it means that we are dealing\n            // with a root view that doesn't have children. We didn't descend into child views\n            // so no need to go back up the views tree.\n            while (viewOrContainer && !viewOrContainer.next && viewOrContainer !== rootView) {\n                cleanUpView(viewOrContainer);\n                viewOrContainer = getParentState(viewOrContainer, rootView);\n            }\n            cleanUpView(viewOrContainer || rootView);\n            next = viewOrContainer && viewOrContainer.next;\n        }\n        viewOrContainer = next;\n    }\n}\n/**\n * Inserts a view into a container.\n *\n * This adds the view to the container's array of active views in the correct\n * position. It also adds the view's elements to the DOM if the container isn't a\n * root node of another view (in that case, the view's elements will be added when\n * the container's parent view is added later).\n *\n * @param container The container into which the view should be inserted\n * @param viewNode The view to insert\n * @param index The index at which to insert the view\n * @returns The inserted view\n */\nfunction insertView(container, viewNode, index) {\n    var state = container.data;\n    var views = state.views;\n    if (index > 0) {\n        // This is a new view, we need to add it to the children.\n        views[index - 1].data.next = viewNode.data;\n    }\n    if (index < views.length) {\n        viewNode.data.next = views[index].data;\n        views.splice(index, 0, viewNode);\n    }\n    else {\n        views.push(viewNode);\n        viewNode.data.next = null;\n    }\n    // Notify query that a new view has been added\n    var lView = viewNode.data;\n    if (lView.queries) {\n        lView.queries.insertView(index);\n    }\n    // If the container's renderParent is null, we know that it is a root node of its own parent view\n    // and we should wait until that parent processes its nodes (otherwise, we will insert this view's\n    // nodes twice - once now and once when its parent inserts its views).\n    if (container.data.renderParent !== null) {\n        var beforeNode = findNextRNodeSibling(viewNode, container);\n        if (!beforeNode) {\n            var containerNextNativeNode = container.native;\n            if (containerNextNativeNode === undefined) {\n                containerNextNativeNode = container.native = findNextRNodeSibling(container, null);\n            }\n            beforeNode = containerNextNativeNode;\n        }\n        addRemoveViewFromContainer(container, viewNode, true, beforeNode);\n    }\n    return viewNode;\n}\n/**\n * Removes a view from a container.\n *\n * This method splices the view from the container's array of active views. It also\n * removes the view's elements from the DOM and conducts cleanup (e.g. removing\n * listeners, calling onDestroys).\n *\n * @param container The container from which to remove a view\n * @param removeIndex The index of the view to remove\n * @returns The removed view\n */\nfunction removeView(container, removeIndex) {\n    var views = container.data.views;\n    var viewNode = views[removeIndex];\n    if (removeIndex > 0) {\n        views[removeIndex - 1].data.next = viewNode.data.next;\n    }\n    views.splice(removeIndex, 1);\n    destroyViewTree(viewNode.data);\n    addRemoveViewFromContainer(container, viewNode, false);\n    // Notify query that view has been removed\n    var removedLview = viewNode.data;\n    if (removedLview.queries) {\n        removedLview.queries.removeView(removeIndex);\n    }\n    return viewNode;\n}\n/** Gets the child of the given LView */\nfunction getLViewChild(view) {\n    if (view.tView.childIndex === -1)\n        return null;\n    var hostNode = view.data[view.tView.childIndex];\n    return hostNode.data ? hostNode.data : hostNode.dynamicLContainerNode.data;\n}\n/**\n * Determines which LViewOrLContainer to jump to when traversing back up the\n * tree in destroyViewTree.\n *\n * Normally, the view's parent LView should be checked, but in the case of\n * embedded views, the container (which is the view node's parent, but not the\n * LView's parent) needs to be checked for a possible next property.\n *\n * @param state The LViewOrLContainer for which we need a parent state\n * @param rootView The rootView, so we don't propagate too far up the view tree\n * @returns The correct parent LViewOrLContainer\n */\nfunction getParentState(state, rootView) {\n    var node;\n    if ((node = state.node) && node.tNode.type === 2 /* View */) {\n        // if it's an embedded view, the state needs to go up to the container, in case the\n        // container has a next\n        return getParentLNode(node).data;\n    }\n    else {\n        // otherwise, use parent view for containers or component views\n        return state.parent === rootView ? null : state.parent;\n    }\n}\n/**\n * Removes all listeners and call all onDestroys in a given view.\n *\n * @param view The LView to clean up\n */\nfunction cleanUpView(view) {\n    removeListeners(view);\n    executeOnDestroys(view);\n    executePipeOnDestroys(view);\n    // For component views only, the local renderer is destroyed as clean up time.\n    if (view.tView && view.tView.id === -1 && isProceduralRenderer(view.renderer)) {\n        ngDevMode && ngDevMode.rendererDestroy++;\n        view.renderer.destroy();\n    }\n}\n/** Removes listeners and unsubscribes from output subscriptions */\nfunction removeListeners(view) {\n    var cleanup = view.cleanup;\n    if (cleanup != null) {\n        for (var i = 0; i < cleanup.length - 1; i += 2) {\n            if (typeof cleanup[i] === 'string') {\n                cleanup[i + 1].removeEventListener(cleanup[i], cleanup[i + 2], cleanup[i + 3]);\n                i += 2;\n            }\n            else {\n                cleanup[i].call(cleanup[i + 1]);\n            }\n        }\n        view.cleanup = null;\n    }\n}\n/** Calls onDestroy hooks for this view */\nfunction executeOnDestroys(view) {\n    var tView = view.tView;\n    var destroyHooks;\n    if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n        callHooks(view.directives, destroyHooks);\n    }\n}\n/** Calls pipe destroy hooks for this view */\nfunction executePipeOnDestroys(view) {\n    var pipeDestroyHooks = view.tView && view.tView.pipeDestroyHooks;\n    if (pipeDestroyHooks) {\n        callHooks(view.data, pipeDestroyHooks);\n    }\n}\n/**\n * Returns whether a native element should be inserted in the given parent.\n *\n * The native node can be inserted when its parent is:\n * - A regular element => Yes\n * - A component host element =>\n *    - if the `currentView` === the parent `view`: The element is in the content (vs the\n *      template)\n *      => don't add as the parent component will project if needed.\n *    - `currentView` !== the parent `view` => The element is in the template (vs the content),\n *      add it\n * - View element => delay insertion, will be done on `viewEnd()`\n *\n * @param parent The parent in which to insert the child\n * @param currentView The LView being processed\n * @return boolean Whether the child element should be inserted.\n */\nfunction canInsertNativeNode(parent, currentView) {\n    var parentIsElement = parent.tNode.type === 3;\n    return parentIsElement &&\n        (parent.view !== currentView || parent.data === null /* Regular Element. */);\n}\n/**\n * Appends the `child` element to the `parent`.\n *\n * The element insertion might be delayed {@link canInsertNativeNode}\n *\n * @param parent The parent to which to append the child\n * @param child The child that should be appended\n * @param currentView The current LView\n * @returns Whether or not the child was appended\n */\nfunction appendChild(parent, child, currentView) {\n    if (child !== null && canInsertNativeNode(parent, currentView)) {\n        // We only add element if not in View or not projected.\n        var renderer = currentView.renderer;\n        isProceduralRenderer(renderer) ? renderer.appendChild(parent.native, child) :\n            parent.native.appendChild(child);\n        return true;\n    }\n    return false;\n}\n/**\n * Appends a projected node to the DOM, or in the case of a projected container,\n * appends the nodes from all of the container's active views to the DOM.\n *\n * @param node The node to process\n * @param currentParent The last parent element to be processed\n * @param currentView Current LView\n */\nfunction appendProjectedNode(node, currentParent, currentView) {\n    if (node.tNode.type !== 0 /* Container */) {\n        appendChild(currentParent, node.native, currentView);\n    }\n    else {\n        // The node we are adding is a Container and we are adding it to Element which\n        // is not a component (no more re-projection).\n        // Alternatively a container is projected at the root of a component's template\n        // and can't be re-projected (as not content of any component).\n        // Assignee the final projection location in those cases.\n        var lContainer = node.data;\n        lContainer.renderParent = currentParent;\n        var views = lContainer.views;\n        for (var i = 0; i < views.length; i++) {\n            addRemoveViewFromContainer(node, views[i], true, null);\n        }\n    }\n    if (node.dynamicLContainerNode) {\n        node.dynamicLContainerNode.data.renderParent = currentParent;\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n    var nodeClassesLen = nodeClassAttrVal.length;\n    var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n    var matchEndIdx = matchIndex + cssClassToMatch.length;\n    if (matchIndex === -1 // no match\n        || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n        ||\n            (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n     {\n        return false;\n    }\n    return true;\n}\n/**\n * A utility function to match an Ivy node static data against a simple CSS selector\n *\n * @param node static data to match\n * @param selector\n * @returns true if node matches the selector.\n */\nfunction isNodeMatchingSelector(tNode, selector) {\n    ngDevMode && assertNotNull(selector[0], 'Selector should have a tag name');\n    var mode = 4;\n    var nodeAttrs = tNode.attrs;\n    var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SELECT_ONLY */) : -1;\n    // When processing \":not\" selectors, we skip to the next \":not\" if the\n    // current one doesn't match\n    var skipToNextSelector = false;\n    for (var i = 0; i < selector.length; i++) {\n        var current = selector[i];\n        if (typeof current === 'number') {\n            // If we finish processing a :not selector and it hasn't failed, return false\n            if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                return false;\n            }\n            // If we are skipping to the next :not() and this mode flag is positive,\n            // it's a part of the current :not() selector, and we should keep skipping\n            if (skipToNextSelector && isPositive(current))\n                continue;\n            skipToNextSelector = false;\n            mode = current | (mode & 1 /* NOT */);\n            continue;\n        }\n        if (skipToNextSelector)\n            continue;\n        if (mode & 4 /* ELEMENT */) {\n            mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n            if (current !== '' && current !== tNode.tagName) {\n                if (isPositive(mode))\n                    return false;\n                skipToNextSelector = true;\n            }\n        }\n        else {\n            var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n            var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n            if (attrIndexInNode === -1) {\n                if (isPositive(mode))\n                    return false;\n                skipToNextSelector = true;\n                continue;\n            }\n            var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n            if (selectorAttrValue !== '') {\n                var nodeAttrValue = selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx ?\n                    '' :\n                    nodeAttrs[attrIndexInNode + 1];\n                if (mode & 8 /* CLASS */ &&\n                    !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                    mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n        }\n    }\n    return isPositive(mode) || skipToNextSelector;\n}\nfunction isPositive(mode) {\n    return (mode & 1 /* NOT */) === 0;\n}\nfunction findAttrIndexInNode(name, attrs) {\n    var step = 2;\n    if (attrs === null)\n        return -1;\n    for (var i = 0; i < attrs.length; i += step) {\n        var attrName = attrs[i];\n        if (attrName === name)\n            return i;\n        if (attrName === 1 /* SELECT_ONLY */) {\n            step = 1;\n        }\n    }\n    return -1;\n}\nfunction isNodeMatchingSelectorList(tNode, selector) {\n    for (var i = 0; i < selector.length; i++) {\n        if (isNodeMatchingSelector(tNode, selector[i])) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction getProjectAsAttrValue(tNode) {\n    var nodeAttrs = tNode.attrs;\n    if (nodeAttrs != null) {\n        var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n        // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n        // (attribute names are stored at even indexes)\n        if ((ngProjectAsAttrIdx & 1) === 0) {\n            return nodeAttrs[ngProjectAsAttrIdx + 1];\n        }\n    }\n    return null;\n}\n/**\n * Checks a given node against matching selectors and returns\n * selector index (or 0 if none matched).\n *\n * This function takes into account the ngProjectAs attribute: if present its value will be compared\n * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n */\nfunction matchingSelectorIndex(tNode, selectors, textSelectors) {\n    var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n    for (var i = 0; i < selectors.length; i++) {\n        // if a node has the ngProjectAs attribute match it against unparsed selector\n        // match a node against a parsed selector only if ngProjectAs attribute is not present\n        if (ngProjectAsAttrVal === textSelectors[i] ||\n            ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n            return i + 1; // first matching selector \"captures\" a given node\n        }\n    }\n    return 0;\n}\n\n/** Called when directives inject each other (creating a circular dependency) */\nfunction throwCyclicDependencyError(token) {\n    throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n}\n/** Called when there are multiple component selectors that match a given node */\nfunction throwMultipleComponentError(tNode) {\n    throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n}\n/** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\nfunction throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, oldValue, currValue) {\n    if (checkNoChangesMode) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive (D) sets a property on all component instances using this constant as a key and the\n * component's host node (LElement) as the value. This is used in methods like detectChanges to\n * facilitate jumping from an instance to the host node.\n */\nvar NG_HOST_SYMBOL = '__ngHostLNode__';\n/**\n * A permanent marker promise which signifies that the current CD tree is\n * clean.\n */\nvar _CLEAN_PROMISE = Promise.resolve(null);\n/**\n * Directive and element indices for top-level directive.\n *\n * Saved here to avoid re-instantiating an array on every change detection run.\n */\nvar _ROOT_DIRECTIVE_INDICES = [0, 0];\n/**\n * Token set in currentMatches while dependencies are being resolved.\n *\n * If we visit a directive that has a value set to CIRCULAR, we know we've\n * already seen it, and thus have a circular dependency.\n */\nvar CIRCULAR$1 = '__CIRCULAR__';\n/**\n * This property gets set before entering a template.\n *\n * This renderer can be one of two varieties of Renderer3:\n *\n * - ObjectedOrientedRenderer3\n *\n * This is the native browser API style, e.g. operations are methods on individual objects\n * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n * size).\n *\n * - ProceduralRenderer3\n *\n * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n * that enables element manipulation. This also facilitates backwards compatibility with\n * Renderer2.\n */\nvar renderer;\nvar rendererFactory;\nfunction getRenderer() {\n    // top level variables should not be exported for performance reason (PERF_NOTES.md)\n    return renderer;\n}\nfunction getCurrentSanitizer() {\n    return currentView && currentView.sanitizer;\n}\n/** Used to set the parent property when nodes are created. */\nvar previousOrParentNode;\nfunction getPreviousOrParentNode() {\n    // top level variables should not be exported for performance reason (PERF_NOTES.md)\n    return previousOrParentNode;\n}\n/**\n * If `isParent` is:\n *  - `true`: then `previousOrParentNode` points to a parent node.\n *  - `false`: then `previousOrParentNode` points to previous node (sibling).\n */\nvar isParent;\n/**\n * Static data that corresponds to the instance-specific data array on an LView.\n *\n * Each node's static data is stored in tData at the same index that it's stored\n * in the data array. Any nodes that do not have static data store a null value in\n * tData to avoid a sparse array.\n */\nvar tData;\n/**\n * State of the current view being processed.\n *\n * NOTE: we cheat here and initialize it to `null` even thought the type does not\n * contain `null`. This is because we expect this value to be not `null` as soon\n * as we enter the view. Declaring the type as `null` would require us to place `!`\n * in most instructions since they all assume that `currentView` is defined.\n */\nvar currentView = null;\nvar currentQueries;\nfunction getCurrentQueries(QueryType) {\n    // top level variables should not be exported for performance reason (PERF_NOTES.md)\n    return currentQueries || (currentQueries = new QueryType());\n}\n/**\n * This property gets set before entering a template.\n */\nvar creationMode;\nfunction getCreationMode() {\n    // top level variables should not be exported for performance reason (PERF_NOTES.md)\n    return creationMode;\n}\n/**\n * An array of nodes (text, element, container, etc), pipes, their bindings, and\n * any local variables that need to be stored between invocations.\n */\nvar data;\n/**\n * An array of directive instances in the current view.\n *\n * These must be stored separately from LNodes because their presence is\n * unknown at compile-time and thus space cannot be reserved in data[].\n */\nvar directives;\n/**\n * When a view is destroyed, listeners need to be released and outputs need to be\n * unsubscribed. This cleanup array stores both listener data (in chunks of 4)\n * and output data (in chunks of 2) for a particular view. Combining the arrays\n * saves on memory (70 bytes per array) and on a few bytes of code size (for two\n * separate for loops).\n *\n * If it's a listener being stored:\n * 1st index is: event name to remove\n * 2nd index is: native element\n * 3rd index is: listener function\n * 4th index is: useCapture boolean\n *\n * If it's an output subscription:\n * 1st index is: unsubscribe function\n * 2nd index is: context for function\n */\nvar cleanup;\n/**\n * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n *\n * Necessary to support ChangeDetectorRef.checkNoChanges().\n */\nvar checkNoChangesMode = false;\n/** Whether or not this is the first time the current view has been processed. */\nvar firstTemplatePass = true;\n/**\n * Swap the current state with a new state.\n *\n * For performance reasons we store the state in the top level of the module.\n * This way we minimize the number of properties to read. Whenever a new view\n * is entered we have to store the state for later, and when the view is\n * exited the state has to be restored\n *\n * @param newView New state to become active\n * @param host Element to which the View is a child of\n * @returns the previous state;\n */\nfunction enterView(newView, host) {\n    var oldView = currentView;\n    data = newView && newView.data;\n    directives = newView && newView.directives;\n    tData = newView && newView.tView.data;\n    creationMode = newView && (newView.flags & 1 /* CreationMode */) === 1 /* CreationMode */;\n    firstTemplatePass = newView && newView.tView.firstTemplatePass;\n    cleanup = newView && newView.cleanup;\n    renderer = newView && newView.renderer;\n    if (host != null) {\n        previousOrParentNode = host;\n        isParent = true;\n    }\n    currentView = newView;\n    currentQueries = newView && newView.queries;\n    return oldView;\n}\n/**\n * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n * the direction of traversal (up or down the view tree) a bit clearer.\n *\n * @param newView New state to become active\n * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n * only, i.e. the first update will be done later. Only possible for dynamically created views.\n */\nfunction leaveView(newView, creationOnly) {\n    if (!creationOnly) {\n        if (!checkNoChangesMode) {\n            executeHooks(directives, currentView.tView.viewHooks, currentView.tView.viewCheckHooks, creationMode);\n        }\n        // Views are clean and in update mode after being checked, so these bits are cleared\n        currentView.flags &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n    }\n    currentView.flags |= 16 /* RunInit */;\n    currentView.bindingIndex = -1;\n    enterView(newView, null);\n}\n/**\n * Refreshes the view, executing the following steps in that order:\n * triggers init hooks, refreshes dynamic children, triggers content hooks, sets host bindings,\n * refreshes child components.\n * Note: view hooks are triggered later when leaving the view.\n * */\nfunction refreshView() {\n    var tView = currentView.tView;\n    if (!checkNoChangesMode) {\n        executeInitHooks(currentView, tView, creationMode);\n    }\n    refreshDynamicChildren();\n    if (!checkNoChangesMode) {\n        executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n    }\n    // This needs to be set before children are processed to support recursive components\n    tView.firstTemplatePass = firstTemplatePass = false;\n    setHostBindings(tView.hostBindings);\n    refreshChildComponents(tView.components);\n}\n/** Sets the host bindings for the current view. */\nfunction setHostBindings(bindings) {\n    if (bindings != null) {\n        var defs = currentView.tView.directives;\n        for (var i = 0; i < bindings.length; i += 2) {\n            var dirIndex = bindings[i];\n            var def = defs[dirIndex];\n            def.hostBindings && def.hostBindings(dirIndex, bindings[i + 1]);\n        }\n    }\n}\n/** Refreshes child components in the current view. */\nfunction refreshChildComponents(components) {\n    if (components != null) {\n        for (var i = 0; i < components.length; i += 2) {\n            componentRefresh(components[i], components[i + 1]);\n        }\n    }\n}\nfunction executeInitAndContentHooks() {\n    if (!checkNoChangesMode) {\n        var tView = currentView.tView;\n        executeInitHooks(currentView, tView, creationMode);\n        executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n    }\n}\nfunction createLView(renderer, tView, template, context, flags, sanitizer) {\n    var newView = {\n        parent: currentView,\n        flags: flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */,\n        node: null,\n        data: [],\n        directives: null,\n        tView: tView,\n        cleanup: null,\n        renderer: renderer,\n        tail: null,\n        next: null,\n        bindingIndex: -1,\n        template: template,\n        context: context,\n        queries: null,\n        injector: currentView && currentView.injector,\n        sanitizer: sanitizer || null\n    };\n    return newView;\n}\n/**\n * Creation of LNode object is extracted to a separate function so we always create LNode object\n * with the same shape\n * (same properties assigned in the same order).\n */\nfunction createLNodeObject(type, currentView, parent, native, state, queries) {\n    return {\n        native: native,\n        view: currentView,\n        nodeInjector: parent ? parent.nodeInjector : null,\n        data: state,\n        queries: queries,\n        tNode: null,\n        pNextOrParent: null,\n        dynamicLContainerNode: null\n    };\n}\nfunction createLNode(index, type, native, name, attrs, state) {\n    var parent = isParent ? previousOrParentNode :\n        previousOrParentNode && getParentLNode(previousOrParentNode);\n    // Parents cannot cross component boundaries because components will be used in multiple places,\n    // so it's only set if the view is the same.\n    var tParent = parent && parent.view === currentView ? parent.tNode : null;\n    var queries = (isParent ? currentQueries : previousOrParentNode && previousOrParentNode.queries) ||\n        parent && parent.queries && parent.queries.child();\n    var isState = state != null;\n    var node = createLNodeObject(type, currentView, parent, native, isState ? state : null, queries);\n    if (index === -1 || type === 2 /* View */) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in TView.node.\n        node.tNode = state.tView.node || createTNode(type, index, null, null, tParent, null);\n    }\n    else {\n        // This is an element or container or projection node\n        ngDevMode && assertDataNext(index);\n        data[index] = node;\n        // Every node adds a value to the static data array to avoid a sparse array\n        if (index >= tData.length) {\n            var tNode = tData[index] = createTNode(type, index, name, attrs, tParent, null);\n            if (!isParent && previousOrParentNode) {\n                var previousTNode = previousOrParentNode.tNode;\n                previousTNode.next = tNode;\n                if (previousTNode.dynamicContainerNode)\n                    previousTNode.dynamicContainerNode.next = tNode;\n            }\n        }\n        node.tNode = tData[index];\n        // Now link ourselves into the tree.\n        if (isParent) {\n            currentQueries = null;\n            if (previousOrParentNode.tNode.child == null && previousOrParentNode.view === currentView ||\n                previousOrParentNode.tNode.type === 2 /* View */) {\n                // We are in the same view, which means we are adding content node to the parent View.\n                previousOrParentNode.tNode.child = node.tNode;\n            }\n        }\n    }\n    // View nodes and host elements need to set their host node (components set host nodes later)\n    if ((type & 2 /* ViewOrElement */) === 2 /* ViewOrElement */ && isState) {\n        // Bit of a hack to bust through the readonly because there is a circular dep between\n        // LView and LNode.\n        ngDevMode && assertNull(state.node, 'LView.node should not have been initialized');\n        state.node = node;\n        if (firstTemplatePass)\n            state.tView.node = node.tNode;\n    }\n    previousOrParentNode = node;\n    isParent = true;\n    return node;\n}\n//////////////////////////\n//// Render\n//////////////////////////\n/**\n * Resets the application state.\n */\nfunction resetApplicationState() {\n    isParent = false;\n    previousOrParentNode = null;\n}\n/**\n *\n * @param hostNode Existing node to render into.\n * @param template Template function with the instructions.\n * @param context to pass into the template.\n * @param providedRendererFactory renderer factory to use\n * @param host The host element node to use\n * @param directives Directive defs that should be used for matching\n * @param pipes Pipe defs that should be used for matching\n */\n\n/**\n * Used for rendering embedded views (e.g. dynamically created views)\n *\n * Dynamically created views must store/retrieve their TViews differently from component views\n * because their template functions are nested in the template functions of their hosts, creating\n * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n * TView for dynamically created views on their host TNode, which only has one instance.\n */\nfunction renderEmbeddedTemplate(viewNode, tView, template, context, renderer, queries) {\n    var _isParent = isParent;\n    var _previousOrParentNode = previousOrParentNode;\n    var oldView;\n    var rf = 2;\n    try {\n        isParent = true;\n        previousOrParentNode = null;\n        if (viewNode == null) {\n            var lView = createLView(renderer, tView, template, context, 2 /* CheckAlways */, getCurrentSanitizer());\n            if (queries) {\n                lView.queries = queries.createView();\n            }\n            viewNode = createLNode(-1, 2 /* View */, null, null, null, lView);\n            rf = 1 /* Create */;\n        }\n        oldView = enterView(viewNode.data, viewNode);\n        template(rf, context);\n        if (rf & 2 /* Update */) {\n            refreshView();\n        }\n        else {\n            viewNode.data.tView.firstTemplatePass = firstTemplatePass = false;\n        }\n    }\n    finally {\n        // renderEmbeddedTemplate() is called twice in fact, once for creation only and then once for\n        // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n        var isCreationOnly = (rf & 1 /* Create */) === 1;\n        leaveView(oldView, isCreationOnly);\n        isParent = _isParent;\n        previousOrParentNode = _previousOrParentNode;\n    }\n    return viewNode;\n}\nfunction renderComponentOrTemplate(node, hostView, componentOrContext, template) {\n    var oldView = enterView(hostView, node);\n    try {\n        if (rendererFactory.begin) {\n            rendererFactory.begin();\n        }\n        if (template) {\n            template(getRenderFlags(hostView), componentOrContext);\n            refreshView();\n        }\n        else {\n            executeInitAndContentHooks();\n            // Element was stored at 0 in data and directive was stored at 0 in directives\n            // in renderComponent()\n            setHostBindings(_ROOT_DIRECTIVE_INDICES);\n            componentRefresh(0, 0);\n        }\n    }\n    finally {\n        if (rendererFactory.end) {\n            rendererFactory.end();\n        }\n        leaveView(oldView);\n    }\n}\n/**\n * This function returns the default configuration of rendering flags depending on when the\n * template is in creation mode or update mode. By default, the update block is run with the\n * creation block when the view is in creation mode. Otherwise, the update block is run\n * alone.\n *\n * Dynamically created views do NOT use this configuration (update block and create block are\n * always run separately).\n */\nfunction getRenderFlags(view) {\n    return view.flags & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n        2 /* Update */;\n}\n//////////////////////////\n//// Element\n//////////////////////////\n/**\n * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n *\n * @param index Index of the element in the data array\n * @param name Name of the DOM Node\n * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n * @param localRefs A set of local reference bindings on the element.\n *\n * Attributes and localRefs are passed as an array of strings where elements with an even index\n * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n * ['id', 'warning5', 'class', 'alert']\n */\nfunction elementStart(index, name, attrs, localRefs) {\n    ngDevMode &&\n        assertEqual(currentView.bindingIndex, -1, 'elements should be created before any bindings');\n    ngDevMode && ngDevMode.rendererCreateElement++;\n    var native = renderer.createElement(name);\n    ngDevMode && assertDataInRange(index - 1);\n    var node = createLNode(index, 3 /* Element */, native, name, attrs || null, null);\n    if (attrs)\n        setUpAttributes(native, attrs);\n    appendChild(getParentLNode(node), native, currentView);\n    createDirectivesAndLocals(localRefs);\n    return native;\n}\n/**\n * Creates directive instances and populates local refs.\n *\n * @param localRefs Local refs of the current node\n */\nfunction createDirectivesAndLocals(localRefs) {\n    var node = previousOrParentNode;\n    if (firstTemplatePass) {\n        ngDevMode && ngDevMode.firstTemplatePass++;\n        cacheMatchingDirectivesForNode(node.tNode, currentView.tView, localRefs || null);\n    }\n    else {\n        instantiateDirectivesDirectly();\n    }\n    saveResolvedLocalsInData();\n}\n/**\n * On first template pass, we match each node against available directive selectors and save\n * the resulting defs in the correct instantiation order for subsequent change detection runs\n * (so dependencies are always created before the directives that inject them).\n */\nfunction cacheMatchingDirectivesForNode(tNode, tView, localRefs) {\n    // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n    var exportsMap = localRefs ? { '': -1 } : null;\n    var matches = tView.currentMatches = findDirectiveMatches(tNode);\n    if (matches) {\n        for (var i = 0; i < matches.length; i += 2) {\n            var def = matches[i];\n            var valueIndex = i + 1;\n            resolveDirective(def, valueIndex, matches, tView);\n            saveNameToExportMap(matches[valueIndex], def, exportsMap);\n        }\n    }\n    if (exportsMap)\n        cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n}\n/** Matches the current node against all available selectors. */\nfunction findDirectiveMatches(tNode) {\n    var registry = currentView.tView.directiveRegistry;\n    var matches = null;\n    if (registry) {\n        for (var i = 0; i < registry.length; i++) {\n            var def = registry[i];\n            if (isNodeMatchingSelectorList(tNode, def.selectors)) {\n                if (def.template) {\n                    if (tNode.flags & 4096 /* isComponent */)\n                        throwMultipleComponentError(tNode);\n                    tNode.flags = 4096 /* isComponent */;\n                }\n                if (def.diPublic)\n                    def.diPublic(def);\n                (matches || (matches = [])).push(def, null);\n            }\n        }\n    }\n    return matches;\n}\nfunction resolveDirective(def, valueIndex, matches, tView) {\n    if (matches[valueIndex] === null) {\n        matches[valueIndex] = CIRCULAR$1;\n        var instance = def.factory();\n        (tView.directives || (tView.directives = [])).push(def);\n        return directiveCreate(matches[valueIndex] = tView.directives.length - 1, instance, def);\n    }\n    else if (matches[valueIndex] === CIRCULAR$1) {\n        // If we revisit this directive before it's resolved, we know it's circular\n        throwCyclicDependencyError(def.type);\n    }\n    return null;\n}\n/** Stores index of component's host element so it will be queued for view refresh during CD. */\nfunction queueComponentIndexForCheck(dirIndex) {\n    if (firstTemplatePass) {\n        (currentView.tView.components || (currentView.tView.components = [])).push(dirIndex, data.length - 1);\n    }\n}\n/** Stores index of directive and host element so it will be queued for binding refresh during CD.\n */\nfunction queueHostBindingForCheck(dirIndex) {\n    ngDevMode &&\n        assertEqual(firstTemplatePass, true, 'Should only be called in first template pass.');\n    (currentView.tView.hostBindings || (currentView.tView.hostBindings = [])).push(dirIndex, data.length - 1);\n}\n/** Sets the context for a ChangeDetectorRef to the given instance. */\nfunction initChangeDetectorIfExisting(injector, instance, view) {\n    if (injector && injector.changeDetectorRef != null) {\n        injector.changeDetectorRef._setComponentContext(view, instance);\n    }\n}\nfunction isComponent(tNode) {\n    return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n}\n/**\n * This function instantiates the given directives.\n */\nfunction instantiateDirectivesDirectly() {\n    var tNode = previousOrParentNode.tNode;\n    var count = tNode.flags & 4095;\n    if (count > 0) {\n        var start = tNode.flags >> 13;\n        var end = start + count;\n        var tDirectives = currentView.tView.directives;\n        for (var i = start; i < end; i++) {\n            var def = tDirectives[i];\n            directiveCreate(i, def.factory(), def);\n        }\n    }\n}\n/** Caches local names and their matching directive indices for query and template lookups. */\nfunction cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n    if (localRefs) {\n        var localNames = tNode.localNames = [];\n        // Local names must be stored in tNode in the same order that localRefs are defined\n        // in the template to ensure the data is loaded in the same slots as their refs\n        // in the template (for template queries).\n        for (var i = 0; i < localRefs.length; i += 2) {\n            var index = exportsMap[localRefs[i + 1]];\n            if (index == null)\n                throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n            localNames.push(localRefs[i], index);\n        }\n    }\n}\n/**\n * Builds up an export map as directives are created, so local refs can be quickly mapped\n * to their directive instances.\n */\nfunction saveNameToExportMap(index, def, exportsMap) {\n    if (exportsMap) {\n        if (def.exportAs)\n            exportsMap[def.exportAs] = index;\n        if (def.template)\n            exportsMap[''] = index;\n    }\n}\n/**\n * Takes a list of local names and indices and pushes the resolved local variable values\n * to data[] in the same order as they are loaded in the template with load().\n */\nfunction saveResolvedLocalsInData() {\n    var localNames = previousOrParentNode.tNode.localNames;\n    if (localNames) {\n        for (var i = 0; i < localNames.length; i += 2) {\n            var index = localNames[i + 1];\n            var value = index === -1 ? previousOrParentNode.native : directives[index];\n            data.push(value);\n        }\n    }\n}\n/**\n * Gets TView from a template function or creates a new TView\n * if it doesn't already exist.\n *\n * @param template The template from which to get static data\n * @param directives Directive defs that should be saved on TView\n * @param pipes Pipe defs that should be saved on TView\n * @returns TView\n */\nfunction getOrCreateTView(template, directives, pipes) {\n    // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n    // 1. It is a megamorphic call on each invocation.\n    // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n    //    outer template invocation, which means that no such property will exist\n    // Correct solution is to only put `ngPrivateData` on the Component template\n    // and not on embedded templates.\n    return template.ngPrivateData ||\n        (template.ngPrivateData = createTView(-1, directives, pipes));\n}\n/**\n * Creates a TView instance\n *\n * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n * @param directives Registry of directives for this view\n * @param pipes Registry of pipes for this view\n */\nfunction createTView(viewIndex, directives, pipes) {\n    ngDevMode && ngDevMode.tView++;\n    return {\n        id: viewIndex,\n        node: null,\n        data: [],\n        childIndex: -1,\n        bindingStartIndex: -1,\n        directives: null,\n        firstTemplatePass: true,\n        initHooks: null,\n        checkHooks: null,\n        contentHooks: null,\n        contentCheckHooks: null,\n        viewHooks: null,\n        viewCheckHooks: null,\n        destroyHooks: null,\n        pipeDestroyHooks: null,\n        hostBindings: null,\n        components: null,\n        directiveRegistry: typeof directives === 'function' ? directives() : directives,\n        pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n        currentMatches: null\n    };\n}\nfunction setUpAttributes(native, attrs) {\n    var isProc = isProceduralRenderer(renderer);\n    for (var i = 0; i < attrs.length; i += 2) {\n        var attrName = attrs[i];\n        if (attrName === 1 /* SELECT_ONLY */)\n            break;\n        if (attrName !== NG_PROJECT_AS_ATTR_NAME) {\n            var attrVal = attrs[i + 1];\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            isProc ?\n                renderer\n                    .setAttribute(native, attrName, attrVal) :\n                native.setAttribute(attrName, attrVal);\n        }\n    }\n}\nfunction createError(text, token) {\n    return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n}\n/**\n * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n *\n * @param elementOrSelector Render element or CSS selector to locate the element.\n */\nfunction locateHostElement(factory, elementOrSelector) {\n    ngDevMode && assertDataInRange(-1);\n    rendererFactory = factory;\n    var defaultRenderer = factory.createRenderer(null, null);\n    var rNode = typeof elementOrSelector === 'string' ?\n        (isProceduralRenderer(defaultRenderer) ?\n            defaultRenderer.selectRootElement(elementOrSelector) :\n            defaultRenderer.querySelector(elementOrSelector)) :\n        elementOrSelector;\n    if (ngDevMode && !rNode) {\n        if (typeof elementOrSelector === 'string') {\n            throw createError('Host node with selector not found:', elementOrSelector);\n        }\n        else {\n            throw createError('Host node is required:', elementOrSelector);\n        }\n    }\n    return rNode;\n}\n/**\n * Creates the host LNode.\n *\n * @param rNode Render host element.\n * @param def ComponentDef\n *\n * @returns LElementNode created\n */\nfunction hostElement(tag, rNode, def, sanitizer) {\n    resetApplicationState();\n    var node = createLNode(0, 3 /* Element */, rNode, null, null, createLView(renderer, getOrCreateTView(def.template, def.directiveDefs, def.pipeDefs), null, null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, sanitizer));\n    if (firstTemplatePass) {\n        node.tNode.flags = 4096 /* isComponent */;\n        if (def.diPublic)\n            def.diPublic(def);\n        currentView.tView.directives = [def];\n    }\n    return node;\n}\n/**\n * Adds an event listener to the current node.\n *\n * If an output exists on one of the node's directives, it also subscribes to the output\n * and saves the subscription for later cleanup.\n *\n * @param eventName Name of the event\n * @param listenerFn The function to be called when event emits\n * @param useCapture Whether or not to use capture in event listener.\n */\nfunction listener(eventName, listenerFn, useCapture) {\n    if (useCapture === void 0) { useCapture = false; }\n    ngDevMode && assertPreviousIsParent();\n    var node = previousOrParentNode;\n    var native = node.native;\n    // In order to match current behavior, native DOM event listeners must be added for all\n    // events (including outputs).\n    var cleanupFns = cleanup || (cleanup = currentView.cleanup = []);\n    ngDevMode && ngDevMode.rendererAddEventListener++;\n    if (isProceduralRenderer(renderer)) {\n        var wrappedListener = wrapListenerWithDirtyLogic(currentView, listenerFn);\n        var cleanupFn = renderer.listen(native, eventName, wrappedListener);\n        cleanupFns.push(cleanupFn, null);\n    }\n    else {\n        var wrappedListener = wrapListenerWithDirtyAndDefault(currentView, listenerFn);\n        native.addEventListener(eventName, wrappedListener, useCapture);\n        cleanupFns.push(eventName, native, wrappedListener, useCapture);\n    }\n    var tNode = node.tNode;\n    if (tNode.outputs === undefined) {\n        // if we create TNode here, inputs must be undefined so we know they still need to be\n        // checked\n        tNode.outputs = generatePropertyAliases(node.tNode.flags, 1 /* Output */);\n    }\n    var outputs = tNode.outputs;\n    var outputData;\n    if (outputs && (outputData = outputs[eventName])) {\n        createOutput(outputData, listenerFn);\n    }\n}\n/**\n * Iterates through the outputs associated with a particular event name and subscribes to\n * each output.\n */\nfunction createOutput(outputs, listener) {\n    for (var i = 0; i < outputs.length; i += 2) {\n        ngDevMode && assertDataInRange(outputs[i], directives);\n        var subscription = directives[outputs[i]][outputs[i + 1]].subscribe(listener);\n        cleanup.push(subscription.unsubscribe, subscription);\n    }\n}\n/** Mark the end of the element. */\nfunction elementEnd() {\n    if (isParent) {\n        isParent = false;\n    }\n    else {\n        ngDevMode && assertHasParent();\n        previousOrParentNode = getParentLNode(previousOrParentNode);\n    }\n    ngDevMode && assertNodeType(previousOrParentNode, 3 /* Element */);\n    var queries = previousOrParentNode.queries;\n    queries && queries.addNode(previousOrParentNode);\n    queueLifecycleHooks(previousOrParentNode.tNode.flags, currentView);\n}\n/**\n * Updates the value of removes an attribute on an Element.\n *\n * @param number index The index of the element in the data array\n * @param name name The name of the attribute.\n * @param value value The attribute is removed when value is `null` or `undefined`.\n *                  Otherwise the attribute value is set to the stringified value.\n * @param sanitizer An optional function used to sanitize the value.\n */\nfunction elementAttribute(index, name, value, sanitizer) {\n    if (value !== NO_CHANGE) {\n        var element = data[index];\n        if (value == null) {\n            ngDevMode && ngDevMode.rendererRemoveAttribute++;\n            isProceduralRenderer(renderer) ? renderer.removeAttribute(element.native, name) :\n                element.native.removeAttribute(name);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n            isProceduralRenderer(renderer) ? renderer.setAttribute(element.native, name, strValue) :\n                element.native.setAttribute(name, strValue);\n        }\n    }\n}\n/**\n * Update a property on an Element.\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n *\n * @param index The index of the element to update in the data array\n * @param propName Name of property. Because it is going to DOM, this is not subject to\n *        renaming as part of minification.\n * @param value New value to write.\n * @param sanitizer An optional function used to sanitize the value.\n */\nfunction elementProperty(index, propName, value, sanitizer) {\n    if (value === NO_CHANGE)\n        return;\n    var node = data[index];\n    var tNode = node.tNode;\n    // if tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n    // yet been checked\n    if (tNode && tNode.inputs === undefined) {\n        // mark inputs as checked\n        tNode.inputs = generatePropertyAliases(node.tNode.flags, 0 /* Input */);\n    }\n    var inputData = tNode && tNode.inputs;\n    var dataValue;\n    if (inputData && (dataValue = inputData[propName])) {\n        setInputsForProperty(dataValue, value);\n        markDirtyIfOnPush(node);\n    }\n    else {\n        // It is assumed that the sanitizer is only added when the compiler determines that the property\n        // is risky, so sanitization can be done without further checks.\n        value = sanitizer != null ? sanitizer(value) : value;\n        var native = node.native;\n        ngDevMode && ngDevMode.rendererSetProperty++;\n        isProceduralRenderer(renderer) ? renderer.setProperty(native, propName, value) :\n            (native.setProperty ? native.setProperty(propName, value) :\n                native[propName] = value);\n    }\n}\n/**\n * Constructs a TNode object from the arguments.\n *\n * @param type The type of the node\n * @param index The index of the TNode in TView.data\n * @param tagName The tag name of the node\n * @param attrs The attributes defined on this node\n * @param parent The parent of this node\n * @param tViews Any TViews attached to this node\n * @returns the TNode object\n */\nfunction createTNode(type, index, tagName, attrs, parent, tViews) {\n    ngDevMode && ngDevMode.tNode++;\n    return {\n        type: type,\n        index: index,\n        flags: 0,\n        tagName: tagName,\n        attrs: attrs,\n        localNames: null,\n        initialInputs: undefined,\n        inputs: undefined,\n        outputs: undefined,\n        tViews: tViews,\n        next: null,\n        child: null,\n        parent: parent,\n        dynamicContainerNode: null\n    };\n}\n/**\n * Given a list of directive indices and minified input names, sets the\n * input properties on the corresponding directives.\n */\nfunction setInputsForProperty(inputs, value) {\n    for (var i = 0; i < inputs.length; i += 2) {\n        ngDevMode && assertDataInRange(inputs[i], directives);\n        directives[inputs[i]][inputs[i + 1]] = value;\n    }\n}\n/**\n * Consolidates all inputs or outputs of all directives on this logical node.\n *\n * @param number lNodeFlags logical node flags\n * @param Direction direction whether to consider inputs or outputs\n * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n */\nfunction generatePropertyAliases(tNodeFlags, direction) {\n    var count = tNodeFlags & 4095;\n    var propStore = null;\n    if (count > 0) {\n        var start = tNodeFlags >> 13;\n        var end = start + count;\n        var isInput = direction === 0;\n        var defs = currentView.tView.directives;\n        for (var i = start; i < end; i++) {\n            var directiveDef = defs[i];\n            var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n            for (var publicName in propertyAliasMap) {\n                if (propertyAliasMap.hasOwnProperty(publicName)) {\n                    propStore = propStore || {};\n                    var internalName = propertyAliasMap[publicName];\n                    var hasProperty = propStore.hasOwnProperty(publicName);\n                    hasProperty ? propStore[publicName].push(i, internalName) :\n                        (propStore[publicName] = [i, internalName]);\n                }\n            }\n        }\n    }\n    return propStore;\n}\n/**\n * Add or remove a class in a `classList` on a DOM element.\n *\n * This instruction is meant to handle the [class.foo]=\"exp\" case\n *\n * @param index The index of the element to update in the data array\n * @param className Name of class to toggle. Because it is going to DOM, this is not subject to\n *        renaming as part of minification.\n * @param value A value indicating if a given class should be added or removed.\n */\nfunction elementClassNamed(index, className, value) {\n    if (value !== NO_CHANGE) {\n        var lElement = data[index];\n        if (value) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(lElement.native, className) :\n                lElement.native.classList.add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(lElement.native, className) :\n                lElement.native.classList.remove(className);\n        }\n    }\n}\n/**\n * Set the `className` property on a DOM element.\n *\n * This instruction is meant to handle the `[class]=\"exp\"` usage.\n *\n * `elementClass` instruction writes the value to the \"element's\" `className` property.\n *\n * @param index The index of the element to update in the data array\n * @param value A value indicating a set of classes which should be applied. The method overrides\n *   any existing classes. The value is stringified (`toString`) before it is applied to the\n *   element.\n */\nfunction elementClass(index, value) {\n    if (value !== NO_CHANGE) {\n        // TODO: This is a naive implementation which simply writes value to the `className`. In the\n        // future\n        // we will add logic here which would work with the animation code.\n        var lElement = data[index];\n        ngDevMode && ngDevMode.rendererSetClassName++;\n        isProceduralRenderer(renderer) ? renderer.setProperty(lElement.native, 'className', value) :\n            lElement.native['className'] = stringify$1(value);\n    }\n}\nfunction elementStyleNamed(index, styleName, value, suffixOrSanitizer) {\n    if (value !== NO_CHANGE) {\n        var lElement = data[index];\n        if (value == null) {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(lElement.native, styleName, RendererStyleFlags3.DashCase) :\n                lElement.native['style'].removeProperty(styleName);\n        }\n        else {\n            var strValue = typeof suffixOrSanitizer == 'function' ? suffixOrSanitizer(value) : stringify$1(value);\n            if (typeof suffixOrSanitizer == 'string')\n                strValue = strValue + suffixOrSanitizer;\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(lElement.native, styleName, strValue, RendererStyleFlags3.DashCase) :\n                lElement.native['style'].setProperty(styleName, strValue);\n        }\n    }\n}\n/**\n * Set the `style` property on a DOM element.\n *\n * This instruction is meant to handle the `[style]=\"exp\"` usage.\n *\n *\n * @param index The index of the element to update in the data array\n * @param value A value indicating if a given style should be added or removed.\n *   The expected shape of `value` is an object where keys are style names and the values\n *   are their corresponding values to set. If value is falsy, then the style is removed. An absence\n *   of style does not cause that style to be removed. `NO_CHANGE` implies that no update should be\n *   performed.\n */\nfunction elementStyle(index, value) {\n    if (value !== NO_CHANGE) {\n        // TODO: This is a naive implementation which simply writes value to the `style`. In the future\n        // we will add logic here which would work with the animation code.\n        var lElement = data[index];\n        if (isProceduralRenderer(renderer)) {\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            renderer.setProperty(lElement.native, 'style', value);\n        }\n        else {\n            var style = lElement.native['style'];\n            for (var i = 0, keys = Object.keys(value); i < keys.length; i++) {\n                var styleName = keys[i];\n                var styleValue = value[styleName];\n                if (styleValue == null) {\n                    ngDevMode && ngDevMode.rendererRemoveStyle++;\n                    style.removeProperty(styleName);\n                }\n                else {\n                    ngDevMode && ngDevMode.rendererSetStyle++;\n                    style.setProperty(styleName, styleValue);\n                }\n            }\n        }\n    }\n}\n//////////////////////////\n//// Text\n//////////////////////////\n/**\n * Create static text node\n *\n * @param index Index of the node in the data array.\n * @param value Value to write. This value will be stringified.\n */\nfunction text(index, value) {\n    ngDevMode &&\n        assertEqual(currentView.bindingIndex, -1, 'text nodes should be created before bindings');\n    ngDevMode && ngDevMode.rendererCreateTextNode++;\n    var textNode = createTextNode(value, renderer);\n    var node = createLNode(index, 3 /* Element */, textNode, null, null);\n    // Text nodes are self closing.\n    isParent = false;\n    appendChild(getParentLNode(node), textNode, currentView);\n}\n/**\n * Create text node with binding\n * Bindings should be handled externally with the proper interpolation(1-8) method\n *\n * @param index Index of the node in the data array.\n * @param value Stringified value to write.\n */\nfunction textBinding(index, value) {\n    if (value !== NO_CHANGE) {\n        ngDevMode && assertDataInRange(index);\n        var existingNode = data[index];\n        ngDevMode && assertNotNull(existingNode, 'LNode should exist');\n        ngDevMode && assertNotNull(existingNode.native, 'native element should exist');\n        ngDevMode && ngDevMode.rendererSetText++;\n        isProceduralRenderer(renderer) ? renderer.setValue(existingNode.native, stringify$1(value)) :\n            existingNode.native.textContent = stringify$1(value);\n    }\n}\n//////////////////////////\n//// Directive\n//////////////////////////\n/**\n * Create a directive.\n *\n * NOTE: directives can be created in order other than the index order. They can also\n *       be retrieved before they are created in which case the value will be null.\n *\n * @param directive The directive instance.\n * @param directiveDef DirectiveDef object which contains information about the template.\n */\nfunction directiveCreate(index, directive, directiveDef) {\n    var instance = baseDirectiveCreate(index, directive, directiveDef);\n    ngDevMode && assertNotNull(previousOrParentNode.tNode, 'previousOrParentNode.tNode');\n    var tNode = previousOrParentNode.tNode;\n    var isComponent = directiveDef.template;\n    if (isComponent) {\n        addComponentLogic(index, directive, directiveDef);\n    }\n    if (firstTemplatePass) {\n        // Init hooks are queued now so ngOnInit is called in host components before\n        // any projected components.\n        queueInitHooks(index, directiveDef.onInit, directiveDef.doCheck, currentView.tView);\n        if (directiveDef.hostBindings)\n            queueHostBindingForCheck(index);\n    }\n    if (tNode && tNode.attrs) {\n        setInputsFromAttrs(index, instance, directiveDef.inputs, tNode);\n    }\n    return instance;\n}\nfunction addComponentLogic(index, instance, def) {\n    var tView = getOrCreateTView(def.template, def.directiveDefs, def.pipeDefs);\n    // Only component views should be added to the view tree directly. Embedded views are\n    // accessed through their containers because they may be removed / re-added later.\n    var hostView = addToViewTree(currentView, previousOrParentNode.tNode.index, createLView(rendererFactory.createRenderer(previousOrParentNode.native, def.rendererType), tView, null, null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, getCurrentSanitizer()));\n    // We need to set the host node/data here because when the component LNode was created,\n    // we didn't yet know it was a component (just an element).\n    previousOrParentNode.data = hostView;\n    hostView.node = previousOrParentNode;\n    if (firstTemplatePass)\n        tView.node = previousOrParentNode.tNode;\n    initChangeDetectorIfExisting(previousOrParentNode.nodeInjector, instance, hostView);\n    if (firstTemplatePass)\n        queueComponentIndexForCheck(index);\n}\n/**\n * A lighter version of directiveCreate() that is used for the root component\n *\n * This version does not contain features that we don't already support at root in\n * current Angular. Example: local refs and inputs on root component.\n */\nfunction baseDirectiveCreate(index, directive, directiveDef) {\n    ngDevMode &&\n        assertEqual(currentView.bindingIndex, -1, 'directives should be created before any bindings');\n    ngDevMode && assertPreviousIsParent();\n    Object.defineProperty(directive, NG_HOST_SYMBOL, { enumerable: false, value: previousOrParentNode });\n    if (directives == null)\n        currentView.directives = directives = [];\n    ngDevMode && assertDataNext(index, directives);\n    directives[index] = directive;\n    if (firstTemplatePass) {\n        var flags = previousOrParentNode.tNode.flags;\n        if ((flags & 4095 /* DirectiveCountMask */) === 0) {\n            // When the first directive is created:\n            // - save the index,\n            // - set the number of directives to 1\n            previousOrParentNode.tNode.flags =\n                index << 13 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ | 1;\n        }\n        else {\n            // Only need to bump the size when subsequent directives are created\n            ngDevMode && assertNotEqual(flags & 4095 /* DirectiveCountMask */, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n            previousOrParentNode.tNode.flags++;\n        }\n    }\n    else {\n        var diPublic = directiveDef.diPublic;\n        if (diPublic)\n            diPublic(directiveDef);\n    }\n    if (directiveDef.attributes != null && previousOrParentNode.tNode.type == 3 /* Element */) {\n        setUpAttributes(previousOrParentNode.native, directiveDef.attributes);\n    }\n    return directive;\n}\n/**\n * Sets initial input properties on directive instances from attribute data\n *\n * @param directiveIndex Index of the directive in directives array\n * @param instance Instance of the directive on which to set the initial inputs\n * @param inputs The list of inputs from the directive def\n * @param tNode The static data for this node\n */\nfunction setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n    var initialInputData = tNode.initialInputs;\n    if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n        initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n    }\n    var initialInputs = initialInputData[directiveIndex];\n    if (initialInputs) {\n        for (var i = 0; i < initialInputs.length; i += 2) {\n            instance[initialInputs[i]] = initialInputs[i + 1];\n        }\n    }\n}\n/**\n * Generates initialInputData for a node and stores it in the template's static storage\n * so subsequent template invocations don't have to recalculate it.\n *\n * initialInputData is an array containing values that need to be set as input properties\n * for directives on this node, but only once on creation. We need this array to support\n * the case where you set an @Input property of a directive using attribute-like syntax.\n * e.g. if you have a `name` @Input, you can set it once like this:\n *\n * <my-component name=\"Bess\"></my-component>\n *\n * @param directiveIndex Index to store the initial input data\n * @param inputs The list of inputs from the directive def\n * @param tNode The static data on this node\n */\nfunction generateInitialInputs(directiveIndex, inputs, tNode) {\n    var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n    initialInputData[directiveIndex] = null;\n    var attrs = tNode.attrs;\n    for (var i = 0; i < attrs.length; i += 2) {\n        var attrName = attrs[i];\n        var minifiedInputName = inputs[attrName];\n        var attrValue = attrs[i + 1];\n        if (attrName === 1 /* SELECT_ONLY */)\n            break;\n        if (minifiedInputName !== undefined) {\n            var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n            inputsToStore.push(minifiedInputName, attrValue);\n        }\n    }\n    return initialInputData;\n}\n//////////////////////////\n//// ViewContainer & View\n//////////////////////////\n/**\n * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n *\n * @param parentLNode the LNode in which the container's content will be rendered\n * @param currentView The parent view of the LContainer\n * @param template Optional the inline template (ng-template instruction case)\n * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n * @returns LContainer\n */\nfunction createLContainer(parentLNode, currentView, template, isForViewContainerRef) {\n    ngDevMode && assertNotNull(parentLNode, 'containers should have a parent');\n    return {\n        views: [],\n        nextIndex: isForViewContainerRef ? null : 0,\n        // If the direct parent of the container is a view, its views will need to be added\n        // through insertView() when its parent view is being inserted:\n        renderParent: canInsertNativeNode(parentLNode, currentView) ? parentLNode : null,\n        template: template == null ? null : template,\n        next: null,\n        parent: currentView,\n        queries: null\n    };\n}\n/**\n * Creates an LContainerNode.\n *\n * Only `LViewNodes` can go into `LContainerNodes`.\n *\n * @param index The index of the container in the data array\n * @param template Optional inline template\n * @param tagName The name of the container element, if applicable\n * @param attrs The attrs attached to the container, if applicable\n * @param localRefs A set of local reference bindings on the element.\n */\nfunction container(index, template, tagName, attrs, localRefs) {\n    ngDevMode &&\n        assertEqual(currentView.bindingIndex, -1, 'container nodes should be created before any bindings');\n    var currentParent = isParent ? previousOrParentNode : getParentLNode(previousOrParentNode);\n    var lContainer = createLContainer(currentParent, currentView, template);\n    var node = createLNode(index, 0 /* Container */, undefined, tagName || null, attrs || null, lContainer);\n    if (firstTemplatePass && template == null)\n        node.tNode.tViews = [];\n    // Containers are added to the current view tree instead of their embedded views\n    // because views can be removed and re-inserted.\n    addToViewTree(currentView, index, node.data);\n    var queries = node.queries;\n    if (queries) {\n        // prepare place for matching nodes from views inserted into a given container\n        lContainer.queries = queries.container();\n    }\n    createDirectivesAndLocals(localRefs);\n    isParent = false;\n    ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n    if (queries) {\n        // check if a given container node matches\n        queries.addNode(node);\n    }\n}\n/**\n * Sets a container up to receive views.\n *\n * @param index The index of the container in the data array\n */\nfunction containerRefreshStart(index) {\n    ngDevMode && assertDataInRange(index);\n    previousOrParentNode = data[index];\n    ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n    isParent = true;\n    previousOrParentNode.data.nextIndex = 0;\n    ngDevMode && assertSame(previousOrParentNode.native, undefined, \"the container's native element should not have been set yet.\");\n    if (!checkNoChangesMode) {\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        executeInitHooks(currentView, currentView.tView, creationMode);\n    }\n}\n/**\n * Marks the end of the LContainerNode.\n *\n * Marking the end of LContainerNode is the time when to child Views get inserted or removed.\n */\nfunction containerRefreshEnd() {\n    if (isParent) {\n        isParent = false;\n    }\n    else {\n        ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n        ngDevMode && assertHasParent();\n        previousOrParentNode = getParentLNode(previousOrParentNode);\n    }\n    ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n    var container = previousOrParentNode;\n    container.native = undefined;\n    ngDevMode && assertNodeType(container, 0 /* Container */);\n    var nextIndex = container.data.nextIndex;\n    // remove extra views at the end of the container\n    while (nextIndex < container.data.views.length) {\n        removeView(container, nextIndex);\n    }\n}\nfunction refreshDynamicChildren() {\n    for (var current = getLViewChild(currentView); current !== null; current = current.next) {\n        // Note: current can be a LView or a LContainer, but here we are only interested in LContainer.\n        // The distinction is made because nextIndex and views do not exist on LView.\n        if (isLContainer(current)) {\n            var container_1 = current;\n            for (var i = 0; i < container_1.views.length; i++) {\n                var lViewNode = container_1.views[i];\n                // The directives and pipes are not needed here as an existing view is only being refreshed.\n                var dynamicView = lViewNode.data;\n                ngDevMode && assertNotNull(dynamicView.tView, 'TView must be allocated');\n                renderEmbeddedTemplate(lViewNode, dynamicView.tView, dynamicView.template, dynamicView.context, renderer);\n            }\n        }\n    }\n}\nfunction isLContainer(node) {\n    return node.nextIndex == null && node.views != null;\n}\n/**\n * Looks for a view with a given view block id inside a provided LContainer.\n * Removes views that need to be deleted in the process.\n *\n * @param containerNode where to search for views\n * @param startIdx starting index in the views array to search from\n * @param viewBlockId exact view block id to look for\n * @returns index of a found view or -1 if not found\n */\nfunction scanForView(containerNode, startIdx, viewBlockId) {\n    var views = containerNode.data.views;\n    for (var i = startIdx; i < views.length; i++) {\n        var viewAtPositionId = views[i].data.tView.id;\n        if (viewAtPositionId === viewBlockId) {\n            return views[i];\n        }\n        else if (viewAtPositionId < viewBlockId) {\n            // found a view that should not be at this position - remove\n            removeView(containerNode, i);\n        }\n        else {\n            // found a view with id greater than the one we are searching for\n            // which means that required view doesn't exist and can't be found at\n            // later positions in the views array - stop the search here\n            break;\n        }\n    }\n    return null;\n}\n/**\n * Marks the start of an embedded view.\n *\n * @param viewBlockId The ID of this view\n * @return boolean Whether or not this view is in creation mode\n */\nfunction embeddedViewStart(viewBlockId) {\n    var container = (isParent ? previousOrParentNode : getParentLNode(previousOrParentNode));\n    ngDevMode && assertNodeType(container, 0 /* Container */);\n    var lContainer = container.data;\n    var viewNode = scanForView(container, lContainer.nextIndex, viewBlockId);\n    if (viewNode) {\n        previousOrParentNode = viewNode;\n        ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n        isParent = true;\n        enterView(viewNode.data, viewNode);\n    }\n    else {\n        // When we create a new LView, we always reset the state of the instructions.\n        var newView = createLView(renderer, getOrCreateEmbeddedTView(viewBlockId, container), null, null, 2 /* CheckAlways */, getCurrentSanitizer());\n        if (lContainer.queries) {\n            newView.queries = lContainer.queries.createView();\n        }\n        enterView(newView, viewNode = createLNode(viewBlockId, 2 /* View */, null, null, null, newView));\n    }\n    return getRenderFlags(viewNode.data);\n}\n/**\n * Initialize the TView (e.g. static data) for the active embedded view.\n *\n * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n * static data for a particular node would overwrite the static data for a node in the view above\n * it with the same index (since it's in the same template).\n *\n * @param viewIndex The index of the TView in TNode.tViews\n * @param parent The parent container in which to look for the view's static data\n * @returns TView\n */\nfunction getOrCreateEmbeddedTView(viewIndex, parent) {\n    ngDevMode && assertNodeType(parent, 0 /* Container */);\n    var containerTViews = parent.tNode.tViews;\n    ngDevMode && assertNotNull(containerTViews, 'TView expected');\n    ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n    if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n        var tView = currentView.tView;\n        containerTViews[viewIndex] =\n            createTView(viewIndex, tView.directiveRegistry, tView.pipeRegistry);\n    }\n    return containerTViews[viewIndex];\n}\n/** Marks the end of an embedded view. */\nfunction embeddedViewEnd() {\n    refreshView();\n    isParent = false;\n    var viewNode = previousOrParentNode = currentView.node;\n    var containerNode = getParentLNode(previousOrParentNode);\n    if (containerNode) {\n        ngDevMode && assertNodeType(viewNode, 2 /* View */);\n        ngDevMode && assertNodeType(containerNode, 0 /* Container */);\n        var lContainer = containerNode.data;\n        if (creationMode) {\n            // When projected nodes are going to be inserted, the renderParent of the dynamic container\n            // used by the ViewContainerRef must be set.\n            setRenderParentInProjectedNodes(lContainer.renderParent, viewNode);\n            // it is a new view, insert it into collection of views for a given container\n            insertView(containerNode, viewNode, lContainer.nextIndex);\n        }\n        lContainer.nextIndex++;\n    }\n    leaveView(currentView.parent);\n    ngDevMode && assertEqual(isParent, false, 'isParent');\n    ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n}\n/**\n * For nodes which are projected inside an embedded view, this function sets the renderParent\n * of their dynamic LContainerNode.\n * @param renderParent the renderParent of the LContainer which contains the embedded view.\n * @param viewNode the embedded view.\n */\nfunction setRenderParentInProjectedNodes(renderParent, viewNode) {\n    if (renderParent != null) {\n        var node = getChildLNode(viewNode);\n        while (node) {\n            if (node.tNode.type === 1 /* Projection */) {\n                var nodeToProject = node.data.head;\n                var lastNodeToProject = node.data.tail;\n                while (nodeToProject) {\n                    if (nodeToProject.dynamicLContainerNode) {\n                        nodeToProject.dynamicLContainerNode.data.renderParent = renderParent;\n                    }\n                    nodeToProject = nodeToProject === lastNodeToProject ? null : nodeToProject.pNextOrParent;\n                }\n            }\n            node = getNextLNode(node);\n        }\n    }\n}\n/////////////\n/**\n * Refreshes components by entering the component view and processing its bindings, queries, etc.\n *\n * @param directiveIndex\n * @param elementIndex\n */\nfunction componentRefresh(directiveIndex, elementIndex) {\n    ngDevMode && assertDataInRange(elementIndex);\n    var element = data[elementIndex];\n    ngDevMode && assertNodeType(element, 3 /* Element */);\n    ngDevMode && assertNotNull(element.data, \"Component's host node should have an LView attached.\");\n    var hostView = element.data;\n    // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n    if (viewAttached(hostView) && hostView.flags & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n        ngDevMode && assertDataInRange(directiveIndex, directives);\n        var def = currentView.tView.directives[directiveIndex];\n        detectChangesInternal(hostView, element, def, getDirectiveInstance(directives[directiveIndex]));\n    }\n}\n/** Returns a boolean for whether the view is attached */\nfunction viewAttached(view) {\n    return (view.flags & 8 /* Attached */) === 8 /* Attached */;\n}\n/**\n * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n * It takes all the selectors from the entire component's template and decides where\n * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n * backed by a selector).\n *\n * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n * un-parsed form.\n *\n * The parsed form is needed for efficient matching of a node against a given CSS selector.\n * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n *\n * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n * drawbacks:\n * - having only a textual form would require runtime parsing of CSS selectors;\n * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n * template author).\n *\n * @param selectors A collection of parsed CSS selectors\n * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n */\nfunction projectionDef(index, selectors, textSelectors) {\n    var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n    var distributedNodes = new Array(noOfNodeBuckets);\n    for (var i = 0; i < noOfNodeBuckets; i++) {\n        distributedNodes[i] = [];\n    }\n    var componentNode = findComponentHost(currentView);\n    var componentChild = getChildLNode(componentNode);\n    while (componentChild !== null) {\n        // execute selector matching logic if and only if:\n        // - there are selectors defined\n        // - a node has a tag name / attributes that can be matched\n        if (selectors && componentChild.tNode) {\n            var matchedIdx = matchingSelectorIndex(componentChild.tNode, selectors, textSelectors);\n            distributedNodes[matchedIdx].push(componentChild);\n        }\n        else {\n            distributedNodes[0].push(componentChild);\n        }\n        componentChild = getNextLNode(componentChild);\n    }\n    ngDevMode && assertDataNext(index);\n    data[index] = distributedNodes;\n}\n/**\n * Updates the linked list of a projection node, by appending another linked list.\n *\n * @param projectionNode Projection node whose projected nodes linked list has to be updated\n * @param appendedFirst First node of the linked list to append.\n * @param appendedLast Last node of the linked list to append.\n */\nfunction appendToProjectionNode(projectionNode, appendedFirst, appendedLast) {\n    ngDevMode && assertEqual(!!appendedFirst, !!appendedLast, 'appendedFirst can be null if and only if appendedLast is also null');\n    if (!appendedLast) {\n        // nothing to append\n        return;\n    }\n    var projectionNodeData = projectionNode.data;\n    if (projectionNodeData.tail) {\n        projectionNodeData.tail.pNextOrParent = appendedFirst;\n    }\n    else {\n        projectionNodeData.head = appendedFirst;\n    }\n    projectionNodeData.tail = appendedLast;\n    appendedLast.pNextOrParent = projectionNode;\n}\n/**\n * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n * to the projectionDef instruction.\n *\n * @param nodeIndex\n * @param localIndex - index under which distribution of projected nodes was memorized\n * @param selectorIndex:\n *        - 0 when the selector is `*` (or unspecified as this is the default value),\n *        - 1 based index of the selector from the {@link projectionDef}\n */\nfunction projection(nodeIndex, localIndex, selectorIndex, attrs) {\n    if (selectorIndex === void 0) { selectorIndex = 0; }\n    var node = createLNode(nodeIndex, 1 /* Projection */, null, null, attrs || null, { head: null, tail: null });\n    // `<ng-content>` has no content\n    isParent = false;\n    // re-distribution of projectable nodes is memorized on a component's view level\n    var componentNode = findComponentHost(currentView);\n    var componentLView = componentNode.data;\n    var nodesForSelector = componentLView.data[localIndex][selectorIndex];\n    // build the linked list of projected nodes:\n    for (var i = 0; i < nodesForSelector.length; i++) {\n        var nodeToProject = nodesForSelector[i];\n        if (nodeToProject.tNode.type === 1 /* Projection */) {\n            // Reprojecting a projection -> append the list of previously projected nodes\n            var previouslyProjected = nodeToProject.data;\n            appendToProjectionNode(node, previouslyProjected.head, previouslyProjected.tail);\n        }\n        else {\n            // Projecting a single node\n            appendToProjectionNode(node, nodeToProject, nodeToProject);\n        }\n    }\n    var currentParent = getParentLNode(node);\n    if (canInsertNativeNode(currentParent, currentView)) {\n        ngDevMode && assertNodeType(currentParent, 3 /* Element */);\n        // process each node in the list of projected nodes:\n        var nodeToProject = node.data.head;\n        var lastNodeToProject = node.data.tail;\n        while (nodeToProject) {\n            appendProjectedNode(nodeToProject, currentParent, currentView);\n            nodeToProject = nodeToProject === lastNodeToProject ? null : nodeToProject.pNextOrParent;\n        }\n    }\n}\n/**\n * Given a current view, finds the nearest component's host (LElement).\n *\n * @param lView LView for which we want a host element node\n * @returns The host node\n */\nfunction findComponentHost(lView) {\n    var viewRootLNode = lView.node;\n    while (viewRootLNode.tNode.type === 2 /* View */) {\n        ngDevMode && assertNotNull(lView.parent, 'lView.parent');\n        lView = lView.parent;\n        viewRootLNode = lView.node;\n    }\n    ngDevMode && assertNodeType(viewRootLNode, 3 /* Element */);\n    ngDevMode && assertNotNull(viewRootLNode.data, 'node.data');\n    return viewRootLNode;\n}\n/**\n * Adds a LView or a LContainer to the end of the current view tree.\n *\n * This structure will be used to traverse through nested views to remove listeners\n * and call onDestroy callbacks.\n *\n * @param currentView The view where LView or LContainer should be added\n * @param hostIndex Index of the view's host node in data[]\n * @param state The LView or LContainer to add to the view tree\n * @returns The state passed in\n */\nfunction addToViewTree(currentView, hostIndex, state) {\n    // TODO(kara): move next and tail properties off of LView\n    if (currentView.tail) {\n        currentView.tail.next = state;\n    }\n    else if (firstTemplatePass) {\n        currentView.tView.childIndex = hostIndex;\n    }\n    currentView.tail = state;\n    return state;\n}\n///////////////////////////////\n//// Change detection\n///////////////////////////////\n/** If node is an OnPush component, marks its LView dirty. */\nfunction markDirtyIfOnPush(node) {\n    // Because data flows down the component tree, ancestors do not need to be marked dirty\n    if (node.data && !(node.data.flags & 2 /* CheckAlways */)) {\n        node.data.flags |= 4 /* Dirty */;\n    }\n}\n/**\n * Wraps an event listener so its host view and its ancestor views will be marked dirty\n * whenever the event fires. Necessary to support OnPush components.\n */\nfunction wrapListenerWithDirtyLogic(view, listenerFn) {\n    return function (e) {\n        markViewDirty(view);\n        return listenerFn(e);\n    };\n}\n/**\n * Wraps an event listener so its host view and its ancestor views will be marked dirty\n * whenever the event fires. Also wraps with preventDefault behavior.\n */\nfunction wrapListenerWithDirtyAndDefault(view, listenerFn) {\n    return function wrapListenerIn_markViewDirty(e) {\n        markViewDirty(view);\n        if (listenerFn(e) === false) {\n            e.preventDefault();\n            // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n            e.returnValue = false;\n        }\n    };\n}\n/** Marks current view and all ancestors dirty */\nfunction markViewDirty(view) {\n    var currentView = view;\n    while (currentView.parent != null) {\n        currentView.flags |= 4 /* Dirty */;\n        currentView = currentView.parent;\n    }\n    currentView.flags |= 4 /* Dirty */;\n    ngDevMode && assertNotNull(currentView.context, 'rootContext');\n    scheduleTick(currentView.context);\n}\n/**\n * Used to schedule change detection on the whole application.\n *\n * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n * It is usually called indirectly by calling `markDirty` when the view needs to be\n * re-rendered.\n *\n * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n * `scheduleTick` requests. The scheduling function can be overridden in\n * `renderComponent`'s `scheduler` option.\n */\nfunction scheduleTick(rootContext) {\n    if (rootContext.clean == _CLEAN_PROMISE) {\n        var res_1;\n        rootContext.clean = new Promise(function (r) { return res_1 = r; });\n        rootContext.scheduler(function () {\n            tick(rootContext.component);\n            res_1(null);\n            rootContext.clean = _CLEAN_PROMISE;\n        });\n    }\n}\n/**\n * Used to perform change detection on the whole application.\n *\n * This is equivalent to `detectChanges`, but invoked on root component. Additionally, `tick`\n * executes lifecycle hooks and conditionally checks components based on their\n * `ChangeDetectionStrategy` and dirtiness.\n *\n * The preferred way to trigger change detection is to call `markDirty`. `markDirty` internally\n * schedules `tick` using a scheduler in order to coalesce multiple `markDirty` calls into a\n * single change detection run. By default, the scheduler is `requestAnimationFrame`, but can\n * be changed when calling `renderComponent` and providing the `scheduler` option.\n */\nfunction tick(component) {\n    var rootView = getRootView(component);\n    var rootComponent = rootView.context.component;\n    var hostNode = _getComponentHostLElementNode(rootComponent);\n    ngDevMode && assertNotNull(hostNode.data, 'Component host node should be attached to an LView');\n    renderComponentOrTemplate(hostNode, rootView, rootComponent);\n}\n/**\n * Retrieve the root view from any component by walking the parent `LView` until\n * reaching the root `LView`.\n *\n * @param component any component\n */\nfunction getRootView(component) {\n    ngDevMode && assertNotNull(component, 'component');\n    var lElementNode = _getComponentHostLElementNode(component);\n    var lView = lElementNode.view;\n    while (lView.parent) {\n        lView = lView.parent;\n    }\n    return lView;\n}\n/**\n * Synchronously perform change detection on a component (and possibly its sub-components).\n *\n * This function triggers change detection in a synchronous way on a component. There should\n * be very little reason to call this function directly since a preferred way to do change\n * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n * at some future point in time. This is because a single user action often results in many\n * components being invalidated and calling change detection on each component synchronously\n * would be inefficient. It is better to wait until all components are marked as dirty and\n * then perform single change detection across all of the components\n *\n * @param component The component which the change detection should be performed on.\n */\nfunction detectChanges(component) {\n    var hostNode = _getComponentHostLElementNode(component);\n    ngDevMode && assertNotNull(hostNode.data, 'Component host node should be attached to an LView');\n    var componentIndex = hostNode.tNode.flags >> 13;\n    var def = hostNode.view.tView.directives[componentIndex];\n    detectChangesInternal(hostNode.data, hostNode, def, component);\n}\n/**\n * Checks the change detector and its children, and throws if any changes are detected.\n *\n * This is used in development mode to verify that running change detection doesn't\n * introduce other changes.\n */\nfunction checkNoChanges(component) {\n    checkNoChangesMode = true;\n    try {\n        detectChanges(component);\n    }\n    finally {\n        checkNoChangesMode = false;\n    }\n}\n/** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\nfunction detectChangesInternal(hostView, hostNode, def, component) {\n    var oldView = enterView(hostView, hostNode);\n    var template = def.template;\n    try {\n        template(getRenderFlags(hostView), component);\n        refreshView();\n    }\n    finally {\n        leaveView(oldView);\n    }\n}\n/**\n * Mark the component as dirty (needing change detection).\n *\n * Marking a component dirty will schedule a change detection on this\n * component at some point in the future. Marking an already dirty\n * component as dirty is a noop. Only one outstanding change detection\n * can be scheduled per component tree. (Two components bootstrapped with\n * separate `renderComponent` will have separate schedulers)\n *\n * When the root component is bootstrapped with `renderComponent`, a scheduler\n * can be provided.\n *\n * @param component Component to mark as dirty.\n */\nfunction markDirty(component) {\n    ngDevMode && assertNotNull(component, 'component');\n    var lElementNode = _getComponentHostLElementNode(component);\n    markViewDirty(lElementNode.view);\n}\n/** A special value which designates that a value has not changed. */\nvar NO_CHANGE = {};\n/**\n *  Initializes the binding start index. Will get inlined.\n *\n *  This function must be called before any binding related function is called\n *  (ie `bind()`, `interpolationX()`, `pureFunctionX()`)\n */\nfunction initBindings() {\n    ngDevMode && assertEqual(currentView.bindingIndex, -1, 'Binding index should not yet be set ' + currentView.bindingIndex);\n    if (currentView.tView.bindingStartIndex === -1) {\n        currentView.tView.bindingStartIndex = data.length;\n    }\n    currentView.bindingIndex = currentView.tView.bindingStartIndex;\n}\n/**\n * Creates a single value binding.\n *\n * @param value Value to diff\n */\nfunction bind(value) {\n    return bindingUpdated(value) ? value : NO_CHANGE;\n}\n/**\n * Reserves slots for pure functions (`pureFunctionX` instructions)\n *\n * Bindings for pure functions are stored after the LNodes in the data array but before the binding.\n *\n *  ----------------------------------------------------------------------------\n *  |  LNodes ... | pure function bindings | regular bindings / interpolations |\n *  ----------------------------------------------------------------------------\n *                                         ^\n *                                         TView.bindingStartIndex\n *\n * Pure function instructions are given an offset from TView.bindingStartIndex.\n * Subtracting the offset from TView.bindingStartIndex gives the first index where the bindings\n * are stored.\n *\n * NOTE: reserveSlots instructions are only ever allowed at the very end of the creation block\n */\nfunction reserveSlots(numSlots) {\n    // Init the slots with a unique `NO_CHANGE` value so that the first change is always detected\n    // whether it happens or not during the first change detection pass - pure functions checks\n    // might be skipped when short-circuited.\n    data.length += numSlots;\n    data.fill(NO_CHANGE, -numSlots);\n    // We need to initialize the binding in case a `pureFunctionX` kind of binding instruction is\n    // called first in the update section.\n    initBindings();\n}\n/**\n * Sets up the binding index before executing any `pureFunctionX` instructions.\n *\n * The index must be restored after the pure function is executed\n *\n * {@link reserveSlots}\n */\nfunction moveBindingIndexToReservedSlot(offset) {\n    var currentSlot = currentView.bindingIndex;\n    currentView.bindingIndex = currentView.tView.bindingStartIndex - offset;\n    return currentSlot;\n}\n/**\n * Restores the binding index to the given value.\n *\n * This function is typically used to restore the index after a `pureFunctionX` has\n * been executed.\n */\nfunction restoreBindingIndex(index) {\n    currentView.bindingIndex = index;\n}\n/**\n * Create interpolation bindings with a variable number of expressions.\n *\n * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n * Those are faster because there is no need to create an array of expressions and iterate over it.\n *\n * `values`:\n * - has static text at even indexes,\n * - has evaluated expressions at odd indexes.\n *\n * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n */\nfunction interpolationV(values) {\n    ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n    ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n    var different = false;\n    for (var i = 1; i < values.length; i += 2) {\n        // Check if bindings (odd indexes) have changed\n        bindingUpdated(values[i]) && (different = true);\n    }\n    if (!different) {\n        return NO_CHANGE;\n    }\n    // Build the updated content\n    var content = values[0];\n    for (var i = 1; i < values.length; i += 2) {\n        content += stringify$1(values[i]) + values[i + 1];\n    }\n    return content;\n}\n/**\n * Creates an interpolation binding with 1 expression.\n *\n * @param prefix static value used for concatenation only.\n * @param v0 value checked for change.\n * @param suffix static value used for concatenation only.\n */\nfunction interpolation1(prefix, v0, suffix) {\n    var different = bindingUpdated(v0);\n    return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n}\n/** Creates an interpolation binding with 2 expressions. */\nfunction interpolation2(prefix, v0, i0, v1, suffix) {\n    var different = bindingUpdated2(v0, v1);\n    return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n}\n/** Creates an interpolation bindings with 3 expressions. */\nfunction interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n    var different = bindingUpdated2(v0, v1);\n    different = bindingUpdated(v2) || different;\n    return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n        NO_CHANGE;\n}\n/** Create an interpolation binding with 4 expressions. */\nfunction interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n    var different = bindingUpdated4(v0, v1, v2, v3);\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n            suffix :\n        NO_CHANGE;\n}\n/** Creates an interpolation binding with 5 expressions. */\nfunction interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n    var different = bindingUpdated4(v0, v1, v2, v3);\n    different = bindingUpdated(v4) || different;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + suffix :\n        NO_CHANGE;\n}\n/** Creates an interpolation binding with 6 expressions. */\nfunction interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n    var different = bindingUpdated4(v0, v1, v2, v3);\n    different = bindingUpdated2(v4, v5) || different;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n        NO_CHANGE;\n}\n/** Creates an interpolation binding with 7 expressions. */\nfunction interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n    var different = bindingUpdated4(v0, v1, v2, v3);\n    different = bindingUpdated2(v4, v5) || different;\n    different = bindingUpdated(v6) || different;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n        NO_CHANGE;\n}\n/** Creates an interpolation binding with 8 expressions. */\nfunction interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n    var different = bindingUpdated4(v0, v1, v2, v3);\n    different = bindingUpdated4(v4, v5, v6, v7) || different;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n        NO_CHANGE;\n}\n/** Store a value in the `data` at a given `index`. */\nfunction store(index, value) {\n    // We don't store any static data for local variables, so the first time\n    // we see the template, we should store as null to avoid a sparse array\n    if (index >= tData.length) {\n        tData[index] = null;\n    }\n    data[index] = value;\n}\n/** Retrieves a value from the `data`. */\nfunction load(index) {\n    ngDevMode && assertDataInRange(index);\n    return data[index];\n}\n/** Retrieves a value from the `directives` array. */\nfunction loadDirective(index) {\n    ngDevMode && assertNotNull(directives, 'Directives array should be defined if reading a dir.');\n    ngDevMode && assertDataInRange(index, directives);\n    return directives[index];\n}\n/** Gets the current binding value and increments the binding index. */\nfunction consumeBinding() {\n    ngDevMode && assertDataInRange(currentView.bindingIndex);\n    ngDevMode &&\n        assertNotEqual(data[currentView.bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n    return data[currentView.bindingIndex++];\n}\n/** Updates binding if changed, then returns whether it was updated. */\nfunction bindingUpdated(value) {\n    ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n    if (currentView.bindingIndex === -1)\n        initBindings();\n    if (currentView.bindingIndex >= data.length) {\n        data[currentView.bindingIndex++] = value;\n    }\n    else if (isDifferent(data[currentView.bindingIndex], value)) {\n        throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, data[currentView.bindingIndex], value);\n        data[currentView.bindingIndex++] = value;\n    }\n    else {\n        currentView.bindingIndex++;\n        return false;\n    }\n    return true;\n}\n/** Updates binding if changed, then returns the latest value. */\nfunction checkAndUpdateBinding(value) {\n    bindingUpdated(value);\n    return value;\n}\n/** Updates 2 bindings if changed, then returns whether either was updated. */\nfunction bindingUpdated2(exp1, exp2) {\n    var different = bindingUpdated(exp1);\n    return bindingUpdated(exp2) || different;\n}\n/** Updates 4 bindings if changed, then returns whether any was updated. */\nfunction bindingUpdated4(exp1, exp2, exp3, exp4) {\n    var different = bindingUpdated2(exp1, exp2);\n    return bindingUpdated2(exp3, exp4) || different;\n}\nfunction getTView() {\n    return currentView.tView;\n}\nfunction getDirectiveInstance(instanceOrArray) {\n    // Directives with content queries store an array in directives[directiveIndex]\n    // with the instance as the first index\n    return Array.isArray(instanceOrArray) ? instanceOrArray[0] : instanceOrArray;\n}\nfunction assertPreviousIsParent() {\n    assertEqual(isParent, true, 'previousOrParentNode should be a parent');\n}\nfunction assertHasParent() {\n    assertNotNull(getParentLNode(previousOrParentNode), 'previousOrParentNode should have a parent');\n}\nfunction assertDataInRange(index, arr) {\n    if (arr == null)\n        arr = data;\n    assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n}\nfunction assertDataNext(index, arr) {\n    if (arr == null)\n        arr = data;\n    assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n}\n/**\n * On the first template pass, the reserved slots should be set `NO_CHANGE`.\n *\n * If not, they might not have been actually reserved.\n */\nfunction assertReservedSlotInitialized(slotOffset, numSlots) {\n    if (firstTemplatePass) {\n        var startIndex = currentView.tView.bindingStartIndex - slotOffset;\n        for (var i = 0; i < numSlots; i++) {\n            assertEqual(data[startIndex + i], NO_CHANGE, 'The reserved slots should be set to `NO_CHANGE` on first template pass');\n        }\n    }\n}\nfunction _getComponentHostLElementNode(component) {\n    ngDevMode && assertNotNull(component, 'expecting component got null');\n    var lElementNode = component[NG_HOST_SYMBOL];\n    ngDevMode && assertNotNull(component, 'object is not a component');\n    return lElementNode;\n}\nvar CLEAN_PROMISE = _CLEAN_PROMISE;\nvar ROOT_DIRECTIVE_INDICES = _ROOT_DIRECTIVE_INDICES;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ViewRef = /** @class */ (function () {\n    function ViewRef(_view, context) {\n        this._view = _view;\n        this.context = context;\n    }\n    /** @internal */\n    ViewRef.prototype._setComponentContext = function (view, context) {\n        this._view = view;\n        this.context = context;\n    };\n    ViewRef.prototype.destroy = function () {  };\n    ViewRef.prototype.onDestroy = function (callback) {  };\n    /**\n     * Marks a view and all of its ancestors dirty.\n     *\n     * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n     * multiple `markForCheck` calls to into one change detection run.\n     *\n     * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n     * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n     * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n     *\n     * <!-- TODO: Add a link to a chapter on OnPush components -->\n     *\n     * ### Example ([live demo](https://stackblitz.com/edit/angular-kx7rrw))\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'my-app',\n     *   template: `Number of ticks: {{numberOfTicks}}`\n     *   changeDetection: ChangeDetectionStrategy.OnPush,\n     * })\n     * class AppComponent {\n     *   numberOfTicks = 0;\n     *\n     *   constructor(private ref: ChangeDetectorRef) {\n     *     setInterval(() => {\n     *       this.numberOfTicks++;\n     *       // the following is required, otherwise the view will not be updated\n     *       this.ref.markForCheck();\n     *     }, 1000);\n     *   }\n     * }\n     * ```\n     */\n    ViewRef.prototype.markForCheck = function () { markViewDirty(this._view); };\n    /**\n     * Detaches the view from the change detection tree.\n     *\n     * Detached views will not be checked during change detection runs until they are\n     * re-attached, even if they are dirty. `detach` can be used in combination with\n     * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n     * detection checks.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n     *\n     * ### Example\n     *\n     * The following example defines a component with a large list of readonly data.\n     * Imagine the data changes constantly, many times per second. For performance reasons,\n     * we want to check and update the list every five seconds. We can do that by detaching\n     * the component's change detector and doing a local check every five seconds.\n     *\n     * ```typescript\n     * class DataProvider {\n     *   // in a real application the returned data will be different every time\n     *   get data() {\n     *     return [1,2,3,4,5];\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'giant-list',\n     *   template: `\n     *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n     *   `,\n     * })\n     * class GiantList {\n     *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n     *     ref.detach();\n     *     setInterval(() => {\n     *       this.ref.detectChanges();\n     *     }, 5000);\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   providers: [DataProvider],\n     *   template: `\n     *     <giant-list><giant-list>\n     *   `,\n     * })\n     * class App {\n     * }\n     * ```\n     */\n    ViewRef.prototype.detach = function () { this._view.flags &= ~8 /* Attached */; };\n    /**\n     * Re-attaches a view to the change detection tree.\n     *\n     * This can be used to re-attach views that were previously detached from the tree\n     * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     *\n     * ### Example ([live demo](https://stackblitz.com/edit/angular-ymgsxw))\n     *\n     * The following example creates a component displaying `live` data. The component will detach\n     * its change detector from the main change detector tree when the component's live property\n     * is set to false.\n     *\n     * ```typescript\n     * class DataProvider {\n     *   data = 1;\n     *\n     *   constructor() {\n     *     setInterval(() => {\n     *       this.data = this.data * 2;\n     *     }, 500);\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'live-data',\n     *   inputs: ['live'],\n     *   template: 'Data: {{dataProvider.data}}'\n     * })\n     * class LiveData {\n     *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n     *\n     *   set live(value) {\n     *     if (value) {\n     *       this.ref.reattach();\n     *     } else {\n     *       this.ref.detach();\n     *     }\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'my-app',\n     *   providers: [DataProvider],\n     *   template: `\n     *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n     *     <live-data [live]=\"live\"><live-data>\n     *   `,\n     * })\n     * class AppComponent {\n     *   live = true;\n     * }\n     * ```\n     */\n    ViewRef.prototype.reattach = function () { this._view.flags |= 8 /* Attached */; };\n    /**\n     * Checks the view and its children.\n     *\n     * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n     * local change detection checks.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n     *\n     * ### Example\n     *\n     * The following example defines a component with a large list of readonly data.\n     * Imagine, the data changes constantly, many times per second. For performance reasons,\n     * we want to check and update the list every five seconds.\n     *\n     * We can do that by detaching the component's change detector and doing a local change detection\n     * check every five seconds.\n     *\n     * See {@link ChangeDetectorRef#detach detach} for more information.\n     */\n    ViewRef.prototype.detectChanges = function () { detectChanges(this.context); };\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n    return ViewRef;\n}());\nvar EmbeddedViewRef = /** @class */ (function (_super) {\n    __extends(EmbeddedViewRef, _super);\n    function EmbeddedViewRef(viewNode, template, context) {\n        var _this = _super.call(this, viewNode.data, context) || this;\n        _this._lViewNode = viewNode;\n        return _this;\n    }\n    return EmbeddedViewRef;\n}(ViewRef));\n/**\n * Creates a ViewRef bundled with destroy functionality.\n *\n * @param context The context for this view\n * @returns The ViewRef\n */\nfunction createViewRef(view, context) {\n    // TODO: add detectChanges back in when implementing ChangeDetectorRef.detectChanges\n    return addDestroyable(new ViewRef(view, context));\n}\n/**\n * Decorates an object with destroy logic (implementing the DestroyRef interface)\n * and returns the enhanced object.\n *\n * @param obj The object to decorate\n * @returns The object with destroy logic\n */\nfunction addDestroyable(obj) {\n    var destroyFn = null;\n    obj.destroyed = false;\n    obj.destroy = function () {\n        destroyFn && destroyFn.forEach(function (fn) { return fn(); });\n        this.destroyed = true;\n    };\n    obj.onDestroy = function (fn) { return (destroyFn || (destroyFn = [])).push(fn); };\n    return obj;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Bootstraps a component, then creates and returns a `ComponentRef` for that component.\n *\n * @param componentType Component to bootstrap\n * @param options Optional parameters which control bootstrapping\n */\n\n// TODO: A hack to not pull in the NullInjector from @angular/core.\n\n/**\n * Bootstraps a Component into an existing host element and returns an instance\n * of the component.\n *\n * Use this function to bootstrap a component into the DOM tree. Each invocation\n * of this function will create a separate tree of components, injectors and\n * change detection cycles and lifetimes. To dynamically insert a new component\n * into an existing tree such that it shares the same injection, change detection\n * and object lifetime, use {@link ViewContainer#createComponent}.\n *\n * @param componentType Component to bootstrap\n * @param options Optional parameters which control bootstrapping\n */\nfunction renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n    if (opts === void 0) { opts = {}; }\n    ngDevMode && assertComponentType(componentType);\n    var rendererFactory = opts.rendererFactory || domRendererFactory3;\n    var sanitizer = opts.sanitizer || null;\n    var componentDef = componentType.ngComponentDef;\n    if (componentDef.type != componentType)\n        componentDef.type = componentType;\n    var component;\n    // The first index of the first selector is the tag name.\n    var componentTag = componentDef.selectors[0][0];\n    var hostNode = locateHostElement(rendererFactory, opts.host || componentTag);\n    var rootContext = {\n        // Incomplete initialization due to circular reference.\n        component: null,\n        scheduler: opts.scheduler || requestAnimationFrame.bind(window),\n        clean: CLEAN_PROMISE,\n    };\n    var rootView = createLView(rendererFactory.createRenderer(hostNode, componentDef.rendererType), createTView(-1, null, null), null, rootContext, componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n    rootView.injector = opts.injector || null;\n    var oldView = enterView(rootView, null);\n    var elementNode;\n    try {\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        // Create element node at index 0 in data array\n        elementNode = hostElement(componentTag, hostNode, componentDef, sanitizer);\n        // Create directive instance with factory() and store at index 0 in directives array\n        component = rootContext.component =\n            baseDirectiveCreate(0, componentDef.factory(), componentDef);\n        initChangeDetectorIfExisting(elementNode.nodeInjector, component, elementNode.data);\n        opts.hostFeatures && opts.hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        executeInitAndContentHooks();\n        setHostBindings(ROOT_DIRECTIVE_INDICES);\n        detectChangesInternal(elementNode.data, elementNode, componentDef, component);\n    }\n    finally {\n        leaveView(oldView);\n        if (rendererFactory.end)\n            rendererFactory.end();\n    }\n    return component;\n}\n/**\n * Used to enable lifecycle hooks on the root component.\n *\n * Include this feature when calling `renderComponent` if the root component\n * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n * be called properly.\n *\n * Example:\n *\n * ```\n * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n * ```\n */\n\n/**\n * Retrieve the root context for any component by walking the parent `LView` until\n * reaching the root `LView`.\n *\n * @param component any component\n */\nfunction getRootContext(component) {\n    var rootContext = getRootView(component).context;\n    ngDevMode && assertNotNull(rootContext, 'rootContext');\n    return rootContext;\n}\n/**\n * Retrieve the host element of the component.\n *\n * Use this function to retrieve the host element of the component. The host\n * element is the element which the component is associated with.\n *\n * @param component Component for which the host element should be retrieved.\n */\n\n/**\n * Retrieves the rendered text for a given component.\n *\n * This function retrieves the host element of a component and\n * and then returns the `textContent` for that element. This implies\n * that the text returned will include re-projected content of\n * the component as well.\n *\n * @param component The component to return the content text for.\n */\n\n/**\n * Wait on component until it is rendered.\n *\n * This function returns a `Promise` which is resolved when the component's\n * change detection is executed. This is determined by finding the scheduler\n * associated with the `component`'s render tree and waiting until the scheduler\n * flushes. If nothing is scheduled, the function returns a resolved promise.\n *\n * Example:\n * ```\n * await whenRendered(myComponent);\n * ```\n *\n * @param component Component to wait upon\n * @returns Promise which resolves when the component is rendered.\n */\nfunction whenRendered(component) {\n    return getRootContext(component).clean;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction devModeEqual(a, b) {\n    var isListLikeIterableA = isListLikeIterable(a);\n    var isListLikeIterableB = isListLikeIterable(b);\n    if (isListLikeIterableA && isListLikeIterableB) {\n        return areIterablesEqual(a, b, devModeEqual);\n    }\n    else {\n        var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n        var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n        if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n            return true;\n        }\n        else {\n            return looseIdentical(a, b);\n        }\n    }\n}\n/**\n * Indicates that the result of a {@link Pipe} transformation has changed even though the\n * reference has not changed.\n *\n * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n * is stored.\n *\n * Example:\n *\n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n *\n */\nvar WrappedValue = /** @class */ (function () {\n    function WrappedValue(value) {\n        this.wrapped = value;\n    }\n    /** Creates a wrapped value. */\n    WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n    /**\n     * Returns the underlying value of a wrapped value.\n     * Returns the given `value` when it is not wrapped.\n     **/\n    WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n    /** Returns true if `value` is a wrapped value. */\n    WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n    return WrappedValue;\n}());\n/**\n * Represents a basic change from a previous to a new value.\n *\n */\nvar SimpleChange = /** @class */ (function () {\n    function SimpleChange(previousValue, currentValue, firstChange) {\n        this.previousValue = previousValue;\n        this.currentValue = currentValue;\n        this.firstChange = firstChange;\n    }\n    /**\n     * Check whether the new value is the first value assigned.\n     */\n    SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n    return SimpleChange;\n}());\nfunction isListLikeIterable(obj) {\n    if (!isJsObject(obj))\n        return false;\n    return Array.isArray(obj) ||\n        (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n            getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n}\nfunction areIterablesEqual(a, b, comparator) {\n    var iterator1 = a[getSymbolIterator()]();\n    var iterator2 = b[getSymbolIterator()]();\n    while (true) {\n        var item1 = iterator1.next();\n        var item2 = iterator2.next();\n        if (item1.done && item2.done)\n            return true;\n        if (item1.done || item2.done)\n            return false;\n        if (!comparator(item1.value, item2.value))\n            return false;\n    }\n}\nfunction iterateListLike(obj, fn) {\n    if (Array.isArray(obj)) {\n        for (var i = 0; i < obj.length; i++) {\n            fn(obj[i]);\n        }\n    }\n    else {\n        var iterator = obj[getSymbolIterator()]();\n        var item = void 0;\n        while (!((item = iterator.next()).done)) {\n            fn(item.value);\n        }\n    }\n}\nfunction isJsObject(o) {\n    return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultIterableDifferFactory = /** @class */ (function () {\n    function DefaultIterableDifferFactory() {\n    }\n    DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n    DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n        return new DefaultIterableDiffer(trackByFn);\n    };\n    return DefaultIterableDifferFactory;\n}());\nvar trackByIdentity = function (index, item) { return item; };\n/**\n * @deprecated v4.0.0 - Should not be part of public API.\n */\nvar DefaultIterableDiffer = /** @class */ (function () {\n    function DefaultIterableDiffer(trackByFn) {\n        this.length = 0;\n        // Keeps track of the used records at any point in time (during & across `_check()` calls)\n        this._linkedRecords = null;\n        // Keeps track of the removed records at any point in time during `_check()` calls.\n        this._unlinkedRecords = null;\n        this._previousItHead = null;\n        this._itHead = null;\n        this._itTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._movesHead = null;\n        this._movesTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n        // Keeps track of records where custom track by is the same, but item identity has changed\n        this._identityChangesHead = null;\n        this._identityChangesTail = null;\n        this._trackByFn = trackByFn || trackByIdentity;\n    }\n    DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n        var record;\n        for (record = this._itHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n        var nextIt = this._itHead;\n        var nextRemove = this._removalsHead;\n        var addRemoveOffset = 0;\n        var moveOffsets = null;\n        while (nextIt || nextRemove) {\n            // Figure out which is the next record to process\n            // Order: remove, add, move\n            var record = !nextRemove ||\n                nextIt &&\n                    nextIt.currentIndex <\n                        getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                nextIt :\n                nextRemove;\n            var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n            var currentIndex = record.currentIndex;\n            // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n            if (record === nextRemove) {\n                addRemoveOffset--;\n                nextRemove = nextRemove._nextRemoved;\n            }\n            else {\n                nextIt = nextIt._next;\n                if (record.previousIndex == null) {\n                    addRemoveOffset++;\n                }\n                else {\n                    // INVARIANT:  currentIndex < previousIndex\n                    if (!moveOffsets)\n                        moveOffsets = [];\n                    var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                    var localCurrentIndex = currentIndex - addRemoveOffset;\n                    if (localMovePreviousIndex != localCurrentIndex) {\n                        for (var i = 0; i < localMovePreviousIndex; i++) {\n                            var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                            var index = offset + i;\n                            if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                moveOffsets[i] = offset + 1;\n                            }\n                        }\n                        var previousIndex = record.previousIndex;\n                        moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                    }\n                }\n            }\n            if (adjPreviousIndex !== currentIndex) {\n                fn(record, adjPreviousIndex, currentIndex);\n            }\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n        var record;\n        for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n        var record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n        var record;\n        for (record = this._movesHead; record !== null; record = record._nextMoved) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n        var record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n        var record;\n        for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.diff = function (collection) {\n        if (collection == null)\n            collection = [];\n        if (!isListLikeIterable(collection)) {\n            throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n        }\n        if (this.check(collection)) {\n            return this;\n        }\n        else {\n            return null;\n        }\n    };\n    DefaultIterableDiffer.prototype.onDestroy = function () { };\n    DefaultIterableDiffer.prototype.check = function (collection) {\n        var _this = this;\n        this._reset();\n        var record = this._itHead;\n        var mayBeDirty = false;\n        var index;\n        var item;\n        var itemTrackBy;\n        if (Array.isArray(collection)) {\n            this.length = collection.length;\n            for (var index_1 = 0; index_1 < this.length; index_1++) {\n                item = collection[index_1];\n                itemTrackBy = this._trackByFn(index_1, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = this._mismatch(record, item, itemTrackBy, index_1);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                }\n                record = record._next;\n            }\n        }\n        else {\n            index = 0;\n            iterateListLike(collection, function (item) {\n                itemTrackBy = _this._trackByFn(index, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = _this._mismatch(record, item, itemTrackBy, index);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        _this._addIdentityChange(record, item);\n                }\n                record = record._next;\n                index++;\n            });\n            this.length = index;\n        }\n        this._truncate(record);\n        this.collection = collection;\n        return this.isDirty;\n    };\n    Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n        /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n         * changes.\n         */\n        get: function () {\n            return this._additionsHead !== null || this._movesHead !== null ||\n                this._removalsHead !== null || this._identityChangesHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * @internal\n     */\n    DefaultIterableDiffer.prototype._reset = function () {\n        if (this.isDirty) {\n            var record = void 0;\n            var nextRecord = void 0;\n            for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                record.previousIndex = record.currentIndex;\n            }\n            this._additionsHead = this._additionsTail = null;\n            for (record = this._movesHead; record !== null; record = nextRecord) {\n                record.previousIndex = record.currentIndex;\n                nextRecord = record._nextMoved;\n            }\n            this._movesHead = this._movesTail = null;\n            this._removalsHead = this._removalsTail = null;\n            this._identityChangesHead = this._identityChangesTail = null;\n            // TODO(vicb): when assert gets supported\n            // assert(!this.isDirty);\n        }\n    };\n    /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * @internal\n     */\n    DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n        // The previous record after which we will append the current one.\n        var previousRecord;\n        if (record === null) {\n            previousRecord = this._itTail;\n        }\n        else {\n            previousRecord = record._prev;\n            // Remove the record from the collection since we know it does not match the item.\n            this._remove(record);\n        }\n        // Attempt to see if we have seen the item before.\n        record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n        if (record !== null) {\n            // We have seen this before, we need to move it forward in the collection.\n            // But first we need to check if identity changed, so we can update in view if necessary\n            if (!looseIdentical(record.item, item))\n                this._addIdentityChange(record, item);\n            this._moveAfter(record, previousRecord, index);\n        }\n        else {\n            // Never seen it, check evicted list.\n            record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (record !== null) {\n                // It is an item which we have evicted earlier: reinsert it back into the list.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._reinsertAfter(record, previousRecord, index);\n            }\n            else {\n                // It is a new item: add it.\n                record =\n                    this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n            }\n        }\n        return record;\n    };\n    /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * @internal\n     */\n    DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n        var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n        if (reinsertRecord !== null) {\n            record = this._reinsertAfter(reinsertRecord, record._prev, index);\n        }\n        else if (record.currentIndex != index) {\n            record.currentIndex = index;\n            this._addToMoves(record, index);\n        }\n        return record;\n    };\n    /**\n     * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {@link IterableChangeRecord_}.\n     *\n     * @internal\n     */\n    DefaultIterableDiffer.prototype._truncate = function (record) {\n        // Anything after that needs to be removed;\n        while (record !== null) {\n            var nextRecord = record._next;\n            this._addToRemovals(this._unlink(record));\n            record = nextRecord;\n        }\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.clear();\n        }\n        if (this._additionsTail !== null) {\n            this._additionsTail._nextAdded = null;\n        }\n        if (this._movesTail !== null) {\n            this._movesTail._nextMoved = null;\n        }\n        if (this._itTail !== null) {\n            this._itTail._next = null;\n        }\n        if (this._removalsTail !== null) {\n            this._removalsTail._nextRemoved = null;\n        }\n        if (this._identityChangesTail !== null) {\n            this._identityChangesTail._nextIdentityChange = null;\n        }\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.remove(record);\n        }\n        var prev = record._prevRemoved;\n        var next = record._nextRemoved;\n        if (prev === null) {\n            this._removalsHead = next;\n        }\n        else {\n            prev._nextRemoved = next;\n        }\n        if (next === null) {\n            this._removalsTail = prev;\n        }\n        else {\n            next._prevRemoved = prev;\n        }\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n        this._unlink(record);\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n        this._insertAfter(record, prevRecord, index);\n        if (this._additionsTail === null) {\n            // TODO(vicb):\n            // assert(this._additionsHead === null);\n            this._additionsTail = this._additionsHead = record;\n        }\n        else {\n            // TODO(vicb):\n            // assert(_additionsTail._nextAdded === null);\n            // assert(record._nextAdded === null);\n            this._additionsTail = this._additionsTail._nextAdded = record;\n        }\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n        // TODO(vicb):\n        // assert(record != prevRecord);\n        // assert(record._next === null);\n        // assert(record._prev === null);\n        var next = prevRecord === null ? this._itHead : prevRecord._next;\n        // TODO(vicb):\n        // assert(next != record);\n        // assert(prevRecord != record);\n        record._next = next;\n        record._prev = prevRecord;\n        if (next === null) {\n            this._itTail = record;\n        }\n        else {\n            next._prev = record;\n        }\n        if (prevRecord === null) {\n            this._itHead = record;\n        }\n        else {\n            prevRecord._next = record;\n        }\n        if (this._linkedRecords === null) {\n            this._linkedRecords = new _DuplicateMap();\n        }\n        this._linkedRecords.put(record);\n        record.currentIndex = index;\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._remove = function (record) {\n        return this._addToRemovals(this._unlink(record));\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._unlink = function (record) {\n        if (this._linkedRecords !== null) {\n            this._linkedRecords.remove(record);\n        }\n        var prev = record._prev;\n        var next = record._next;\n        // TODO(vicb):\n        // assert((record._prev = null) === null);\n        // assert((record._next = null) === null);\n        if (prev === null) {\n            this._itHead = next;\n        }\n        else {\n            prev._next = next;\n        }\n        if (next === null) {\n            this._itTail = prev;\n        }\n        else {\n            next._prev = prev;\n        }\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n        // TODO(vicb):\n        // assert(record._nextMoved === null);\n        if (record.previousIndex === toIndex) {\n            return record;\n        }\n        if (this._movesTail === null) {\n            // TODO(vicb):\n            // assert(_movesHead === null);\n            this._movesTail = this._movesHead = record;\n        }\n        else {\n            // TODO(vicb):\n            // assert(_movesTail._nextMoved === null);\n            this._movesTail = this._movesTail._nextMoved = record;\n        }\n        return record;\n    };\n    DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n        if (this._unlinkedRecords === null) {\n            this._unlinkedRecords = new _DuplicateMap();\n        }\n        this._unlinkedRecords.put(record);\n        record.currentIndex = null;\n        record._nextRemoved = null;\n        if (this._removalsTail === null) {\n            // TODO(vicb):\n            // assert(_removalsHead === null);\n            this._removalsTail = this._removalsHead = record;\n            record._prevRemoved = null;\n        }\n        else {\n            // TODO(vicb):\n            // assert(_removalsTail._nextRemoved === null);\n            // assert(record._nextRemoved === null);\n            record._prevRemoved = this._removalsTail;\n            this._removalsTail = this._removalsTail._nextRemoved = record;\n        }\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n        record.item = item;\n        if (this._identityChangesTail === null) {\n            this._identityChangesTail = this._identityChangesHead = record;\n        }\n        else {\n            this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n        }\n        return record;\n    };\n    return DefaultIterableDiffer;\n}());\nvar IterableChangeRecord_ = /** @class */ (function () {\n    function IterableChangeRecord_(item, trackById) {\n        this.item = item;\n        this.trackById = trackById;\n        this.currentIndex = null;\n        this.previousIndex = null;\n        /** @internal */\n        this._nextPrevious = null;\n        /** @internal */\n        this._prev = null;\n        /** @internal */\n        this._next = null;\n        /** @internal */\n        this._prevDup = null;\n        /** @internal */\n        this._nextDup = null;\n        /** @internal */\n        this._prevRemoved = null;\n        /** @internal */\n        this._nextRemoved = null;\n        /** @internal */\n        this._nextAdded = null;\n        /** @internal */\n        this._nextMoved = null;\n        /** @internal */\n        this._nextIdentityChange = null;\n    }\n    return IterableChangeRecord_;\n}());\n// A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\nvar _DuplicateItemRecordList = /** @class */ (function () {\n    function _DuplicateItemRecordList() {\n        /** @internal */\n        this._head = null;\n        /** @internal */\n        this._tail = null;\n    }\n    /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     */\n    _DuplicateItemRecordList.prototype.add = function (record) {\n        if (this._head === null) {\n            this._head = this._tail = record;\n            record._nextDup = null;\n            record._prevDup = null;\n        }\n        else {\n            // TODO(vicb):\n            // assert(record.item ==  _head.item ||\n            //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n            this._tail._nextDup = record;\n            record._prevDup = this._tail;\n            record._nextDup = null;\n            this._tail = record;\n        }\n    };\n    // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n    // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n    _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n        var record;\n        for (record = this._head; record !== null; record = record._nextDup) {\n            if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                looseIdentical(record.trackById, trackById)) {\n                return record;\n            }\n        }\n        return null;\n    };\n    /**\n     * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     */\n    _DuplicateItemRecordList.prototype.remove = function (record) {\n        // TODO(vicb):\n        // assert(() {\n        //  // verify that the record being removed is in the list.\n        //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n        //    if (identical(cursor, record)) return true;\n        //  }\n        //  return false;\n        //});\n        var prev = record._prevDup;\n        var next = record._nextDup;\n        if (prev === null) {\n            this._head = next;\n        }\n        else {\n            prev._nextDup = next;\n        }\n        if (next === null) {\n            this._tail = prev;\n        }\n        else {\n            next._prevDup = prev;\n        }\n        return this._head === null;\n    };\n    return _DuplicateItemRecordList;\n}());\nvar _DuplicateMap = /** @class */ (function () {\n    function _DuplicateMap() {\n        this.map = new Map();\n    }\n    _DuplicateMap.prototype.put = function (record) {\n        var key = record.trackById;\n        var duplicates = this.map.get(key);\n        if (!duplicates) {\n            duplicates = new _DuplicateItemRecordList();\n            this.map.set(key, duplicates);\n        }\n        duplicates.add(record);\n    };\n    /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     */\n    _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n        var key = trackById;\n        var recordList = this.map.get(key);\n        return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n    };\n    /**\n     * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     */\n    _DuplicateMap.prototype.remove = function (record) {\n        var key = record.trackById;\n        var recordList = this.map.get(key);\n        // Remove the list of duplicates when it gets empty\n        if (recordList.remove(record)) {\n            this.map.delete(key);\n        }\n        return record;\n    };\n    Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n        get: function () { return this.map.size === 0; },\n        enumerable: true,\n        configurable: true\n    });\n    _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n    return _DuplicateMap;\n}());\nfunction getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n    var previousIndex = item.previousIndex;\n    if (previousIndex === null)\n        return previousIndex;\n    var moveOffset = 0;\n    if (moveOffsets && previousIndex < moveOffsets.length) {\n        moveOffset = moveOffsets[previousIndex];\n    }\n    return previousIndex + addRemoveOffset + moveOffset;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultKeyValueDifferFactory = /** @class */ (function () {\n    function DefaultKeyValueDifferFactory() {\n    }\n    DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n    DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n    return DefaultKeyValueDifferFactory;\n}());\nvar DefaultKeyValueDiffer = /** @class */ (function () {\n    function DefaultKeyValueDiffer() {\n        this._records = new Map();\n        this._mapHead = null;\n        // _appendAfter is used in the check loop\n        this._appendAfter = null;\n        this._previousMapHead = null;\n        this._changesHead = null;\n        this._changesTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n    }\n    Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n        get: function () {\n            return this._additionsHead !== null || this._changesHead !== null ||\n                this._removalsHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n        var record;\n        for (record = this._mapHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n        var record;\n        for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n        var record;\n        for (record = this._changesHead; record !== null; record = record._nextChanged) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n        var record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n        var record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.diff = function (map) {\n        if (!map) {\n            map = new Map();\n        }\n        else if (!(map instanceof Map || isJsObject(map))) {\n            throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n        }\n        return this.check(map) ? this : null;\n    };\n    DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n    /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     */\n    DefaultKeyValueDiffer.prototype.check = function (map) {\n        var _this = this;\n        this._reset();\n        var insertBefore = this._mapHead;\n        this._appendAfter = null;\n        this._forEach(map, function (value, key) {\n            if (insertBefore && insertBefore.key === key) {\n                _this._maybeAddToChanges(insertBefore, value);\n                _this._appendAfter = insertBefore;\n                insertBefore = insertBefore._next;\n            }\n            else {\n                var record = _this._getOrCreateRecordForKey(key, value);\n                insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n            }\n        });\n        // Items remaining at the end of the list have been deleted\n        if (insertBefore) {\n            if (insertBefore._prev) {\n                insertBefore._prev._next = null;\n            }\n            this._removalsHead = insertBefore;\n            for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                if (record === this._mapHead) {\n                    this._mapHead = null;\n                }\n                this._records.delete(record.key);\n                record._nextRemoved = record._next;\n                record.previousValue = record.currentValue;\n                record.currentValue = null;\n                record._prev = null;\n                record._next = null;\n            }\n        }\n        // Make sure tails have no next records from previous runs\n        if (this._changesTail)\n            this._changesTail._nextChanged = null;\n        if (this._additionsTail)\n            this._additionsTail._nextAdded = null;\n        return this.isDirty;\n    };\n    /**\n     * Inserts a record before `before` or append at the end of the list when `before` is null.\n     *\n     * Notes:\n     * - This method appends at `this._appendAfter`,\n     * - This method updates `this._appendAfter`,\n     * - The return value is the new value for the insertion pointer.\n     */\n    DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n        if (before) {\n            var prev = before._prev;\n            record._next = before;\n            record._prev = prev;\n            before._prev = record;\n            if (prev) {\n                prev._next = record;\n            }\n            if (before === this._mapHead) {\n                this._mapHead = record;\n            }\n            this._appendAfter = before;\n            return before;\n        }\n        if (this._appendAfter) {\n            this._appendAfter._next = record;\n            record._prev = this._appendAfter;\n        }\n        else {\n            this._mapHead = record;\n        }\n        this._appendAfter = record;\n        return null;\n    };\n    DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n        if (this._records.has(key)) {\n            var record_1 = this._records.get(key);\n            this._maybeAddToChanges(record_1, value);\n            var prev = record_1._prev;\n            var next = record_1._next;\n            if (prev) {\n                prev._next = next;\n            }\n            if (next) {\n                next._prev = prev;\n            }\n            record_1._next = null;\n            record_1._prev = null;\n            return record_1;\n        }\n        var record = new KeyValueChangeRecord_(key);\n        this._records.set(key, record);\n        record.currentValue = value;\n        this._addToAdditions(record);\n        return record;\n    };\n    /** @internal */\n    DefaultKeyValueDiffer.prototype._reset = function () {\n        if (this.isDirty) {\n            var record = void 0;\n            // let `_previousMapHead` contain the state of the map before the changes\n            this._previousMapHead = this._mapHead;\n            for (record = this._previousMapHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            // Update `record.previousValue` with the value of the item before the changes\n            // We need to update all changed items (that's those which have been added and changed)\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                record.previousValue = record.currentValue;\n            }\n            for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                record.previousValue = record.currentValue;\n            }\n            this._changesHead = this._changesTail = null;\n            this._additionsHead = this._additionsTail = null;\n            this._removalsHead = null;\n        }\n    };\n    // Add the record or a given key to the list of changes only when the value has actually changed\n    DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n        if (!looseIdentical(newValue, record.currentValue)) {\n            record.previousValue = record.currentValue;\n            record.currentValue = newValue;\n            this._addToChanges(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n        if (this._additionsHead === null) {\n            this._additionsHead = this._additionsTail = record;\n        }\n        else {\n            this._additionsTail._nextAdded = record;\n            this._additionsTail = record;\n        }\n    };\n    DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n        if (this._changesHead === null) {\n            this._changesHead = this._changesTail = record;\n        }\n        else {\n            this._changesTail._nextChanged = record;\n            this._changesTail = record;\n        }\n    };\n    /** @internal */\n    DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n        if (obj instanceof Map) {\n            obj.forEach(fn);\n        }\n        else {\n            Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n        }\n    };\n    return DefaultKeyValueDiffer;\n}());\nvar KeyValueChangeRecord_ = /** @class */ (function () {\n    function KeyValueChangeRecord_(key) {\n        this.key = key;\n        this.previousValue = null;\n        this.currentValue = null;\n        /** @internal */\n        this._nextPrevious = null;\n        /** @internal */\n        this._next = null;\n        /** @internal */\n        this._prev = null;\n        /** @internal */\n        this._nextAdded = null;\n        /** @internal */\n        this._nextRemoved = null;\n        /** @internal */\n        this._nextChanged = null;\n    }\n    return KeyValueChangeRecord_;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n *\n */\nvar IterableDiffers = /** @class */ (function () {\n    function IterableDiffers(factories) {\n        this.factories = factories;\n    }\n    IterableDiffers.create = function (factories, parent) {\n        if (parent != null) {\n            var copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new IterableDiffers(factories);\n    };\n    /**\n     * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {@link IterableDiffers} instance with the provided factories and return a new\n     * {@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    IterableDiffers.extend = function (factories) {\n        return {\n            provide: IterableDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                    // to\n                    // bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend IterableDiffers without a parent injector');\n                }\n                return IterableDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    IterableDiffers.prototype.find = function (iterable) {\n        var factory = this.factories.find(function (f) { return f.supports(iterable); });\n        if (factory != null) {\n            return factory;\n        }\n        else {\n            throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n        }\n    };\n    IterableDiffers.ngInjectableDef = defineInjectable({\n        providedIn: 'root',\n        factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n    });\n    return IterableDiffers;\n}());\nfunction getTypeNameForDebugging(type) {\n    return type['name'] || typeof type;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar ERROR_DEBUG_CONTEXT = 'ngDebugContext';\nvar ERROR_ORIGINAL_ERROR = 'ngOriginalError';\nvar ERROR_LOGGER = 'ngErrorLogger';\n\nfunction getDebugContext(error) {\n    return error[ERROR_DEBUG_CONTEXT];\n}\nfunction getOriginalError(error) {\n    return error[ERROR_ORIGINAL_ERROR];\n}\nfunction getErrorLogger(error) {\n    return error[ERROR_LOGGER] || defaultErrorLogger;\n}\nfunction defaultErrorLogger(console) {\n    var values = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        values[_i - 1] = arguments[_i];\n    }\n    console.error.apply(console, __spread(values));\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n *\n * @description\n * Provides a hook for centralized exception handling.\n *\n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n *\n * ### Example\n *\n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n *\n * @NgModule({\n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n *\n *\n */\nvar ErrorHandler = /** @class */ (function () {\n    function ErrorHandler() {\n        /**\n         * @internal\n         */\n        this._console = console;\n    }\n    ErrorHandler.prototype.handleError = function (error) {\n        var originalError = this._findOriginalError(error);\n        var context = this._findContext(error);\n        // Note: Browser consoles show the place from where console.error was called.\n        // We can use this to give users additional information about the error.\n        var errorLogger = getErrorLogger(error);\n        errorLogger(this._console, \"ERROR\", error);\n        if (originalError) {\n            errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n        }\n        if (context) {\n            errorLogger(this._console, 'ERROR CONTEXT', context);\n        }\n    };\n    /** @internal */\n    ErrorHandler.prototype._findContext = function (error) {\n        if (error) {\n            return getDebugContext(error) ? getDebugContext(error) :\n                this._findContext(getOriginalError(error));\n        }\n        return null;\n    };\n    /** @internal */\n    ErrorHandler.prototype._findOriginalError = function (error) {\n        var e = getOriginalError(error);\n        while (e && getOriginalError(e)) {\n            e = getOriginalError(e);\n        }\n        return e;\n    };\n    return ErrorHandler;\n}());\nfunction wrappedError(message, originalError) {\n    var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n    var error = Error(msg);\n    error[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction findFirstClosedCycle(keys) {\n    var res = [];\n    for (var i = 0; i < keys.length; ++i) {\n        if (res.indexOf(keys[i]) > -1) {\n            res.push(keys[i]);\n            return res;\n        }\n        res.push(keys[i]);\n    }\n    return res;\n}\nfunction constructResolvingPath(keys) {\n    if (keys.length > 1) {\n        var reversed = findFirstClosedCycle(keys.slice().reverse());\n        var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n        return ' (' + tokenStrs.join(' -> ') + ')';\n    }\n    return '';\n}\nfunction injectionError(injector, key, constructResolvingMessage, originalError) {\n    var keys = [key];\n    var errMsg = constructResolvingMessage(keys);\n    var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n    error.addKey = addKey;\n    error.keys = keys;\n    error.injectors = [injector];\n    error.constructResolvingMessage = constructResolvingMessage;\n    error[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\nfunction addKey(injector, key) {\n    this.injectors.push(injector);\n    this.keys.push(key);\n    // Note: This updated message won't be reflected in the `.stack` property\n    this.message = this.constructResolvingMessage(this.keys);\n}\n/**\n * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n * {@link Injector} does not have a {@link Provider} for the given key.\n *\n * ### Example ([live demo](http://plnkr.co/edit/vq8D3FRB9aGbnWJqtEPE?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor(b:B) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n */\nfunction noProviderError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        var first = stringify(keys[0].token);\n        return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when dependencies form a cycle.\n *\n * ### Example ([live demo](http://plnkr.co/edit/wYQdNos0Tzql3ei1EV9j?p=info))\n *\n * ```typescript\n * var injector = Injector.resolveAndCreate([\n *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n * ]);\n *\n * expect(() => injector.get(\"one\")).toThrowError();\n * ```\n *\n * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n */\nfunction cyclicDependencyError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when a constructing type returns with an Error.\n *\n * The `InstantiationError` class contains the original error plus the dependency graph which caused\n * this object to be instantiated.\n *\n * ### Example ([live demo](http://plnkr.co/edit/7aWYdcqTQsP0eNqEdUAf?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor() {\n *     throw new Error('message');\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([A]);\n\n * try {\n *   injector.get(A);\n * } catch (e) {\n *   expect(e instanceof InstantiationError).toBe(true);\n *   expect(e.originalException.message).toEqual(\"message\");\n *   expect(e.originalStack).toBeDefined();\n * }\n * ```\n */\nfunction instantiationError(injector, originalException, originalStack, key) {\n    return injectionError(injector, key, function (keys) {\n        var first = stringify(keys[0].token);\n        return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n    }, originalException);\n}\n/**\n * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n * creation.\n *\n * ### Example ([live demo](http://plnkr.co/edit/YatCFbPAMCL0JSSQ4mvH?p=preview))\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n * ```\n */\nfunction invalidProviderError(provider) {\n    return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n}\n/**\n * Thrown when the class has no annotation information.\n *\n * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n * need to be injected into the constructor.\n *\n * ### Example ([live demo](http://plnkr.co/edit/rHnZtlNS7vJOPQ6pcVkm?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor(b) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n *\n * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n *\n * ```typescript\n * class B {}\n *\n * class A {\n *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n * }\n *\n * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n * ```\n *\n */\nfunction noAnnotationError(typeOrFunc, params) {\n    var signature = [];\n    for (var i = 0, ii = params.length; i < ii; i++) {\n        var parameter = params[i];\n        if (!parameter || parameter.length == 0) {\n            signature.push('?');\n        }\n        else {\n            signature.push(parameter.map(stringify).join(' '));\n        }\n    }\n    return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n        signature.join(', ') + '). ' +\n        'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n        stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n}\n/**\n * Thrown when getting an object by index.\n *\n * ### Example ([live demo](http://plnkr.co/edit/bRs0SX2OTQiJzqvjgl8P?p=preview))\n *\n * ```typescript\n * class A {}\n *\n * var injector = Injector.resolveAndCreate([A]);\n *\n * expect(() => injector.getAt(100)).toThrowError();\n * ```\n *\n */\nfunction outOfBoundsError(index) {\n    return Error(\"Index \" + index + \" is out-of-bounds.\");\n}\n// TODO: add a working example after alpha38 is released\n/**\n * Thrown when a multi provider and a regular provider are bound to the same token.\n *\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\n *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n * ])).toThrowError();\n * ```\n */\nfunction mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n    return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n *\n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n *\n * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n *\n * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n * @deprecated No replacement\n */\nvar ReflectiveKey = /** @class */ (function () {\n    /**\n     * Private\n     */\n    function ReflectiveKey(token, id) {\n        this.token = token;\n        this.id = id;\n        if (!token) {\n            throw new Error('Token must be defined!');\n        }\n        this.displayName = stringify(this.token);\n    }\n    /**\n     * Retrieves a `Key` for a token.\n     */\n    ReflectiveKey.get = function (token) {\n        return _globalKeyRegistry.get(resolveForwardRef(token));\n    };\n    Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n        /**\n         * @returns the number of keys registered in the system.\n         */\n        get: function () { return _globalKeyRegistry.numberOfKeys; },\n        enumerable: true,\n        configurable: true\n    });\n    return ReflectiveKey;\n}());\nvar KeyRegistry = /** @class */ (function () {\n    function KeyRegistry() {\n        this._allKeys = new Map();\n    }\n    KeyRegistry.prototype.get = function (token) {\n        if (token instanceof ReflectiveKey)\n            return token;\n        if (this._allKeys.has(token)) {\n            return this._allKeys.get(token);\n        }\n        var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n        this._allKeys.set(token, newKey);\n        return newKey;\n    };\n    Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n        get: function () { return this._allKeys.size; },\n        enumerable: true,\n        configurable: true\n    });\n    return KeyRegistry;\n}());\nvar _globalKeyRegistry = new KeyRegistry();\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nvar Reflector = /** @class */ (function () {\n    function Reflector(reflectionCapabilities) {\n        this.reflectionCapabilities = reflectionCapabilities;\n    }\n    Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n    Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n    Reflector.prototype.parameters = function (typeOrFunc) {\n        return this.reflectionCapabilities.parameters(typeOrFunc);\n    };\n    Reflector.prototype.annotations = function (typeOrFunc) {\n        return this.reflectionCapabilities.annotations(typeOrFunc);\n    };\n    Reflector.prototype.propMetadata = function (typeOrFunc) {\n        return this.reflectionCapabilities.propMetadata(typeOrFunc);\n    };\n    Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n        return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n    };\n    Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n    Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n    Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n    Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n    Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n    Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n        return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n    };\n    Reflector.prototype.resolveEnum = function (identifier, name) {\n        return this.reflectionCapabilities.resolveEnum(identifier, name);\n    };\n    return Reflector;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The {@link Reflector} used internally in Angular to access metadata\n * about symbols.\n */\nvar reflector = new Reflector(new ReflectionCapabilities());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `Dependency` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nvar ReflectiveDependency = /** @class */ (function () {\n    function ReflectiveDependency(key, optional, visibility) {\n        this.key = key;\n        this.optional = optional;\n        this.visibility = visibility;\n    }\n    ReflectiveDependency.fromKey = function (key) {\n        return new ReflectiveDependency(key, false, null);\n    };\n    return ReflectiveDependency;\n}());\nvar _EMPTY_LIST = [];\nvar ResolvedReflectiveProvider_ = /** @class */ (function () {\n    function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n        this.key = key;\n        this.resolvedFactories = resolvedFactories;\n        this.multiProvider = multiProvider;\n        this.resolvedFactory = this.resolvedFactories[0];\n    }\n    return ResolvedReflectiveProvider_;\n}());\n/**\n * An internal resolved representation of a factory function created by resolving {@link\n * Provider}.\n * @experimental\n */\nvar ResolvedReflectiveFactory = /** @class */ (function () {\n    function ResolvedReflectiveFactory(\n    /**\n     * Factory function which can return an instance of an object represented by a key.\n     */\n    factory, \n    /**\n     * Arguments (dependencies) to the `factory` function.\n     */\n    dependencies) {\n        this.factory = factory;\n        this.dependencies = dependencies;\n    }\n    return ResolvedReflectiveFactory;\n}());\n/**\n * Resolve a single provider.\n */\nfunction resolveReflectiveFactory(provider) {\n    var factoryFn;\n    var resolvedDeps;\n    if (provider.useClass) {\n        var useClass = resolveForwardRef(provider.useClass);\n        factoryFn = reflector.factory(useClass);\n        resolvedDeps = _dependenciesFor(useClass);\n    }\n    else if (provider.useExisting) {\n        factoryFn = function (aliasInstance) { return aliasInstance; };\n        resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n    }\n    else if (provider.useFactory) {\n        factoryFn = provider.useFactory;\n        resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n    }\n    else {\n        factoryFn = function () { return provider.useValue; };\n        resolvedDeps = _EMPTY_LIST;\n    }\n    return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n}\n/**\n * Converts the {@link Provider} into {@link ResolvedProvider}.\n *\n * {@link Injector} internally only uses {@link ResolvedProvider}, {@link Provider} contains\n * convenience provider syntax.\n */\nfunction resolveReflectiveProvider(provider) {\n    return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n}\n/**\n * Resolve a list of Providers.\n */\nfunction resolveReflectiveProviders(providers) {\n    var normalized = _normalizeProviders(providers, []);\n    var resolved = normalized.map(resolveReflectiveProvider);\n    var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n    return Array.from(resolvedProviderMap.values());\n}\n/**\n * Merges a list of ResolvedProviders into a list where\n * each key is contained exactly once and multi providers\n * have been merged.\n */\nfunction mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n    for (var i = 0; i < providers.length; i++) {\n        var provider = providers[i];\n        var existing = normalizedProvidersMap.get(provider.key.id);\n        if (existing) {\n            if (provider.multiProvider !== existing.multiProvider) {\n                throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n            }\n            if (provider.multiProvider) {\n                for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                    existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                }\n            }\n            else {\n                normalizedProvidersMap.set(provider.key.id, provider);\n            }\n        }\n        else {\n            var resolvedProvider = void 0;\n            if (provider.multiProvider) {\n                resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n            }\n            else {\n                resolvedProvider = provider;\n            }\n            normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n        }\n    }\n    return normalizedProvidersMap;\n}\nfunction _normalizeProviders(providers, res) {\n    providers.forEach(function (b) {\n        if (b instanceof Type) {\n            res.push({ provide: b, useClass: b });\n        }\n        else if (b && typeof b == 'object' && b.provide !== undefined) {\n            res.push(b);\n        }\n        else if (b instanceof Array) {\n            _normalizeProviders(b, res);\n        }\n        else {\n            throw invalidProviderError(b);\n        }\n    });\n    return res;\n}\nfunction constructDependencies(typeOrFunc, dependencies) {\n    if (!dependencies) {\n        return _dependenciesFor(typeOrFunc);\n    }\n    else {\n        var params_1 = dependencies.map(function (t) { return [t]; });\n        return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n    }\n}\nfunction _dependenciesFor(typeOrFunc) {\n    var params = reflector.parameters(typeOrFunc);\n    if (!params)\n        return [];\n    if (params.some(function (p) { return p == null; })) {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n    return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n}\nfunction _extractToken(typeOrFunc, metadata, params) {\n    var token = null;\n    var optional = false;\n    if (!Array.isArray(metadata)) {\n        if (metadata instanceof Inject) {\n            return _createDependency(metadata.token, optional, null);\n        }\n        else {\n            return _createDependency(metadata, optional, null);\n        }\n    }\n    var visibility = null;\n    for (var i = 0; i < metadata.length; ++i) {\n        var paramMetadata = metadata[i];\n        if (paramMetadata instanceof Type) {\n            token = paramMetadata;\n        }\n        else if (paramMetadata instanceof Inject) {\n            token = paramMetadata.token;\n        }\n        else if (paramMetadata instanceof Optional) {\n            optional = true;\n        }\n        else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n            visibility = paramMetadata;\n        }\n        else if (paramMetadata instanceof InjectionToken) {\n            token = paramMetadata;\n        }\n    }\n    token = resolveForwardRef(token);\n    if (token != null) {\n        return _createDependency(token, optional, visibility);\n    }\n    else {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n}\nfunction _createDependency(token, optional, visibility) {\n    return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Threshold for the dynamic version\nvar UNDEFINED = new Object();\n/**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n *\n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n *\n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n *\n * ### Example ([live demo](http://plnkr.co/edit/jzjec0?p=preview))\n *\n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n *\n * ```typescript\n * @Injectable()\n * class Engine {\n * }\n *\n * @Injectable()\n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n *\n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n *\n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n *\n * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n */\nvar ReflectiveInjector = /** @class */ (function () {\n    function ReflectiveInjector() {\n    }\n    /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders} for more info.\n     */\n    ReflectiveInjector.resolve = function (providers) {\n        return resolveReflectiveProviders(providers);\n    };\n    /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {@link ReflectiveInjector#resolve resolve} and\n     * {@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders}.\n     */\n    ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n        var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n    };\n    /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * @experimental\n     */\n    ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n        return new ReflectiveInjector_(providers, parent);\n    };\n    return ReflectiveInjector;\n}());\nvar ReflectiveInjector_ = /** @class */ (function () {\n    /**\n     * Private\n     */\n    function ReflectiveInjector_(_providers, _parent) {\n        /** @internal */\n        this._constructionCounter = 0;\n        this._providers = _providers;\n        this.parent = _parent || null;\n        var len = _providers.length;\n        this.keyIds = new Array(len);\n        this.objs = new Array(len);\n        for (var i = 0; i < len; i++) {\n            this.keyIds[i] = _providers[i].key.id;\n            this.objs[i] = UNDEFINED;\n        }\n    }\n    ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n        return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n    };\n    ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n        var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return this.createChildFromResolved(ResolvedReflectiveProviders);\n    };\n    ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n        var inj = new ReflectiveInjector_(providers);\n        inj.parent = this;\n        return inj;\n    };\n    ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n        return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n    };\n    ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n        return this._instantiateProvider(provider);\n    };\n    ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n        if (index < 0 || index >= this._providers.length) {\n            throw outOfBoundsError(index);\n        }\n        return this._providers[index];\n    };\n    /** @internal */\n    ReflectiveInjector_.prototype._new = function (provider) {\n        if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n            throw cyclicDependencyError(this, provider.key);\n        }\n        return this._instantiateProvider(provider);\n    };\n    ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n    ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n        if (provider.multiProvider) {\n            var res = new Array(provider.resolvedFactories.length);\n            for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n            }\n            return res;\n        }\n        else {\n            return this._instantiate(provider, provider.resolvedFactories[0]);\n        }\n    };\n    ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n        var _this = this;\n        var factory = ResolvedReflectiveFactory$$1.factory;\n        var deps;\n        try {\n            deps =\n                ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n        }\n        catch (e) {\n            if (e.addKey) {\n                e.addKey(this, provider.key);\n            }\n            throw e;\n        }\n        var obj;\n        try {\n            obj = factory.apply(void 0, __spread(deps));\n        }\n        catch (e) {\n            throw instantiationError(this, e, e.stack, provider.key);\n        }\n        return obj;\n    };\n    ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n        return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n    };\n    ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n        if (key === ReflectiveInjector_.INJECTOR_KEY) {\n            return this;\n        }\n        if (visibility instanceof Self) {\n            return this._getByKeySelf(key, notFoundValue);\n        }\n        else {\n            return this._getByKeyDefault(key, notFoundValue, visibility);\n        }\n    };\n    ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n        for (var i = 0; i < this.keyIds.length; i++) {\n            if (this.keyIds[i] === keyId) {\n                if (this.objs[i] === UNDEFINED) {\n                    this.objs[i] = this._new(this._providers[i]);\n                }\n                return this.objs[i];\n            }\n        }\n        return UNDEFINED;\n    };\n    /** @internal */\n    ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n        if (notFoundValue !== THROW_IF_NOT_FOUND) {\n            return notFoundValue;\n        }\n        else {\n            throw noProviderError(this, key);\n        }\n    };\n    /** @internal */\n    ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n        var obj = this._getObjByKeyId(key.id);\n        return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n    };\n    /** @internal */\n    ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n        var inj;\n        if (visibility instanceof SkipSelf) {\n            inj = this.parent;\n        }\n        else {\n            inj = this;\n        }\n        while (inj instanceof ReflectiveInjector_) {\n            var inj_ = inj;\n            var obj = inj_._getObjByKeyId(key.id);\n            if (obj !== UNDEFINED)\n                return obj;\n            inj = inj_.parent;\n        }\n        if (inj !== null) {\n            return inj.get(key.token, notFoundValue);\n        }\n        else {\n            return this._throwOrNull(key, notFoundValue);\n        }\n    };\n    Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n        get: function () {\n            var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                .join(', ');\n            return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n    ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n    return ReflectiveInjector_;\n}());\nfunction _mapProviders(injector, fn) {\n    var res = new Array(injector._providers.length);\n    for (var i = 0; i < injector._providers.length; ++i) {\n        res[i] = fn(injector.getProviderAtIndex(i));\n    }\n    return res;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An internal token whose presence in an injector indicates that the injector should treat itself\n * as a root scoped injector when processing requests for unknown tokens which may indicate\n * they are provided in the root scope.\n */\nvar APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Marker which indicates that a value has not yet been created from the factory function.\n */\nvar NOT_YET = {};\n/**\n * Marker which indicates that the factory function for a token is in the process of being called.\n *\n * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n * injection of a dependency has recursively attempted to inject the original token, and there is\n * a circular dependency among the providers.\n */\nvar CIRCULAR$2 = {};\nvar EMPTY_ARRAY$2 = [];\n/**\n * A lazily initialized NullInjector.\n */\nvar NULL_INJECTOR$2 = undefined;\nfunction getNullInjector() {\n    if (NULL_INJECTOR$2 === undefined) {\n        NULL_INJECTOR$2 = new NullInjector();\n    }\n    return NULL_INJECTOR$2;\n}\n/**\n * Create a new `Injector` which is configured using `InjectorType`s.\n *\n * @experimental\n */\nfunction createInjector(defType, parent) {\n    if (parent === void 0) { parent = null; }\n    parent = parent || getNullInjector();\n    return new R3Injector(defType, parent);\n}\nvar R3Injector = /** @class */ (function () {\n    function R3Injector(def, parent) {\n        var _this = this;\n        this.parent = parent;\n        /**\n         * Map of tokens to records which contain the instances of those tokens.\n         */\n        this.records = new Map();\n        /**\n         * The transitive set of `InjectorType`s which define this injector.\n         */\n        this.injectorDefTypes = new Set();\n        /**\n         * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n         */\n        this.onDestroy = new Set();\n        /**\n         * Flag indicating that this injector was previously destroyed.\n         */\n        this.destroyed = false;\n        // Start off by creating Records for every provider declared in every InjectorType\n        // included transitively in `def`.\n        deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, new Set()); });\n        // Make sure the INJECTOR token provides this injector.\n        this.records.set(INJECTOR, makeRecord(undefined, this));\n        // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n        // any injectable scoped to APP_ROOT_SCOPE.\n        this.isRootInjector = this.records.has(APP_ROOT);\n        // Eagerly instantiate the InjectorType classes themselves.\n        this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n    }\n    /**\n     * Destroy the injector and release references to every instance or provider associated with it.\n     *\n     * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n     * hook was found.\n     */\n    R3Injector.prototype.destroy = function () {\n        this.assertNotDestroyed();\n        // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n        this.destroyed = true;\n        try {\n            // Call all the lifecycle hooks.\n            this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n        }\n        finally {\n            // Release all references.\n            this.records.clear();\n            this.onDestroy.clear();\n            this.injectorDefTypes.clear();\n        }\n    };\n    R3Injector.prototype.get = function (token, notFoundValue, flags) {\n        if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n        if (flags === void 0) { flags = 0 /* Default */; }\n        this.assertNotDestroyed();\n        // Set the injection context.\n        var previousInjector = setCurrentInjector(this);\n        try {\n            // Check for the SkipSelf flag.\n            if (!(flags & 4 /* SkipSelf */)) {\n                // SkipSelf isn't set, check if the record belongs to this injector.\n                var record = this.records.get(token);\n                if (record === undefined) {\n                    // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                    // with a scope matching this injector.\n                    var def = couldBeInjectableType(token) &&\n                        token.ngInjectableDef ||\n                        undefined;\n                    if (def !== undefined && this.injectableDefInScope(def)) {\n                        // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                        // all along.\n                        record = injectableDefRecord(token);\n                        this.records.set(token, record);\n                    }\n                }\n                // If a record was found, get the instance for it and return it.\n                if (record !== undefined) {\n                    return this.hydrate(token, record);\n                }\n            }\n            // Select the next injector based on the Self flag - if self is set, the next injector is\n            // the NullInjector, otherwise it's the parent.\n            var next = !(flags & 2 /* Self */) ? this.parent : getNullInjector();\n            return this.parent.get(token, notFoundValue);\n        }\n        finally {\n            // Lastly, clean up the state by restoring the previous injector.\n            setCurrentInjector(previousInjector);\n        }\n    };\n    R3Injector.prototype.assertNotDestroyed = function () {\n        if (this.destroyed) {\n            throw new Error('Injector has already been destroyed.');\n        }\n    };\n    /**\n     * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n     * to this injector.\n     */\n    R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents) {\n        var _this = this;\n        defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n        // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n        // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n        // read, so care is taken to only do the read once.\n        // First attempt to read the ngInjectorDef.\n        var def = defOrWrappedDef.ngInjectorDef;\n        // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n        var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n        // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n        // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n        // is the `ngModule`.\n        var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n        // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n        // extra providers.\n        var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n            EMPTY_ARRAY$2;\n        // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n        // `InjectorDef` is on its `ngModule`.\n        if (ngModule !== undefined) {\n            def = ngModule.ngInjectorDef;\n        }\n        // If no definition was found, throw.\n        if (def == null) {\n            throw new Error(\"Type \" + stringify(defType) + \" is missing an ngInjectorDef definition.\");\n        }\n        // Check for circular dependencies.\n        if (parents.has(defType)) {\n            throw new Error(\"Circular dependency: type \" + stringify(defType) + \" ends up importing itself.\");\n        }\n        // Track the InjectorType and add a provider for it.\n        this.injectorDefTypes.add(defType);\n        this.records.set(defType, makeRecord(def.factory));\n        // Add providers in the same way that @NgModule resolution did:\n        // First, include providers from any imports.\n        if (def.imports != null) {\n            // Before processing defType's imports, add it to the set of parents. This way, if it ends\n            // up deeply importing itself, this can be detected.\n            parents.add(defType);\n            try {\n                deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents); });\n            }\n            finally {\n                // Remove it from the parents set when finished.\n                parents.delete(defType);\n            }\n        }\n        // Next, include providers listed on the definition itself.\n        if (def.providers != null) {\n            deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n        }\n        // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n        deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n    };\n    /**\n     * Process a `SingleProvider` and add it.\n     */\n    R3Injector.prototype.processProvider = function (provider) {\n        // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n        // property.\n        provider = resolveForwardRef(provider);\n        var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n        // Construct a `Record` for the provider.\n        var record = providerToRecord(provider);\n        if (!isTypeProvider(provider) && provider.multi === true) {\n            // If the provider indicates that it's a multi-provider, process it specially.\n            // First check whether it's been defined already.\n            var multiRecord_1 = this.records.get(token);\n            if (multiRecord_1) {\n                // It has. Throw a nice error if\n                if (multiRecord_1.multi === undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                }\n            }\n            else {\n                token = provider;\n                multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                this.records.set(token, multiRecord_1);\n            }\n            token = provider;\n            multiRecord_1.multi.push(provider);\n        }\n        var existing = this.records.get(token);\n        if (existing && existing.multi !== undefined) {\n            throw new Error(\"Mixed multi-provider for \" + token);\n        }\n        this.records.set(token, record);\n    };\n    R3Injector.prototype.hydrate = function (token, record) {\n        if (record.value === CIRCULAR$2) {\n            throw new Error(\"Circular dep for \" + stringify(token));\n        }\n        else if (record.value === NOT_YET) {\n            record.value = CIRCULAR$2;\n            record.value = record.factory();\n        }\n        if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n            this.onDestroy.add(record.value);\n        }\n        return record.value;\n    };\n    R3Injector.prototype.injectableDefInScope = function (def) {\n        if (!def.providedIn) {\n            return false;\n        }\n        else if (typeof def.providedIn === 'string') {\n            return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n        }\n        else {\n            return this.injectorDefTypes.has(def.providedIn);\n        }\n    };\n    return R3Injector;\n}());\nfunction injectableDefRecord(token) {\n    var def = token.ngInjectableDef;\n    if (def === undefined) {\n        throw new Error(\"Type \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n    }\n    return makeRecord(def.factory);\n}\nfunction providerToRecord(provider) {\n    var token = resolveForwardRef(provider);\n    var value = NOT_YET;\n    var factory = undefined;\n    if (isTypeProvider(provider)) {\n        return injectableDefRecord(provider);\n    }\n    else {\n        token = resolveForwardRef(provider.provide);\n        if (isValueProvider(provider)) {\n            value = provider.useValue;\n        }\n        else if (isExistingProvider(provider)) {\n            factory = function () { return inject(provider.useExisting); };\n        }\n        else if (isFactoryProvider(provider)) {\n            factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n        }\n        else {\n            var classRef_1 = provider.useClass || token;\n            if (hasDeps(provider)) {\n                factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n            }\n            else {\n                return injectableDefRecord(classRef_1);\n            }\n        }\n    }\n    return makeRecord(factory, value);\n}\nfunction makeRecord(factory, value, multi) {\n    if (value === void 0) { value = NOT_YET; }\n    if (multi === void 0) { multi = false; }\n    return {\n        factory: factory,\n        value: value,\n        multi: multi ? [] : undefined,\n    };\n}\nfunction deepForEach(input, fn) {\n    input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n}\nfunction isValueProvider(value) {\n    return USE_VALUE in value;\n}\nfunction isExistingProvider(value) {\n    return !!value.useExisting;\n}\nfunction isFactoryProvider(value) {\n    return !!value.useFactory;\n}\nfunction isTypeProvider(value) {\n    return typeof value === 'function';\n}\nfunction hasDeps(value) {\n    return !!value.deps;\n}\nfunction hasOnDestroy(value) {\n    return typeof value === 'object' && value != null && value.ngOnDestroy &&\n        typeof value.ngOnDestroy === 'function';\n}\nfunction couldBeInjectableType(value) {\n    return (typeof value === 'function') ||\n        (typeof value === 'object' && value instanceof InjectionToken);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * The `di` module provides dependency injection container services.\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n *\n */\nvar KeyValueDiffers = /** @class */ (function () {\n    function KeyValueDiffers(factories) {\n        this.factories = factories;\n    }\n    KeyValueDiffers.create = function (factories, parent) {\n        if (parent) {\n            var copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new KeyValueDiffers(factories);\n    };\n    /**\n     * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n     * {@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    KeyValueDiffers.extend = function (factories) {\n        return {\n            provide: KeyValueDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                    // to bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                }\n                return KeyValueDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    KeyValueDiffers.prototype.find = function (kv) {\n        var factory = this.factories.find(function (f) { return f.supports(kv); });\n        if (factory) {\n            return factory;\n        }\n        throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n    };\n    return KeyValueDiffers;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ChangeDetectorRef = /** @class */ (function () {\n    function ChangeDetectorRef() {\n    }\n    return ChangeDetectorRef;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Structural diffing for `Object`s and `Map`s.\n */\nvar keyValDiff = [new DefaultKeyValueDifferFactory()];\n/**\n * Structural diffing for `Iterable` types such as `Array`s.\n */\nvar iterableDiff = [new DefaultIterableDifferFactory()];\nvar defaultIterableDiffers = new IterableDiffers(iterableDiff);\nvar defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Defines template and style encapsulation options available for Component's {@link Component}.\n *\n * See {@link Component#encapsulation encapsulation}.\n *\n */\n\n(function (ViewEncapsulation) {\n    /**\n     * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n     * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n     * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n     * selectors.\n     *\n     * This is the default option.\n     */\n    ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n    /**\n     * Use the native encapsulation mechanism of the renderer.\n     *\n     * For the DOM this means using [Shadow DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n     * creating a ShadowRoot for Component's Host Element.\n     */\n    ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n    /**\n     * Don't provide any template or style encapsulation.\n     */\n    ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n})(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n    var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n    if (isFirstCheck) {\n        msg +=\n            \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                \" Has it been created in a change detection hook ?\";\n    }\n    return viewDebugError(msg, context);\n}\nfunction viewWrappedDebugError(err, context) {\n    if (!(err instanceof Error)) {\n        // errors that are not Error instances don't have a stack,\n        // so it is ok to wrap them into a new Error object...\n        err = new Error(err.toString());\n    }\n    _addDebugContext(err, context);\n    return err;\n}\nfunction viewDebugError(msg, context) {\n    var err = new Error(msg);\n    _addDebugContext(err, context);\n    return err;\n}\nfunction _addDebugContext(err, context) {\n    err[ERROR_DEBUG_CONTEXT] = context;\n    err[ERROR_LOGGER] = context.logError.bind(context);\n}\nfunction isViewDebugError(err) {\n    return !!getDebugContext(err);\n}\nfunction viewDestroyedError(action) {\n    return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Called before each cycle of a view's check to detect whether this is in the\n// initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n// lifecycle methods. Returns true if this check cycle should call lifecycle\n// methods.\nfunction shiftInitState(view, priorInitState, newInitState) {\n    // Only update the InitState if we are currently in the prior state.\n    // For example, only move into CallingInit if we are in BeforeInit. Only\n    // move into CallingContentInit if we are in CallingInit. Normally this will\n    // always be true because of how checkCycle is called in checkAndUpdateView.\n    // However, if checkAndUpdateView is called recursively or if an exception is\n    // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n    // from the beginning. This ensures the state is monotonically increasing,\n    // terminating in the AfterInit state, which ensures the Init methods are called\n    // at least once and only once.\n    var state = view.state;\n    var initState = state & 1792;\n    if (initState === priorInitState) {\n        view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n        view.initIndex = -1;\n        return true;\n    }\n    return initState === newInitState;\n}\n// Returns true if the lifecycle init method should be called for the node with\n// the given init index.\nfunction shouldCallLifecycleInitHook(view, initState, index) {\n    if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n        view.initIndex = index + 1;\n        return true;\n    }\n    return false;\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asTextData(view, index) {\n    return view.nodes[index];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asElementData(view, index) {\n    return view.nodes[index];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asProviderData(view, index) {\n    return view.nodes[index];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asPureExpressionData(view, index) {\n    return view.nodes[index];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asQueryList(view, index) {\n    return view.nodes[index];\n}\n/**\n * This object is used to prevent cycles in the source files and to have a place where\n * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n */\nvar Services = {\n    setCurrentNode: undefined,\n    createRootView: undefined,\n    createEmbeddedView: undefined,\n    createComponentView: undefined,\n    createNgModuleRef: undefined,\n    overrideProvider: undefined,\n    overrideComponentView: undefined,\n    clearOverrides: undefined,\n    checkAndUpdateView: undefined,\n    checkNoChangesView: undefined,\n    destroyView: undefined,\n    resolveDep: undefined,\n    createDebugContext: undefined,\n    handleEvent: undefined,\n    updateDirectives: undefined,\n    updateRenderer: undefined,\n    dirtyParentQueries: undefined,\n};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NOOP = function () { };\nvar _tokenKeyCache = new Map();\nfunction tokenKey(token) {\n    var key = _tokenKeyCache.get(token);\n    if (!key) {\n        key = stringify(token) + '_' + _tokenKeyCache.size;\n        _tokenKeyCache.set(token, key);\n    }\n    return key;\n}\nfunction unwrapValue(view, nodeIdx, bindingIdx, value) {\n    if (WrappedValue.isWrapped(value)) {\n        value = WrappedValue.unwrap(value);\n        var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n        var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n        view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n    }\n    return value;\n}\nvar UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\nvar EMPTY_RENDERER_TYPE_ID = '$$empty';\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nfunction createRendererType2(values) {\n    return {\n        id: UNDEFINED_RENDERER_TYPE_ID,\n        styles: values.styles,\n        encapsulation: values.encapsulation,\n        data: values.data\n    };\n}\nvar _renderCompCount = 0;\nfunction resolveRendererType2(type) {\n    if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n        // first time we see this RendererType2. Initialize it...\n        var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n            type.styles.length || Object.keys(type.data).length);\n        if (isFilled) {\n            type.id = \"c\" + _renderCompCount++;\n        }\n        else {\n            type.id = EMPTY_RENDERER_TYPE_ID;\n        }\n    }\n    if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n        type = null;\n    }\n    return type || null;\n}\nfunction checkBinding(view, def, bindingIdx, value) {\n    var oldValues = view.oldValues;\n    if ((view.state & 2 /* FirstCheck */) ||\n        !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n        return true;\n    }\n    return false;\n}\nfunction checkAndUpdateBinding$1(view, def, bindingIdx, value) {\n    if (checkBinding(view, def, bindingIdx, value)) {\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return true;\n    }\n    return false;\n}\nfunction checkBindingNoChanges(view, def, bindingIdx, value) {\n    var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n    if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n        var bindingName = def.bindings[bindingIdx].name;\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\nfunction markParentViewsForCheck(view) {\n    var currView = view;\n    while (currView) {\n        if (currView.def.flags & 2 /* OnPush */) {\n            currView.state |= 8 /* ChecksEnabled */;\n        }\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\nfunction markParentViewsForCheckProjectedViews(view, endView) {\n    var currView = view;\n    while (currView && currView !== endView) {\n        currView.state |= 64 /* CheckProjectedViews */;\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\nfunction dispatchEvent(view, nodeIndex, eventName, event) {\n    try {\n        var nodeDef = view.def.nodes[nodeIndex];\n        var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n            asElementData(view, nodeIndex).componentView :\n            view;\n        markParentViewsForCheck(startView);\n        return Services.handleEvent(view, nodeIndex, eventName, event);\n    }\n    catch (e) {\n        // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n        view.root.errorHandler.handleError(e);\n    }\n}\nfunction declaredViewContainer(view) {\n    if (view.parent) {\n        var parentView = view.parent;\n        return asElementData(parentView, view.parentNodeDef.nodeIndex);\n    }\n    return null;\n}\n/**\n * for component views, this is the host element.\n * for embedded views, this is the index of the parent node\n * that contains the view container.\n */\nfunction viewParentEl(view) {\n    var parentView = view.parent;\n    if (parentView) {\n        return view.parentNodeDef.parent;\n    }\n    else {\n        return null;\n    }\n}\nfunction renderNode(view, def) {\n    switch (def.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return asElementData(view, def.nodeIndex).renderElement;\n        case 2 /* TypeText */:\n            return asTextData(view, def.nodeIndex).renderText;\n    }\n}\nfunction elementEventFullName(target, name) {\n    return target ? target + \":\" + name : name;\n}\nfunction isComponentView(view) {\n    return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n}\nfunction isEmbeddedView(view) {\n    return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n}\nfunction filterQueryId(queryId) {\n    return 1 << (queryId % 32);\n}\nfunction splitMatchedQueriesDsl(matchedQueriesDsl) {\n    var matchedQueries = {};\n    var matchedQueryIds = 0;\n    var references = {};\n    if (matchedQueriesDsl) {\n        matchedQueriesDsl.forEach(function (_a) {\n            var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n            if (typeof queryId === 'number') {\n                matchedQueries[queryId] = valueType;\n                matchedQueryIds |= filterQueryId(queryId);\n            }\n            else {\n                references[queryId] = valueType;\n            }\n        });\n    }\n    return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n}\nfunction splitDepsDsl(deps, sourceName) {\n    return deps.map(function (value) {\n        var token;\n        var flags;\n        if (Array.isArray(value)) {\n            _a = __read(value, 2), flags = _a[0], token = _a[1];\n        }\n        else {\n            flags = 0 /* None */;\n            token = value;\n        }\n        if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n            Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n        }\n        return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        var _a;\n    });\n}\nfunction getParentRenderElement(view, renderHost, def) {\n    var renderParent = def.renderParent;\n    if (renderParent) {\n        if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n            (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n            (renderParent.element.componentRendererType &&\n                renderParent.element.componentRendererType.encapsulation ===\n                    exports.ViewEncapsulation.Native)) {\n            // only children of non components, or children of components with native encapsulation should\n            // be attached.\n            return asElementData(view, def.renderParent.nodeIndex).renderElement;\n        }\n    }\n    else {\n        return renderHost;\n    }\n}\nvar DEFINITION_CACHE = new WeakMap();\nfunction resolveDefinition(factory) {\n    var value = DEFINITION_CACHE.get(factory);\n    if (!value) {\n        value = factory(function () { return NOOP; });\n        value.factory = factory;\n        DEFINITION_CACHE.set(factory, value);\n    }\n    return value;\n}\nfunction rootRenderNodes(view) {\n    var renderNodes = [];\n    visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n    return renderNodes;\n}\nfunction visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n    // We need to re-compute the parent node in case the nodes have been moved around manually\n    if (action === 3 /* RemoveChild */) {\n        parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n    }\n    visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n}\nfunction visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n    for (var i = startIndex; i <= endIndex; i++) {\n        var nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n            visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n}\nfunction visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n    var compView = view;\n    while (compView && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    var hostView = compView.parent;\n    var hostElDef = viewParentEl(compView);\n    var startIndex = hostElDef.nodeIndex + 1;\n    var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n    for (var i = startIndex; i <= endIndex; i++) {\n        var nodeDef = hostView.def.nodes[i];\n        if (nodeDef.ngContentIndex === ngContentIndex) {\n            visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n    if (!hostView.parent) {\n        // a root view\n        var projectedNodes = view.root.projectableNodes[ngContentIndex];\n        if (projectedNodes) {\n            for (var i = 0; i < projectedNodes.length; i++) {\n                execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n            }\n        }\n    }\n}\nfunction visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n    if (nodeDef.flags & 8 /* TypeNgContent */) {\n        visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n    }\n    else {\n        var rn = renderNode(view, nodeDef);\n        if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n            (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n            // Note: we might need to do both actions.\n            if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n            }\n        }\n        else {\n            execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n        }\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n            for (var k = 0; k < embeddedViews.length; k++) {\n                visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n            }\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n            visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n        }\n    }\n}\nfunction execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n    var renderer = view.renderer;\n    switch (action) {\n        case 1 /* AppendChild */:\n            renderer.appendChild(parentNode, renderNode);\n            break;\n        case 2 /* InsertBefore */:\n            renderer.insertBefore(parentNode, renderNode, nextSibling);\n            break;\n        case 3 /* RemoveChild */:\n            renderer.removeChild(parentNode, renderNode);\n            break;\n        case 0 /* Collect */:\n            target.push(renderNode);\n            break;\n    }\n}\nvar NS_PREFIX_RE = /^:([^:]+):(.+)$/;\nfunction splitNamespace(name) {\n    if (name[0] === ':') {\n        var match = name.match(NS_PREFIX_RE);\n        return [match[1], match[2]];\n    }\n    return ['', name];\n}\nfunction calcBindingFlags(bindings) {\n    var flags = 0;\n    for (var i = 0; i < bindings.length; i++) {\n        flags |= bindings[i].flags;\n    }\n    return flags;\n}\nfunction interpolate(valueCount, constAndInterp) {\n    var result = '';\n    for (var i = 0; i < valueCount * 2; i = i + 2) {\n        result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n    }\n    return result + constAndInterp[valueCount * 2];\n}\nfunction inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n    switch (valueCount) {\n        case 1:\n            return c0 + _toStringWithNull(a1) + c1;\n        case 2:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n        case 3:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3;\n        case 4:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4;\n        case 5:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n        case 6:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n        case 7:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7;\n        case 8:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n        case 9:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n        default:\n            throw new Error(\"Does not support more than 9 expressions\");\n    }\n}\nfunction _toStringWithNull(v) {\n    return v != null ? v.toString() : '';\n}\nvar EMPTY_ARRAY$1 = [];\nvar EMPTY_MAP = {};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * If a directive is diPublic, bloomAdd sets a property on the instance with this constant as\n * the key and the directive's unique ID as the value. This allows us to map directives to their\n * bloom filter bit for DI.\n */\nvar NG_ELEMENT_ID = '__NG_ELEMENT_ID__';\n/**\n * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n * directives that will share slots, and thus, the fewer false positives when checking for\n * the existence of a directive.\n */\nvar BLOOM_SIZE = 256;\n/** Counter used to generate unique IDs for directives. */\nvar nextNgElementId = 0;\n/**\n * Registers this directive as present in its node's injector by flipping the directive's\n * corresponding bit in the injector's bloom filter.\n *\n * @param injector The node injector in which the directive should be registered\n * @param type The directive to register\n */\nfunction bloomAdd(injector, type) {\n    var id = type[NG_ELEMENT_ID];\n    // Set a unique ID on the directive type, so if something tries to inject the directive,\n    // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n    if (id == null) {\n        id = type[NG_ELEMENT_ID] = nextNgElementId++;\n    }\n    // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n    // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n    // This means that after 255, some directives will share slots, leading to some false positives\n    // when checking for a directive's presence.\n    var bloomBit = id % BLOOM_SIZE;\n    // Create a mask that targets the specific bit associated with the directive.\n    // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n    // to bit positions 0 - 31 in a 32 bit integer.\n    var mask = 1 << bloomBit;\n    // Use the raw bloomBit number to determine which bloom filter bucket we should check\n    // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n    if (bloomBit < 128) {\n        // Then use the mask to flip on the bit (0-31) associated with the directive in that bucket\n        bloomBit < 64 ? (bloomBit < 32 ? (injector.bf0 |= mask) : (injector.bf1 |= mask)) :\n            (bloomBit < 96 ? (injector.bf2 |= mask) : (injector.bf3 |= mask));\n    }\n    else {\n        bloomBit < 192 ? (bloomBit < 160 ? (injector.bf4 |= mask) : (injector.bf5 |= mask)) :\n            (bloomBit < 224 ? (injector.bf6 |= mask) : (injector.bf7 |= mask));\n    }\n}\nfunction getOrCreateNodeInjector() {\n    ngDevMode && assertPreviousIsParent();\n    return getOrCreateNodeInjectorForNode(getPreviousOrParentNode());\n}\n/**\n * Creates (or gets an existing) injector for a given element or container.\n *\n * @param node for which an injector should be retrieved / created.\n * @returns Node injector\n */\nfunction getOrCreateNodeInjectorForNode(node) {\n    var nodeInjector = node.nodeInjector;\n    var parent = getParentLNode(node);\n    var parentInjector = parent && parent.nodeInjector;\n    if (nodeInjector != parentInjector) {\n        return nodeInjector;\n    }\n    return node.nodeInjector = {\n        parent: parentInjector,\n        node: node,\n        bf0: 0,\n        bf1: 0,\n        bf2: 0,\n        bf3: 0,\n        bf4: 0,\n        bf5: 0,\n        bf6: 0,\n        bf7: 0,\n        cbf0: parentInjector == null ? 0 : parentInjector.cbf0 | parentInjector.bf0,\n        cbf1: parentInjector == null ? 0 : parentInjector.cbf1 | parentInjector.bf1,\n        cbf2: parentInjector == null ? 0 : parentInjector.cbf2 | parentInjector.bf2,\n        cbf3: parentInjector == null ? 0 : parentInjector.cbf3 | parentInjector.bf3,\n        cbf4: parentInjector == null ? 0 : parentInjector.cbf4 | parentInjector.bf4,\n        cbf5: parentInjector == null ? 0 : parentInjector.cbf5 | parentInjector.bf5,\n        cbf6: parentInjector == null ? 0 : parentInjector.cbf6 | parentInjector.bf6,\n        cbf7: parentInjector == null ? 0 : parentInjector.cbf7 | parentInjector.bf7,\n        templateRef: null,\n        viewContainerRef: null,\n        elementRef: null,\n        changeDetectorRef: null\n    };\n}\n/**\n * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n *\n * @param di The node injector in which a directive will be added\n * @param def The definition of the directive to be made public\n */\nfunction diPublicInInjector(di, def) {\n    bloomAdd(di, def.type);\n}\n/**\n * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n *\n * @param def The definition of the directive to be made public\n */\nfunction diPublic(def) {\n    diPublicInInjector(getOrCreateNodeInjector(), def);\n}\nfunction directiveInject(token, flags) {\n    if (flags === void 0) { flags = 0 /* Default */; }\n    return getOrCreateInjectable(getOrCreateNodeInjector(), token, flags);\n}\n/**\n * Creates an ElementRef and stores it on the injector.\n * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n *\n * @returns The ElementRef instance to use\n */\nfunction injectElementRef() {\n    return getOrCreateElementRef(getOrCreateNodeInjector());\n}\n/**\n * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n * exists, retrieves the existing TemplateRef.\n *\n * @returns The TemplateRef instance to use\n */\nfunction injectTemplateRef() {\n    return getOrCreateTemplateRef(getOrCreateNodeInjector());\n}\n/**\n * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n * already exists, retrieves the existing ViewContainerRef.\n *\n * @returns The ViewContainerRef instance to use\n */\nfunction injectViewContainerRef() {\n    return getOrCreateContainerRef(getOrCreateNodeInjector());\n}\n/** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\nfunction injectChangeDetectorRef() {\n    return getOrCreateChangeDetectorRef(getOrCreateNodeInjector(), null);\n}\n/**\n * Inject static attribute value into directive constructor.\n *\n * This method is used with `factory` functions which are generated as part of\n * `defineDirective` or `defineComponent`. The method retrieves the static value\n * of an attribute. (Dynamic attributes are not supported since they are not resolved\n *  at the time of injection and can change over time.)\n *\n * # Example\n * Given:\n * ```\n * @Component(...)\n * class MyComponent {\n *   constructor(@Attribute('title') title: string) { ... }\n * }\n * ```\n * When instantiated with\n * ```\n * <my-component title=\"Hello\"></my-component>\n * ```\n *\n * Then factory method generated is:\n * ```\n * MyComponent.ngComponentDef = defineComponent({\n *   factory: () => new MyComponent(injectAttribute('title'))\n *   ...\n * })\n * ```\n *\n * @experimental\n */\nfunction injectAttribute(attrNameToInject) {\n    ngDevMode && assertPreviousIsParent();\n    var lElement = getPreviousOrParentNode();\n    ngDevMode && assertNodeType(lElement, 3 /* Element */);\n    var tElement = lElement.tNode;\n    ngDevMode && assertNotNull(tElement, 'expecting tNode');\n    var attrs = tElement.attrs;\n    if (attrs) {\n        for (var i = 0; i < attrs.length; i = i + 2) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SELECT_ONLY */)\n                break;\n            if (attrName == attrNameToInject) {\n                return attrs[i + 1];\n            }\n        }\n    }\n    return undefined;\n}\n/**\n * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n * Or, if it already exists, retrieves the existing instance.\n *\n * @returns The ChangeDetectorRef to use\n */\nfunction getOrCreateChangeDetectorRef(di, context) {\n    if (di.changeDetectorRef)\n        return di.changeDetectorRef;\n    var currentNode = di.node;\n    if (isComponent(currentNode.tNode)) {\n        return di.changeDetectorRef = createViewRef(currentNode.data, context);\n    }\n    else if (currentNode.tNode.type === 3 /* Element */) {\n        return di.changeDetectorRef = getOrCreateHostChangeDetector(currentNode.view.node);\n    }\n    return null;\n}\n/** Gets or creates ChangeDetectorRef for the closest host component */\nfunction getOrCreateHostChangeDetector(currentNode) {\n    var hostNode = getClosestComponentAncestor(currentNode);\n    var hostInjector = hostNode.nodeInjector;\n    var existingRef = hostInjector && hostInjector.changeDetectorRef;\n    return existingRef ?\n        existingRef :\n        createViewRef(hostNode.data, hostNode.view\n            .directives[hostNode.tNode.flags >> 13 /* DirectiveStartingIndexShift */]);\n}\n/**\n * If the node is an embedded view, traverses up the view tree to return the closest\n * ancestor view that is attached to a component. If it's already a component node,\n * returns itself.\n */\nfunction getClosestComponentAncestor(node) {\n    while (node.tNode.type === 2 /* View */) {\n        node = node.view.node;\n    }\n    return node;\n}\n/**\n * Searches for an instance of the given directive type up the injector tree and returns\n * that instance if found.\n *\n * Specifically, it gets the bloom filter bit associated with the directive (see bloomHashBit),\n * checks that bit against the bloom filter structure to identify an injector that might have\n * the directive (see bloomFindPossibleInjector), then searches the directives on that injector\n * for a match.\n *\n * If not found, it will propagate up to the next parent injector until the token\n * is found or the top is reached.\n *\n * @param di Node injector where the search should start\n * @param token The directive type to search for\n * @param flags Injection flags (e.g. CheckParent)\n * @returns The instance found\n */\nfunction getOrCreateInjectable(di, token, flags) {\n    if (flags === void 0) { flags = 0 /* Default */; }\n    var bloomHash = bloomHashBit(token);\n    // If the token has a bloom hash, then it is a directive that is public to the injection system\n    // (diPublic). If there is no hash, fall back to the module injector.\n    if (bloomHash === null) {\n        var moduleInjector = getPreviousOrParentNode().view.injector;\n        var formerInjector = setCurrentInjector(moduleInjector);\n        try {\n            return inject(token, flags);\n        }\n        finally {\n            setCurrentInjector(formerInjector);\n        }\n    }\n    else {\n        var injector = di;\n        while (injector) {\n            // Get the closest potential matching injector (upwards in the injector tree) that\n            // *potentially* has the token.\n            injector = bloomFindPossibleInjector(injector, bloomHash, flags);\n            // If no injector is found, we *know* that there is no ancestor injector that contains the\n            // token, so we abort.\n            if (!injector) {\n                break;\n            }\n            // At this point, we have an injector which *may* contain the token, so we step through the\n            // directives associated with the injector's corresponding node to get the directive instance.\n            var node = injector.node;\n            var nodeFlags = node.tNode.flags;\n            var count = nodeFlags & 4095;\n            if (count !== 0) {\n                var start = nodeFlags >> 13;\n                var end = start + count;\n                var defs = node.view.tView.directives;\n                for (var i = start; i < end; i++) {\n                    // Get the definition for the directive at this index and, if it is injectable (diPublic),\n                    // and matches the given token, return the directive instance.\n                    var directiveDef = defs[i];\n                    if (directiveDef.type === token && directiveDef.diPublic) {\n                        return getDirectiveInstance(node.view.directives[i]);\n                    }\n                }\n            }\n            // If we *didn't* find the directive for the token and we are searching the current node's\n            // injector, it's possible the directive is on this node and hasn't been created yet.\n            var instance = void 0;\n            if (injector === di && (instance = searchMatchesQueuedForCreation(node, token))) {\n                return instance;\n            }\n            // The def wasn't found anywhere on this node, so it was a false positive.\n            // If flags permit, traverse up the tree and continue searching.\n            if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                injector = null;\n            }\n            else {\n                injector = injector.parent;\n            }\n        }\n    }\n    // No directive was found for the given token.\n    if (flags & 8 /* Optional */)\n        return null;\n    throw new Error(\"Injector: NOT_FOUND [\" + stringify$1(token) + \"]\");\n}\nfunction searchMatchesQueuedForCreation(node, token) {\n    var matches = node.view.tView.currentMatches;\n    if (matches) {\n        for (var i = 0; i < matches.length; i += 2) {\n            var def = matches[i];\n            if (def.type === token) {\n                return resolveDirective(def, i + 1, matches, node.view.tView);\n            }\n        }\n    }\n    return null;\n}\n/**\n * Given a directive type, this function returns the bit in an injector's bloom filter\n * that should be used to determine whether or not the directive is present.\n *\n * When the directive was added to the bloom filter, it was given a unique ID that can be\n * retrieved on the class. Since there are only BLOOM_SIZE slots per bloom filter, the directive's\n * ID must be modulo-ed by BLOOM_SIZE to get the correct bloom bit (directives share slots after\n * BLOOM_SIZE is reached).\n *\n * @param type The directive type\n * @returns The bloom bit to check for the directive\n */\nfunction bloomHashBit(type) {\n    var id = type[NG_ELEMENT_ID];\n    return typeof id === 'number' ? id % BLOOM_SIZE : null;\n}\n/**\n * Finds the closest injector that might have a certain directive.\n *\n * Each directive corresponds to a bit in an injector's bloom filter. Given the bloom bit to\n * check and a starting injector, this function traverses up injectors until it finds an\n * injector that contains a 1 for that bit in its bloom filter. A 1 indicates that the\n * injector may have that directive. It only *may* have the directive because directives begin\n * to share bloom filter bits after the BLOOM_SIZE is reached, and it could correspond to a\n * different directive sharing the bit.\n *\n * Note: We can skip checking further injectors up the tree if an injector's cbf structure\n * has a 0 for that bloom bit. Since cbf contains the merged value of all the parent\n * injectors, a 0 in the bloom bit indicates that the parents definitely do not contain\n * the directive and do not need to be checked.\n *\n * @param injector The starting node injector to check\n * @param  bloomBit The bit to check in each injector's bloom filter\n * @param  flags The injection flags for this injection site (e.g. Optional or SkipSelf)\n * @returns An injector that might have the directive\n */\nfunction bloomFindPossibleInjector(startInjector, bloomBit, flags) {\n    // Create a mask that targets the specific bit associated with the directive we're looking for.\n    // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n    // to bit positions 0 - 31 in a 32 bit integer.\n    var mask = 1 << bloomBit;\n    // Traverse up the injector tree until we find a potential match or until we know there *isn't* a\n    // match.\n    var injector = flags & 4 /* SkipSelf */ ? startInjector.parent : startInjector;\n    while (injector) {\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value = void 0;\n        if (bloomBit < 128) {\n            value = bloomBit < 64 ? (bloomBit < 32 ? injector.bf0 : injector.bf1) :\n                (bloomBit < 96 ? injector.bf2 : injector.bf3);\n        }\n        else {\n            value = bloomBit < 192 ? (bloomBit < 160 ? injector.bf4 : injector.bf5) :\n                (bloomBit < 224 ? injector.bf6 : injector.bf7);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        if ((value & mask) === mask) {\n            return injector;\n        }\n        else if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n            return null;\n        }\n        // If the current injector does not have the directive, check the bloom filters for the ancestor\n        // injectors (cbf0 - cbf7). These filters capture *all* ancestor injectors.\n        if (bloomBit < 128) {\n            value = bloomBit < 64 ? (bloomBit < 32 ? injector.cbf0 : injector.cbf1) :\n                (bloomBit < 96 ? injector.cbf2 : injector.cbf3);\n        }\n        else {\n            value = bloomBit < 192 ? (bloomBit < 160 ? injector.cbf4 : injector.cbf5) :\n                (bloomBit < 224 ? injector.cbf6 : injector.cbf7);\n        }\n        // If the ancestor bloom filter value has the bit corresponding to the directive, traverse up to\n        // find the specific injector. If the ancestor bloom filter does not have the bit, we can abort.\n        injector = (value & mask) ? injector.parent : null;\n    }\n    return null;\n}\n/**\n * Checks whether the current injector and its parent are in the same host view.\n *\n * This is necessary to support @Host() decorators. If @Host() is set, we should stop searching once\n * the injector and its parent view don't match because it means we'd cross the view boundary.\n */\nfunction sameHostView(injector) {\n    return !!injector.parent && injector.parent.node.view === injector.node.view;\n}\nvar ReadFromInjectorFn = /** @class */ (function () {\n    function ReadFromInjectorFn(read) {\n        this.read = read;\n    }\n    return ReadFromInjectorFn;\n}());\n/**\n * Creates an ElementRef for a given node injector and stores it on the injector.\n * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n *\n * @param di The node injector where we should store a created ElementRef\n * @returns The ElementRef instance to use\n */\nfunction getOrCreateElementRef(di) {\n    return di.elementRef || (di.elementRef = new ElementRef(di.node.tNode.type === 0 /* Container */ ? null : di.node.native));\n}\n\n\n\n\n/** A ref to a node's native element. */\nvar ElementRef = /** @class */ (function () {\n    function ElementRef(nativeElement) {\n        this.nativeElement = nativeElement;\n    }\n    return ElementRef;\n}());\n/**\n * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n * already exists, retrieves the existing ViewContainerRef.\n *\n * @returns The ViewContainerRef instance to use\n */\nfunction getOrCreateContainerRef(di) {\n    if (!di.viewContainerRef) {\n        var vcRefHost = di.node;\n        ngDevMode && assertNodeOfPossibleTypes(vcRefHost, 0 /* Container */, 3 /* Element */);\n        var hostParent = getParentLNode(vcRefHost);\n        var lContainer = createLContainer(hostParent, vcRefHost.view, undefined, true);\n        var lContainerNode = createLNodeObject(0 /* Container */, vcRefHost.view, hostParent, undefined, lContainer, null);\n        if (vcRefHost.queries) {\n            lContainerNode.queries = vcRefHost.queries.container();\n        }\n        var hostTNode = vcRefHost.tNode;\n        if (!hostTNode.dynamicContainerNode) {\n            hostTNode.dynamicContainerNode = createTNode(0 /* Container */, -1, null, null, null, null);\n        }\n        lContainerNode.tNode = hostTNode.dynamicContainerNode;\n        vcRefHost.dynamicLContainerNode = lContainerNode;\n        addToViewTree(vcRefHost.view, hostTNode.index, lContainer);\n        di.viewContainerRef = new ViewContainerRef(lContainerNode);\n    }\n    return di.viewContainerRef;\n}\n/**\n * A ref to a container that enables adding and removing views from that container\n * imperatively.\n */\nvar ViewContainerRef = /** @class */ (function () {\n    function ViewContainerRef(_lContainerNode) {\n        this._lContainerNode = _lContainerNode;\n        this._viewRefs = [];\n    }\n    ViewContainerRef.prototype.clear = function () {\n        var lContainer = this._lContainerNode.data;\n        while (lContainer.views.length) {\n            this.remove(0);\n        }\n    };\n    ViewContainerRef.prototype.get = function (index) { return this._viewRefs[index] || null; };\n    Object.defineProperty(ViewContainerRef.prototype, \"length\", {\n        get: function () {\n            var lContainer = this._lContainerNode.data;\n            return lContainer.views.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ViewContainerRef.prototype.createEmbeddedView = function (templateRef, context, index) {\n        var viewRef = templateRef.createEmbeddedView(context || {});\n        this.insert(viewRef, index);\n        return viewRef;\n    };\n    ViewContainerRef.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModule) {\n        throw notImplemented();\n    };\n    ViewContainerRef.prototype.insert = function (viewRef, index) {\n        var lViewNode = viewRef._lViewNode;\n        var adjustedIdx = this._adjustIndex(index);\n        insertView(this._lContainerNode, lViewNode, adjustedIdx);\n        // invalidate cache of next sibling RNode (we do similar operation in the containerRefreshEnd\n        // instruction)\n        this._lContainerNode.native = undefined;\n        this._viewRefs.splice(adjustedIdx, 0, viewRef);\n        return viewRef;\n    };\n    ViewContainerRef.prototype.move = function (viewRef, newIndex) {\n        var index = this.indexOf(viewRef);\n        this.detach(index);\n        this.insert(viewRef, this._adjustIndex(newIndex));\n        return viewRef;\n    };\n    ViewContainerRef.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n    ViewContainerRef.prototype.remove = function (index) {\n        this.detach(index);\n        // TODO(ml): proper destroy of the ViewRef, i.e. recursively destroy the LviewNode and its\n        // children, delete DOM nodes and QueryList, trigger hooks (onDestroy), destroy the renderer,\n        // detach projected nodes\n    };\n    ViewContainerRef.prototype.detach = function (index) {\n        var adjustedIdx = this._adjustIndex(index, -1);\n        removeView(this._lContainerNode, adjustedIdx);\n        return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n    };\n    ViewContainerRef.prototype._adjustIndex = function (index, shift) {\n        if (shift === void 0) { shift = 0; }\n        if (index == null) {\n            return this._lContainerNode.data.views.length + shift;\n        }\n        if (ngDevMode) {\n            assertGreaterThan(index, -1, 'index must be positive');\n            // +1 because it's legal to insert at the end.\n            assertLessThan(index, this._lContainerNode.data.views.length + 1 + shift, 'index');\n        }\n        return index;\n    };\n    return ViewContainerRef;\n}());\n/**\n * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n * exists, retrieves the existing TemplateRef.\n *\n * @param di The node injector where we should store a created TemplateRef\n * @returns The TemplateRef instance to use\n */\nfunction getOrCreateTemplateRef(di) {\n    if (!di.templateRef) {\n        ngDevMode && assertNodeType(di.node, 0 /* Container */);\n        var hostNode = di.node;\n        var hostTNode = hostNode.tNode;\n        var hostTView = hostNode.view.tView;\n        if (!hostTNode.tViews) {\n            hostTNode.tViews = createTView(-1, hostTView.directiveRegistry, hostTView.pipeRegistry);\n        }\n        ngDevMode && assertNotNull(hostTNode.tViews, 'TView must be allocated');\n        di.templateRef = new TemplateRef(getOrCreateElementRef(di), hostTNode.tViews, hostNode.data.template, getRenderer(), hostNode.data.queries);\n    }\n    return di.templateRef;\n}\nvar TemplateRef = /** @class */ (function () {\n    function TemplateRef(elementRef, _tView, _template, _renderer, _queries) {\n        this._tView = _tView;\n        this._template = _template;\n        this._renderer = _renderer;\n        this._queries = _queries;\n        this.elementRef = elementRef;\n    }\n    TemplateRef.prototype.createEmbeddedView = function (context) {\n        var viewNode = renderEmbeddedTemplate(null, this._tView, this._template, context, this._renderer, this._queries);\n        return addDestroyable(new EmbeddedViewRef(viewNode, this._template, context));\n    };\n    return TemplateRef;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a component definition object.\n *\n *\n * # Example\n * ```\n * class MyDirective {\n *   // Generated by Angular Template Compiler\n *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n *   static ngComponentDef = defineComponent({\n *     ...\n *   });\n * }\n * ```\n */\nfunction defineComponent(componentDefinition) {\n    var type = componentDefinition.type;\n    var pipeTypes = componentDefinition.pipes;\n    var directiveTypes = componentDefinition.directives;\n    var def = {\n        type: type,\n        diPublic: null,\n        factory: componentDefinition.factory,\n        template: componentDefinition.template || null,\n        hostBindings: componentDefinition.hostBindings || null,\n        attributes: componentDefinition.attributes || null,\n        inputs: invertObject(componentDefinition.inputs),\n        outputs: invertObject(componentDefinition.outputs),\n        rendererType: resolveRendererType2(componentDefinition.rendererType) || null,\n        exportAs: componentDefinition.exportAs,\n        onInit: type.prototype.ngOnInit || null,\n        doCheck: type.prototype.ngDoCheck || null,\n        afterContentInit: type.prototype.ngAfterContentInit || null,\n        afterContentChecked: type.prototype.ngAfterContentChecked || null,\n        afterViewInit: type.prototype.ngAfterViewInit || null,\n        afterViewChecked: type.prototype.ngAfterViewChecked || null,\n        onDestroy: type.prototype.ngOnDestroy || null,\n        onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n        directiveDefs: directiveTypes ?\n            function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                .map(extractDirectiveDef); } :\n            null,\n        pipeDefs: pipeTypes ?\n            function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n            null,\n        selectors: componentDefinition.selectors\n    };\n    var feature = componentDefinition.features;\n    feature && feature.forEach(function (fn) { return fn(def); });\n    return def;\n}\nfunction extractDirectiveDef(type) {\n    var def = type.ngComponentDef || type.ngDirectiveDef;\n    if (ngDevMode && !def) {\n        throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n    }\n    return def;\n}\nfunction extractPipeDef(type) {\n    var def = type.ngPipeDef;\n    if (ngDevMode && !def) {\n        throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n    }\n    return def;\n}\nvar PRIVATE_PREFIX = '__ngOnChanges_';\n/**\n * Creates an NgOnChangesFeature function for a component's features list.\n *\n * It accepts an optional map of minified input property names to original property names,\n * if any input properties have a public alias.\n *\n * The NgOnChangesFeature function that is returned decorates a component with support for\n * the ngOnChanges lifecycle hook, so it should be included in any component that implements\n * that hook.\n *\n * Example usage:\n *\n * ```\n * static ngComponentDef = defineComponent({\n *   ...\n *   inputs: {name: 'publicName'},\n *   features: [NgOnChangesFeature({name: 'name'})]\n * });\n * ```\n *\n * @param inputPropertyNames Map of input property names, if they are aliased\n * @returns DirectiveDefFeature\n */\nfunction NgOnChangesFeature(inputPropertyNames) {\n    return function (definition) {\n        var inputs = definition.inputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (pubKey) {\n            var minKey = inputs[pubKey];\n            var propertyName = inputPropertyNames && inputPropertyNames[minKey] || pubKey;\n            var privateMinKey = PRIVATE_PREFIX + minKey;\n            var originalProperty = Object.getOwnPropertyDescriptor(proto, minKey);\n            var getter = originalProperty && originalProperty.get;\n            var setter = originalProperty && originalProperty.set;\n            // create a getter and setter for property\n            Object.defineProperty(proto, minKey, {\n                get: getter ||\n                    (setter ? undefined : function () { return this[privateMinKey]; }),\n                set: function (value) {\n                    var simpleChanges = this[PRIVATE_PREFIX];\n                    if (!simpleChanges) {\n                        // Place where we will store SimpleChanges if there is a change\n                        Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges = {}, writable: true });\n                    }\n                    var isFirstChange = !this.hasOwnProperty(privateMinKey);\n                    var currentChange = simpleChanges[propertyName];\n                    if (currentChange) {\n                        currentChange.currentValue = value;\n                    }\n                    else {\n                        simpleChanges[propertyName] =\n                            new SimpleChange(this[privateMinKey], value, isFirstChange);\n                    }\n                    if (isFirstChange) {\n                        // Create a place where the actual value will be stored and make it non-enumerable\n                        Object.defineProperty(this, privateMinKey, { value: value, writable: true });\n                    }\n                    else {\n                        this[privateMinKey] = value;\n                    }\n                    setter && setter.call(this, value);\n                }\n            });\n        };\n        for (var pubKey in inputs) {\n            _loop_1(pubKey);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    };\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            delegateHook && delegateHook.apply(this);\n        };\n    }\n}\nfunction PublicFeature(definition) {\n    definition.diPublic = diPublic;\n}\nvar EMPTY$1 = {};\n/** Swaps the keys and values of an object. */\nfunction invertObject(obj) {\n    if (obj == null)\n        return EMPTY$1;\n    var newObj = {};\n    for (var minifiedKey in obj) {\n        newObj[obj[minifiedKey]] = minifiedKey;\n    }\n    return newObj;\n}\n/**\n * Create a directive definition object.\n *\n * # Example\n * ```\n * class MyDirective {\n *   // Generated by Angular Template Compiler\n *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n *   static ngDirectiveDef = defineDirective({\n *     ...\n *   });\n * }\n * ```\n */\nvar defineDirective = defineComponent;\n/**\n * Create a pipe definition object.\n *\n * # Example\n * ```\n * class MyPipe implements PipeTransform {\n *   // Generated by Angular Template Compiler\n *   static ngPipeDef = definePipe({\n *     ...\n *   });\n * }\n * ```\n * @param pipeDef Pipe definition generated by the compiler\n */\nfunction definePipe(pipeDef) {\n    return {\n        name: pipeDef.name,\n        factory: pipeDef.factory,\n        pure: pipeDef.pure !== false,\n        onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n    };\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * If the value hasn't been saved, calls the pure function to store and return the\n * value. If it has been saved, returns the saved value.\n *\n * @param pureFn Function that returns a value\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param thisArg Optional calling context of pureFn\n * @returns value\n */\nfunction pureFunction0(slotOffset, pureFn, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 1);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var value = getCreationMode() ?\n        checkAndUpdateBinding(thisArg ? pureFn.call(thisArg) : pureFn()) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of the provided exp has changed, calls the pure function to return\n * an updated value. Or if the value has not changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn Function that returns an updated value\n * @param exp Updated expression value\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction1(slotOffset, pureFn, exp, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 2);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var value = bindingUpdated(exp) ?\n        checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 3);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var value = bindingUpdated2(exp1, exp2) ?\n        checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 4);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var different = bindingUpdated2(exp1, exp2);\n    var value = bindingUpdated(exp3) || different ?\n        checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 5);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var value = bindingUpdated4(exp1, exp2, exp3, exp4) ?\n        checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 6);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n    var value = bindingUpdated(exp5) || different ?\n        checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n            pureFn(exp1, exp2, exp3, exp4, exp5)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param exp6\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 7);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n    var value = bindingUpdated2(exp5, exp6) || different ?\n        checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n            pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param exp6\n * @param exp7\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 8);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n    different = bindingUpdated2(exp5, exp6) || different;\n    var value = bindingUpdated(exp7) || different ?\n        checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n            pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param exp6\n * @param exp7\n * @param exp8\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 9);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n    var value = bindingUpdated4(exp5, exp6, exp7, exp8) || different ?\n        checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n            pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * pureFunction instruction that can support any number of bindings.\n *\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn A pure function that takes binding values and builds an object or array\n * containing those values.\n * @param exps An array of binding values\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, exps.length + 1);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var different = false;\n    for (var i = 0; i < exps.length; i++) {\n        bindingUpdated(exps[i]) && (different = true);\n    }\n    var value = different ? checkAndUpdateBinding(pureFn.apply(thisArg, exps)) : consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a pipe.\n *\n * @param index Pipe index where the pipe will be stored.\n * @param pipeName The name of the pipe\n * @returns T the instance of the pipe.\n */\nfunction pipe(index, pipeName) {\n    var tView = getTView();\n    var pipeDef;\n    if (tView.firstTemplatePass) {\n        pipeDef = getPipeDef(pipeName, tView.pipeRegistry);\n        tView.data[index] = pipeDef;\n        if (pipeDef.onDestroy) {\n            (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(index, pipeDef.onDestroy);\n        }\n    }\n    else {\n        pipeDef = tView.data[index];\n    }\n    var pipeInstance = pipeDef.factory();\n    store(index, pipeInstance);\n    return pipeInstance;\n}\n/**\n * Searches the pipe registry for a pipe with the given name. If one is found,\n * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n *\n * @param name Name of pipe to resolve\n * @param registry Full list of available pipes\n * @returns Matching PipeDef\n */\nfunction getPipeDef(name, registry) {\n    if (registry) {\n        for (var i = 0; i < registry.length; i++) {\n            var pipeDef = registry[i];\n            if (name === pipeDef.name) {\n                return pipeDef;\n            }\n        }\n    }\n    throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n}\n/**\n * Invokes a pipe with 1 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param v1 1st argument to {@link PipeTransform#transform}.\n */\nfunction pipeBind1(index, slotOffset, v1) {\n    var pipeInstance = load(index);\n    return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n        pipeInstance.transform(v1);\n}\n/**\n * Invokes a pipe with 2 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param v1 1st argument to {@link PipeTransform#transform}.\n * @param v2 2nd argument to {@link PipeTransform#transform}.\n */\nfunction pipeBind2(index, slotOffset, v1, v2) {\n    var pipeInstance = load(index);\n    return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n        pipeInstance.transform(v1, v2);\n}\n/**\n * Invokes a pipe with 3 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param v1 1st argument to {@link PipeTransform#transform}.\n * @param v2 2nd argument to {@link PipeTransform#transform}.\n * @param v3 4rd argument to {@link PipeTransform#transform}.\n */\nfunction pipeBind3(index, slotOffset, v1, v2, v3) {\n    var pipeInstance = load(index);\n    return isPure(index) ?\n        pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n        pipeInstance.transform(v1, v2, v3);\n}\n/**\n * Invokes a pipe with 4 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param v1 1st argument to {@link PipeTransform#transform}.\n * @param v2 2nd argument to {@link PipeTransform#transform}.\n * @param v3 3rd argument to {@link PipeTransform#transform}.\n * @param v4 4th argument to {@link PipeTransform#transform}.\n */\nfunction pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n    var pipeInstance = load(index);\n    return isPure(index) ?\n        pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n        pipeInstance.transform(v1, v2, v3, v4);\n}\n/**\n * Invokes a pipe with variable number of arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n */\nfunction pipeBindV(index, slotOffset, values) {\n    var pipeInstance = load(index);\n    return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n        pipeInstance.transform.apply(pipeInstance, values);\n}\nfunction isPure(index) {\n    return getTView().data[index].pure;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Use by directives and components to emit custom Events.\n *\n * ### Examples\n *\n * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n * title gets clicked:\n *\n * ```\n * @Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n *   @Output() open: EventEmitter<any> = new EventEmitter();\n *   @Output() close: EventEmitter<any> = new EventEmitter();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n *\n * The events payload can be accessed by the parameter `$event` on the components output event\n * handler:\n *\n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n *\n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n *\n * Once a reference implementation of the spec is available, switch to it.\n *\n */\nvar EventEmitter = /** @class */ (function (_super) {\n    __extends(EventEmitter, _super);\n    /**\n     * Creates an instance of {@link EventEmitter}, which depending on `isAsync`,\n     * delivers events synchronously or asynchronously.\n     *\n     * @param isAsync By default, events are delivered synchronously (default value: `false`).\n     * Set to `true` for asynchronous event delivery.\n     */\n    function EventEmitter(isAsync) {\n        if (isAsync === void 0) { isAsync = false; }\n        var _this = _super.call(this) || this;\n        _this.__isAsync = isAsync;\n        return _this;\n    }\n    EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n    EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n        var schedulerFn;\n        var errorFn = function (err) { return null; };\n        var completeFn = function () { return null; };\n        if (generatorOrNext && typeof generatorOrNext === 'object') {\n            schedulerFn = this.__isAsync ? function (value) {\n                setTimeout(function () { return generatorOrNext.next(value); });\n            } : function (value) { generatorOrNext.next(value); };\n            if (generatorOrNext.error) {\n                errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                    function (err) { generatorOrNext.error(err); };\n            }\n            if (generatorOrNext.complete) {\n                completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                    function () { generatorOrNext.complete(); };\n            }\n        }\n        else {\n            schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                function (value) { generatorOrNext(value); };\n            if (error) {\n                errorFn =\n                    this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n            }\n            if (complete) {\n                completeFn =\n                    this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n            }\n        }\n        var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n        if (generatorOrNext instanceof rxjs.Subscription) {\n            generatorOrNext.add(sink);\n        }\n        return sink;\n    };\n    return EventEmitter;\n}(rxjs.Subject));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar LQueries_ = /** @class */ (function () {\n    function LQueries_(deep) {\n        this.shallow = null;\n        this.deep = null;\n        this.deep = deep == null ? null : deep;\n    }\n    LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n        // TODO(misko): This is not right. In case of inherited state, a calling track will incorrectly\n        // mutate parent.\n        if (descend) {\n            this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n        }\n        else {\n            this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n        }\n    };\n    LQueries_.prototype.child = function () {\n        if (this.deep === null) {\n            // if we don't have any deep queries then no need to track anything more.\n            return null;\n        }\n        if (this.shallow === null) {\n            // DeepQuery: We can reuse the current state if the child state would be same as current\n            // state.\n            return this;\n        }\n        else {\n            // We need to create new state\n            return new LQueries_(this.deep);\n        }\n    };\n    LQueries_.prototype.container = function () {\n        var result = null;\n        var query = this.deep;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: null,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            clonedQuery.next = result;\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result ? new LQueries_(result) : null;\n    };\n    LQueries_.prototype.createView = function () {\n        var result = null;\n        var query = this.deep;\n        while (query) {\n            var clonedQuery = {\n                next: null,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            clonedQuery.next = result;\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result ? new LQueries_(result) : null;\n    };\n    LQueries_.prototype.insertView = function (index) {\n        var query = this.deep;\n        while (query) {\n            ngDevMode &&\n                assertNotNull(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    };\n    LQueries_.prototype.addNode = function (node) {\n        add(this.shallow, node);\n        add(this.deep, node);\n    };\n    LQueries_.prototype.removeView = function (index) {\n        var query = this.deep;\n        while (query) {\n            ngDevMode &&\n                assertNotNull(query.containerValues, 'View queries need to have a pointer to container values.');\n            var removed = query.containerValues.splice(index, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    };\n    return LQueries_;\n}());\n/**\n * Iterates over local names for a given node and returns directive index\n * (or -1 if a local name points to an element).\n *\n * @param tNode static data of a node to check\n * @param selector selector to match\n * @returns directive index, -1 or null if a selector didn't match any of the local names\n */\nfunction getIdxOfMatchingSelector(tNode, selector) {\n    var localNames = tNode.localNames;\n    if (localNames) {\n        for (var i = 0; i < localNames.length; i += 2) {\n            if (localNames[i] === selector) {\n                return localNames[i + 1];\n            }\n        }\n    }\n    return null;\n}\n/**\n * Iterates over all the directives for a node and returns index of a directive for a given type.\n *\n * @param node Node on which directives are present.\n * @param type Type of a directive to look for.\n * @returns Index of a found directive or null when none found.\n */\nfunction getIdxOfMatchingDirective(node, type) {\n    var defs = node.view.tView.directives;\n    var flags = node.tNode.flags;\n    var count = flags & 4095;\n    var start = flags >> 13;\n    var end = start + count;\n    for (var i = start; i < end; i++) {\n        var def = defs[i];\n        if (def.type === type && def.diPublic) {\n            return i;\n        }\n    }\n    return null;\n}\nfunction readFromNodeInjector(nodeInjector, node, read, directiveIdx) {\n    if (read instanceof ReadFromInjectorFn) {\n        return read.read(nodeInjector, node, directiveIdx);\n    }\n    else {\n        var matchingIdx = getIdxOfMatchingDirective(node, read);\n        if (matchingIdx !== null) {\n            return node.view.directives[matchingIdx];\n        }\n    }\n    return null;\n}\nfunction add(query, node) {\n    var nodeInjector = getOrCreateNodeInjectorForNode(node);\n    while (query) {\n        var predicate = query.predicate;\n        var type = predicate.type;\n        if (type) {\n            var directiveIdx = getIdxOfMatchingDirective(node, type);\n            if (directiveIdx !== null) {\n                // a node is matching a predicate - determine what to read\n                // if read token and / or strategy is not specified, use type as read token\n                var result = readFromNodeInjector(nodeInjector, node, predicate.read || type, directiveIdx);\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n        }\n        else {\n            var selector = predicate.selector;\n            for (var i = 0; i < selector.length; i++) {\n                var directiveIdx = getIdxOfMatchingSelector(node.tNode, selector[i]);\n                if (directiveIdx !== null) {\n                    // a node is matching a predicate - determine what to read\n                    // note that queries using name selector must specify read strategy\n                    ngDevMode && assertNotNull(predicate.read, 'the node should have a predicate');\n                    var result = readFromNodeInjector(nodeInjector, node, predicate.read, directiveIdx);\n                    if (result !== null) {\n                        addMatch(query, result);\n                    }\n                }\n            }\n        }\n        query = query.next;\n    }\n}\nfunction addMatch(query, matchingValue) {\n    query.values.push(matchingValue);\n    query.list.setDirty();\n}\nfunction createPredicate(predicate, read) {\n    var isArray = Array.isArray(predicate);\n    return {\n        type: isArray ? null : predicate,\n        selector: isArray ? predicate : null,\n        read: read\n    };\n}\nfunction createQuery(previous, queryList, predicate, read) {\n    return {\n        next: previous,\n        list: queryList,\n        predicate: createPredicate(predicate, read),\n        values: queryList._valuesTree,\n        containerValues: null\n    };\n}\nvar QueryList_ = /** @class */ (function () {\n    function QueryList_() {\n        this.dirty = true;\n        this.changes = new EventEmitter();\n        this._values = [];\n        /** @internal */\n        this._valuesTree = [];\n    }\n    Object.defineProperty(QueryList_.prototype, \"length\", {\n        get: function () { return this._values.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList_.prototype, \"first\", {\n        get: function () {\n            var values = this._values;\n            return values.length ? values[0] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList_.prototype, \"last\", {\n        get: function () {\n            var values = this._values;\n            return values.length ? values[values.length - 1] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     */\n    QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     */\n    QueryList_.prototype.filter = function (fn) {\n        return this._values.filter(fn);\n    };\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     */\n    QueryList_.prototype.find = function (fn) {\n        return this._values.find(fn);\n    };\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     */\n    QueryList_.prototype.reduce = function (fn, init) {\n        return this._values.reduce(fn, init);\n    };\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     */\n    QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     */\n    QueryList_.prototype.some = function (fn) {\n        return this._values.some(fn);\n    };\n    QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n    QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n    QueryList_.prototype.toString = function () { return this._values.toString(); };\n    QueryList_.prototype.reset = function (res) {\n        this._values = flatten(res);\n        this.dirty = false;\n    };\n    QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n    QueryList_.prototype.setDirty = function () { this.dirty = true; };\n    QueryList_.prototype.destroy = function () {\n        this.changes.complete();\n        this.changes.unsubscribe();\n    };\n    return QueryList_;\n}());\nvar QueryList = QueryList_;\n/**\n * Creates and returns a QueryList.\n *\n * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n * this is is a content query and the QueryList will be saved later through directiveCreate.\n * @param predicate The type for which the query will search\n * @param descend Whether or not to descend into children\n * @param read What to save in the query\n * @returns QueryList<T>\n */\nfunction query(memoryIndex, predicate, descend, read) {\n    ngDevMode && assertPreviousIsParent();\n    var queryList = new QueryList();\n    var queries = getCurrentQueries(LQueries_);\n    queries.track(queryList, predicate, descend, read);\n    if (memoryIndex != null) {\n        store(memoryIndex, queryList);\n    }\n    return queryList;\n}\n/**\n * Refreshes a query by combining matches from all active views and removing matches from deleted\n * views.\n * Returns true if a query got dirty during change detection, false otherwise.\n */\nfunction queryRefresh(queryList) {\n    var queryListImpl = queryList;\n    if (queryList.dirty) {\n        queryList.reset(queryListImpl._valuesTree);\n        queryList.notifyOnChanges();\n        return true;\n    }\n    return false;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n *\n * This should be kept up to date with the public exports of @angular/core.\n */\nvar angularCoreEnv = {\n    'ÉµdefineComponent': defineComponent,\n    'ÉµdefineDirective': defineDirective,\n    'defineInjectable': defineInjectable,\n    'ÉµdefineNgModule': defineNgModule,\n    'ÉµdirectiveInject': directiveInject,\n    'inject': inject,\n    'ÉµinjectAttribute': injectAttribute,\n    'ÉµinjectChangeDetectorRef': injectChangeDetectorRef,\n    'ÉµinjectElementRef': injectElementRef,\n    'ÉµinjectTemplateRef': injectTemplateRef,\n    'ÉµinjectViewContainerRef': injectViewContainerRef,\n    'ÉµNgOnChangesFeature': NgOnChangesFeature,\n    'Éµa': elementAttribute,\n    'Éµb': bind,\n    'ÉµC': container,\n    'ÉµcR': containerRefreshStart,\n    'Éµcr': containerRefreshEnd,\n    'Éµd': loadDirective,\n    'ÉµE': elementStart,\n    'Éµe': elementEnd,\n    'Éµf0': pureFunction0,\n    'Éµf1': pureFunction1,\n    'Éµf2': pureFunction2,\n    'Éµf3': pureFunction3,\n    'Éµf4': pureFunction4,\n    'Éµf5': pureFunction5,\n    'Éµf6': pureFunction6,\n    'Éµf7': pureFunction7,\n    'Éµf8': pureFunction8,\n    'ÉµfV': pureFunctionV,\n    'Éµi1': interpolation1,\n    'Éµi2': interpolation2,\n    'Éµi3': interpolation3,\n    'Éµi4': interpolation4,\n    'Éµi5': interpolation5,\n    'Éµi6': interpolation6,\n    'Éµi7': interpolation7,\n    'Éµi8': interpolation8,\n    'Éµk': elementClass,\n    'Éµkn': elementClassNamed,\n    'ÉµL': listener,\n    'Éµld': load,\n    'Éµp': elementProperty,\n    'Éµpb1': pipeBind1,\n    'Éµpb2': pipeBind2,\n    'Éµpb3': pipeBind3,\n    'Éµpb4': pipeBind4,\n    'ÉµpbV': pipeBindV,\n    'ÉµQ': query,\n    'ÉµqR': queryRefresh,\n    'Éµs': elementStyle,\n    'Éµsn': elementStyleNamed,\n    'Éµst': store,\n    'ÉµT': text,\n    'Éµt': textBinding,\n    'ÉµV': embeddedViewStart,\n    'Éµv': embeddedViewEnd,\n};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A wrapper around a native element inside of a View.\n *\n * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n * element.\n *\n * @security Permitting direct access to the DOM can make your application more vulnerable to\n * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n * [Security Guide](http://g.co/ng/security).\n *\n *\n */\n// Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n// i.e. users have to ask for what they need. With that, we can build better analysis tools\n// and could do better codegen in the future.\nvar ElementRef$1 = /** @class */ (function () {\n    function ElementRef(nativeElement) {\n        this.nativeElement = nativeElement;\n    }\n    return ElementRef;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an Embedded Template that can be used to instantiate Embedded Views.\n *\n * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n * the `TemplateRef` from a Component or a Directive via {@link Query}.\n *\n * To instantiate Embedded Views based on a Template, use {@link ViewContainerRef#\n * createEmbeddedView}, which will create the View and attach it to the View Container.\n *\n */\nvar TemplateRef$1 = /** @class */ (function () {\n    function TemplateRef() {\n    }\n    return TemplateRef;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents a container where one or more Views can be attached.\n *\n * The container can contain two kinds of Views. Host Views, created by instantiating a\n * {@link Component} via {@link #createComponent}, and Embedded Views, created by instantiating an\n * {@link TemplateRef Embedded Template} via {@link #createEmbeddedView}.\n *\n * The location of the View Container within the containing View is specified by the Anchor\n * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n * have a single View Container.\n *\n * Root elements of Views attached to this container become siblings of the Anchor Element in\n * the Rendered View.\n *\n * To access a `ViewContainerRef` of an Element, you can either place a {@link Directive} injected\n * with `ViewContainerRef` on the Element, or you obtain it via a {@link ViewChild} query.\n *\n */\nvar ViewContainerRef$1 = /** @class */ (function () {\n    function ViewContainerRef() {\n    }\n    return ViewContainerRef;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _reflect = null;\nfunction getReflect() {\n    return (_reflect = _reflect || new ReflectionCapabilities());\n}\nfunction reflectDependencies(type) {\n    return convertDependencies(getReflect().parameters(type));\n}\nfunction convertDependencies(deps) {\n    return deps.map(function (dep) { return reflectDependency(dep); });\n}\nfunction reflectDependency(dep) {\n    var meta = {\n        token: new compiler.LiteralExpr(null),\n        host: false,\n        optional: false,\n        resolved: compiler.R3ResolvedDependencyType.Token,\n        self: false,\n        skipSelf: false,\n    };\n    function setTokenAndResolvedType(token) {\n        if (token === ElementRef$1) {\n            meta.resolved = compiler.R3ResolvedDependencyType.ElementRef;\n        }\n        else if (token === Injector) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Injector;\n        }\n        else if (token === TemplateRef$1) {\n            meta.resolved = compiler.R3ResolvedDependencyType.TemplateRef;\n        }\n        else if (token === ViewContainerRef$1) {\n            meta.resolved = compiler.R3ResolvedDependencyType.ViewContainerRef;\n        }\n        else {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n        }\n        meta.token = new compiler.WrappedNodeExpr(token);\n    }\n    if (Array.isArray(dep)) {\n        if (dep.length === 0) {\n            throw new Error('Dependency array must have arguments.');\n        }\n        for (var j = 0; j < dep.length; j++) {\n            var param = dep[j];\n            if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                meta.optional = true;\n            }\n            else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                meta.skipSelf = true;\n            }\n            else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                meta.self = true;\n            }\n            else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                meta.host = true;\n            }\n            else if (param instanceof Inject) {\n                meta.token = new compiler.WrappedNodeExpr(param.token);\n            }\n            else if (param instanceof Attribute) {\n                if (param.attributeName === undefined) {\n                    throw new Error(\"Attribute name must be defined.\");\n                }\n                meta.token = new compiler.LiteralExpr(param.attributeName);\n                meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n            }\n            else {\n                setTokenAndResolvedType(param);\n            }\n        }\n    }\n    else {\n        setTokenAndResolvedType(dep);\n    }\n    return meta;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _pendingPromises = [];\n/**\n * Compile an Angular component according to its decorator metadata, and patch the resulting\n * ngComponentDef onto the component type.\n *\n * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n * will return a `Promise` which will resolve when compilation completes and the component becomes\n * usable.\n */\nfunction compileComponent(type, metadata) {\n    // TODO(alxhub): implement ResourceLoader support for template compilation.\n    if (!metadata.template) {\n        throw new Error('templateUrl not yet supported');\n    }\n    var templateStr = metadata.template;\n    var def = null;\n    Object.defineProperty(type, 'ngComponentDef', {\n        get: function () {\n            if (def === null) {\n                // The ConstantPool is a requirement of the JIT'er.\n                var constantPool = new compiler.ConstantPool();\n                // Parse the template and check for errors.\n                var template = compiler.parseTemplate(templateStr, \"ng://\" + type.name + \"/template.html\");\n                if (template.errors !== undefined) {\n                    var errors = template.errors.map(function (err) { return err.toString(); }).join(', ');\n                    throw new Error(\"Errors during JIT compilation of template for \" + type.name + \": \" + errors);\n                }\n                // Compile the component metadata, including template, into an expression.\n                // TODO(alxhub): implement inputs, outputs, queries, etc.\n                var res = compiler.compileComponentFromMetadata(__assign({}, directiveMetadata(type, metadata), { template: template, directives: new Map(), pipes: new Map(), viewQueries: [] }), constantPool, compiler.makeBindingParser());\n                def = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngComponentDef.js\", constantPool);\n            }\n            return def;\n        },\n    });\n    return null;\n}\n/**\n * Compile an Angular directive according to its decorator metadata, and patch the resulting\n * ngDirectiveDef onto the component type.\n *\n * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n * will resolve when compilation completes and the directive becomes usable.\n */\nfunction compileDirective(type, directive) {\n    var def = null;\n    Object.defineProperty(type, 'ngDirectiveDef', {\n        get: function () {\n            if (def === null) {\n                var constantPool = new compiler.ConstantPool();\n                var sourceMapUrl = \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\";\n                var res = compiler.compileDirectiveFromMetadata(directiveMetadata(type, directive), constantPool, compiler.makeBindingParser());\n                def = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, constantPool);\n            }\n            return def;\n        },\n    });\n    return null;\n}\n/**\n * A wrapper around `compileComponent` which is intended to be used for the `@Component` decorator.\n *\n * This wrapper keeps track of the `Promise` returned by `compileComponent` and will cause\n * `awaitCurrentlyCompilingComponents` to wait on the compilation to be finished.\n */\nfunction compileComponentDecorator(type, metadata) {\n    var res = compileComponent(type, metadata);\n    if (res !== null) {\n        _pendingPromises.push(res);\n    }\n}\n/**\n * Returns a promise which will await the compilation of any `@Component`s which have been defined\n * since the last time `awaitCurrentlyCompilingComponents` was called.\n */\n\n/**\n * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n * `Component`).\n */\nfunction directiveMetadata(type, metadata) {\n    // Reflect inputs and outputs.\n    var props = getReflect().propMetadata(type);\n    var inputs = {};\n    var outputs = {};\n    var _loop_1 = function (field) {\n        props[field].forEach(function (ann) {\n            if (isInput(ann)) {\n                inputs[field] = ann.bindingPropertyName || field;\n            }\n            else if (isOutput(ann)) {\n                outputs[field] = ann.bindingPropertyName || field;\n            }\n        });\n    };\n    for (var field in props) {\n        _loop_1(field);\n    }\n    return {\n        name: type.name,\n        type: new compiler.WrappedNodeExpr(type),\n        selector: metadata.selector,\n        deps: reflectDependencies(type),\n        host: {\n            attributes: {},\n            listeners: {},\n            properties: {},\n        },\n        inputs: inputs,\n        outputs: outputs,\n        queries: [],\n        lifecycle: {\n            usesOnChanges: type.prototype.ngOnChanges !== undefined,\n        },\n        typeSourceSpan: null,\n    };\n}\nfunction isInput(value) {\n    return value.ngMetadataName === 'Input';\n}\nfunction isOutput(value) {\n    return value.ngMetadataName === 'Output';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n * `ngInjectableDef` onto the injectable type.\n */\nfunction compileInjectable$1(type, meta) {\n    // TODO(alxhub): handle JIT of bare @Injectable().\n    if (!meta) {\n        return;\n    }\n    var def = null;\n    Object.defineProperty(type, 'ngInjectableDef', {\n        get: function () {\n            if (def === null) {\n                // Check whether the injectable metadata includes a provider specification.\n                var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                    isUseValueProvider(meta) || isUseExistingProvider(meta);\n                var deps = undefined;\n                if (!hasAProvider || (isUseClassProvider(meta) && type === meta.useClass)) {\n                    deps = reflectDependencies(type);\n                }\n                else if (isUseClassProvider(meta)) {\n                    deps = meta.deps && convertDependencies(meta.deps);\n                }\n                else if (isUseFactoryProvider(meta)) {\n                    deps = meta.deps && convertDependencies(meta.deps) || [];\n                }\n                // Decide which flavor of factory to generate, based on the provider specified.\n                // Only one of the use* fields should be set.\n                var useClass = undefined;\n                var useFactory = undefined;\n                var useValue = undefined;\n                var useExisting = undefined;\n                if (!hasAProvider) {\n                    // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                    // The deps will have been reflected above, causing the factory to create the class by\n                    // calling\n                    // its constructor with injected deps.\n                    useClass = new compiler.WrappedNodeExpr(type);\n                }\n                else if (isUseClassProvider(meta)) {\n                    // The user explicitly specified useClass, and may or may not have provided deps.\n                    useClass = new compiler.WrappedNodeExpr(meta.useClass);\n                }\n                else if (isUseValueProvider(meta)) {\n                    // The user explicitly specified useValue.\n                    useValue = new compiler.WrappedNodeExpr(meta.useValue);\n                }\n                else if (isUseFactoryProvider(meta)) {\n                    // The user explicitly specified useFactory.\n                    useFactory = new compiler.WrappedNodeExpr(meta.useFactory);\n                }\n                else if (isUseExistingProvider(meta)) {\n                    // The user explicitly specified useExisting.\n                    useExisting = new compiler.WrappedNodeExpr(meta.useExisting);\n                }\n                else {\n                    // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                    throw new Error(\"Unreachable state.\");\n                }\n                var expression = compiler.compileInjectable({\n                    name: type.name,\n                    type: new compiler.WrappedNodeExpr(type),\n                    providedIn: computeProvidedIn(meta.providedIn),\n                    useClass: useClass,\n                    useFactory: useFactory,\n                    useValue: useValue,\n                    useExisting: useExisting,\n                    deps: deps,\n                }).expression;\n                def = compiler.jitExpression(expression, angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\");\n            }\n            return def;\n        },\n    });\n}\nfunction computeProvidedIn(providedIn) {\n    if (providedIn == null || typeof providedIn === 'string') {\n        return new compiler.LiteralExpr(providedIn);\n    }\n    else {\n        return new compiler.WrappedNodeExpr(providedIn);\n    }\n}\nfunction isUseClassProvider(meta) {\n    return meta.useClass !== undefined;\n}\nvar GET_PROPERTY_NAME$2 = {};\nvar USE_VALUE$2 = getClosureSafeProperty$1({ provide: String, useValue: GET_PROPERTY_NAME$2 }, GET_PROPERTY_NAME$2);\nfunction isUseValueProvider(meta) {\n    return USE_VALUE$2 in meta;\n}\nfunction isUseFactoryProvider(meta) {\n    return meta.useFactory !== undefined;\n}\nfunction isUseExistingProvider(meta) {\n    return meta.useExisting !== undefined;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EMPTY_ARRAY$3 = [];\nfunction compileNgModule$1(type, ngModule) {\n    var meta = {\n        type: wrap(type),\n        bootstrap: flatten(ngModule.bootstrap || EMPTY_ARRAY$3).map(wrap),\n        declarations: flatten(ngModule.declarations || EMPTY_ARRAY$3).map(wrap),\n        imports: flatten(ngModule.imports || EMPTY_ARRAY$3).map(expandModuleWithProviders).map(wrap),\n        exports: flatten(ngModule.exports || EMPTY_ARRAY$3).map(expandModuleWithProviders).map(wrap),\n        emitInline: true,\n    };\n    // Compute transitiveCompileScope\n    var transitiveCompileScope = {\n        directives: [],\n        pipes: [],\n    };\n    function addExportsFrom(module) {\n        module.ngModuleDef.exports.forEach(function (exp) {\n            if (isNgModule(exp)) {\n                addExportsFrom(exp);\n            }\n            else if (exp.ngPipeDef) {\n                transitiveCompileScope.pipes.push(exp);\n            }\n            else {\n                transitiveCompileScope.directives.push(exp);\n            }\n        });\n    }\n    flatten([(ngModule.imports || EMPTY_ARRAY$3), (ngModule.exports || EMPTY_ARRAY$3)])\n        .filter(function (importExport) { return isNgModule(importExport); })\n        .forEach(function (mod) { return addExportsFrom(mod); });\n    flatten(ngModule.declarations || EMPTY_ARRAY$3).forEach(function (decl) {\n        if (decl.ngPipeDef) {\n            transitiveCompileScope.pipes.push(decl);\n        }\n        else if (decl.ngComponentDef) {\n            transitiveCompileScope.directives.push(decl);\n            patchComponentWithScope(decl, type);\n        }\n        else {\n            transitiveCompileScope.directives.push(decl);\n            decl.ngSelectorScope = type;\n        }\n    });\n    var def = null;\n    Object.defineProperty(type, 'ngModuleDef', {\n        get: function () {\n            if (def === null) {\n                var meta_1 = {\n                    type: wrap(type),\n                    bootstrap: flatten(ngModule.bootstrap || EMPTY_ARRAY$3).map(wrap),\n                    declarations: flatten(ngModule.declarations || EMPTY_ARRAY$3).map(wrap),\n                    imports: flatten(ngModule.imports || EMPTY_ARRAY$3).map(expandModuleWithProviders).map(wrap),\n                    exports: flatten(ngModule.exports || EMPTY_ARRAY$3).map(expandModuleWithProviders).map(wrap),\n                    emitInline: true,\n                };\n                var res = compiler.compileNgModule(meta_1);\n                def = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngModuleDef.js\");\n                def.transitiveCompileScope = transitiveCompileScope;\n            }\n            return def;\n        },\n    });\n}\nfunction patchComponentWithScope(component, module) {\n    component.ngComponentDef.directiveDefs = function () {\n        return module.ngModuleDef.transitiveCompileScope.directives\n            .map(function (dir) { return dir.ngDirectiveDef || dir.ngComponentDef; })\n            .filter(function (def) { return !!def; });\n    };\n    component.ngComponentDef.pipeDefs = function () {\n        return module.ngModuleDef.transitiveCompileScope.pipes.map(function (pipe) { return pipe.ngPipeDef; });\n    };\n}\nfunction expandModuleWithProviders(value) {\n    if (isModuleWithProviders(value)) {\n        return value.ngModule;\n    }\n    return value;\n}\nfunction wrap(value) {\n    return new compiler.WrappedNodeExpr(value);\n}\nfunction isModuleWithProviders(value) {\n    return value.ngModule !== undefined;\n}\nfunction isNgModule(value) {\n    return value.ngModuleDef !== undefined;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ivyEnabled = true;\nvar R3_COMPILE_COMPONENT = compileComponentDecorator;\nvar R3_COMPILE_DIRECTIVE = compileDirective;\nvar R3_COMPILE_INJECTABLE = compileInjectable$1;\nvar R3_COMPILE_NGMODULE = compileNgModule$1;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive decorator and metadata.\n *\n *\n * @Annotation\n */\nvar Directive = makeDecorator('Directive', function (dir) {\n    if (dir === void 0) { dir = {}; }\n    return dir;\n}, undefined, undefined, function (type, meta) { return (R3_COMPILE_DIRECTIVE || (function () { }))(type, meta); });\n/**\n * Component decorator and metadata.\n *\n *\n * @Annotation\n */\nvar Component = makeDecorator('Component', function (c) {\n    if (c === void 0) { c = {}; }\n    return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n}, Directive, undefined, function (type, meta) { return (R3_COMPILE_COMPONENT || (function () { }))(type, meta); });\n/**\n * Pipe decorator and metadata.\n *\n * Use the `@Pipe` annotation to declare that a given class is a pipe. A pipe\n * class must also implement {@link PipeTransform} interface.\n *\n * To use the pipe include a reference to the pipe class in\n * {@link NgModule#declarations}.\n *\n *\n * @Annotation\n */\nvar Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); });\n/**\n * Input decorator and metadata.\n *\n *\n * @Annotation\n */\nvar Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * Output decorator and metadata.\n *\n *\n * @Annotation\n */\nvar Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * HostBinding decorator and metadata.\n *\n *\n * @Annotation\n */\nvar HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n/**\n * HostListener decorator and metadata.\n *\n *\n * @Annotation\n */\nvar HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description Represents the version of Angular\n *\n *\n */\nvar Version = /** @class */ (function () {\n    function Version(full) {\n        this.full = full;\n        this.major = full.split('.')[0];\n        this.minor = full.split('.')[1];\n        this.patch = full.split('.').slice(2).join('.');\n    }\n    return Version;\n}());\nvar VERSION = new Version('6.0.0-rc.5+311.sha-dc03f78.with-local-changes');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Determine if the argument is shaped like a Promise\n */\nfunction isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\n/**\n * Determine if the argument is an Observable\n */\nfunction isObservable(obj) {\n    // TODO: use Symbol.observable when https://github.com/ReactiveX/rxjs/issues/2415 will be resolved\n    return !!obj && typeof obj.subscribe === 'function';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A function that will be executed when an application is initialized.\n * @experimental\n */\nvar APP_INITIALIZER = new InjectionToken('Application Initializer');\n/**\n * A class that reflects the state of running {@link APP_INITIALIZER}s.\n *\n * @experimental\n */\nvar ApplicationInitStatus = /** @class */ (function () {\n    function ApplicationInitStatus(appInits) {\n        var _this = this;\n        this.appInits = appInits;\n        this.initialized = false;\n        this.done = false;\n        this.donePromise = new Promise(function (res, rej) {\n            _this.resolve = res;\n            _this.reject = rej;\n        });\n    }\n    /** @internal */\n    ApplicationInitStatus.prototype.runInitializers = function () {\n        var _this = this;\n        if (this.initialized) {\n            return;\n        }\n        var asyncInitPromises = [];\n        var complete = function () {\n            _this.done = true;\n            _this.resolve();\n        };\n        if (this.appInits) {\n            for (var i = 0; i < this.appInits.length; i++) {\n                var initResult = this.appInits[i]();\n                if (isPromise(initResult)) {\n                    asyncInitPromises.push(initResult);\n                }\n            }\n        }\n        Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n        if (asyncInitPromises.length === 0) {\n            complete();\n        }\n        this.initialized = true;\n    };\n    ApplicationInitStatus = __decorate([\n        Injectable(),\n        __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n        __metadata(\"design:paramtypes\", [Array])\n    ], ApplicationInitStatus);\n    return ApplicationInitStatus;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A DI Token representing a unique string id assigned to the application by Angular and used\n * primarily for prefixing application attributes and CSS styles when\n * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n *\n * If you need to avoid randomly generated value to be used as an application id, you can provide\n * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n * using this token.\n * @experimental\n */\nvar APP_ID = new InjectionToken('AppId');\nfunction _appIdRandomProviderFactory() {\n    return \"\" + _randomChar() + _randomChar() + _randomChar();\n}\n/**\n * Providers that will generate a random APP_ID_TOKEN.\n * @experimental\n */\nvar APP_ID_RANDOM_PROVIDER = {\n    provide: APP_ID,\n    useFactory: _appIdRandomProviderFactory,\n    deps: [],\n};\nfunction _randomChar() {\n    return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n}\n/**\n * A function that will be executed when a platform is initialized.\n * @experimental\n */\nvar PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n/**\n * A token that indicates an opaque platform id.\n * @experimental\n */\nvar PLATFORM_ID = new InjectionToken('Platform ID');\n/**\n * All callbacks provided via this token will be called for every component that is bootstrapped.\n * Signature of the callback:\n *\n * `(componentRef: ComponentRef) => void`.\n *\n * @experimental\n */\nvar APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n/**\n * A token which indicates the root directory of the application\n * @experimental\n */\nvar PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Console = /** @class */ (function () {\n    function Console() {\n    }\n    Console.prototype.log = function (message) {\n        // tslint:disable-next-line:no-console\n        console.log(message);\n    };\n    // Note: for reporting errors use `DOM.logError()` as it is platform specific\n    Console.prototype.warn = function (message) {\n        // tslint:disable-next-line:no-console\n        console.warn(message);\n    };\n    Console = __decorate([\n        Injectable()\n    ], Console);\n    return Console;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Combination of NgModuleFactory and ComponentFactorys.\n *\n * @experimental\n */\nvar ModuleWithComponentFactories = /** @class */ (function () {\n    function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n        this.ngModuleFactory = ngModuleFactory;\n        this.componentFactories = componentFactories;\n    }\n    return ModuleWithComponentFactories;\n}());\nfunction _throwError() {\n    throw new Error(\"Runtime compiler is not loaded\");\n}\n/**\n * Low-level service for running the angular compiler during runtime\n * to create {@link ComponentFactory}s, which\n * can later be used to create and render a Component instance.\n *\n * Each `@NgModule` provides an own `Compiler` to its injector,\n * that will use the directives/pipes of the ng module for compilation\n * of components.\n *\n */\nvar Compiler = /** @class */ (function () {\n    function Compiler() {\n    }\n    /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     */\n    Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n    /**\n     * Compiles the given NgModule and all of its components\n     */\n    Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n    /**\n     * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n     */\n    Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     */\n    Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Clears all caches.\n     */\n    Compiler.prototype.clearCache = function () { };\n    /**\n     * Clears the cache for the given component/ngModule.\n     */\n    Compiler.prototype.clearCacheFor = function (type) { };\n    Compiler = __decorate([\n        Injectable()\n    ], Compiler);\n    return Compiler;\n}());\n/**\n * Token to provide CompilerOptions in the platform injector.\n *\n * @experimental\n */\nvar COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n/**\n * A factory for creating a Compiler\n *\n * @experimental\n */\nvar CompilerFactory = /** @class */ (function () {\n    function CompilerFactory() {\n    }\n    return CompilerFactory;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an instance of a Component created via a {@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n * method.\n *\n */\nvar ComponentRef = /** @class */ (function () {\n    function ComponentRef() {\n    }\n    return ComponentRef;\n}());\nvar ComponentFactory = /** @class */ (function () {\n    function ComponentFactory() {\n    }\n    return ComponentFactory;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction noComponentFactoryError(component) {\n    var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n    error[ERROR_COMPONENT] = component;\n    return error;\n}\nvar ERROR_COMPONENT = 'ngComponent';\n\nvar _NullComponentFactoryResolver = /** @class */ (function () {\n    function _NullComponentFactoryResolver() {\n    }\n    _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n        throw noComponentFactoryError(component);\n    };\n    return _NullComponentFactoryResolver;\n}());\nvar ComponentFactoryResolver = /** @class */ (function () {\n    function ComponentFactoryResolver() {\n    }\n    ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n    return ComponentFactoryResolver;\n}());\nvar CodegenComponentFactoryResolver = /** @class */ (function () {\n    function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n        this._parent = _parent;\n        this._ngModule = _ngModule;\n        this._factories = new Map();\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            this._factories.set(factory.componentType, factory);\n        }\n    }\n    CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n        var factory = this._factories.get(component);\n        if (!factory && this._parent) {\n            factory = this._parent.resolveComponentFactory(component);\n        }\n        if (!factory) {\n            throw noComponentFactoryError(component);\n        }\n        return new ComponentFactoryBoundToModule(factory, this._ngModule);\n    };\n    return CodegenComponentFactoryResolver;\n}());\nvar ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n    __extends(ComponentFactoryBoundToModule, _super);\n    function ComponentFactoryBoundToModule(factory, ngModule) {\n        var _this = _super.call(this) || this;\n        _this.factory = factory;\n        _this.ngModule = ngModule;\n        _this.selector = factory.selector;\n        _this.componentType = factory.componentType;\n        _this.ngContentSelectors = factory.ngContentSelectors;\n        _this.inputs = factory.inputs;\n        _this.outputs = factory.outputs;\n        return _this;\n    }\n    ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n    };\n    return ComponentFactoryBoundToModule;\n}(ComponentFactory));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n *\n * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n * NgModule Instance.\n *\n *\n */\nvar NgModuleRef = /** @class */ (function () {\n    function NgModuleRef() {\n    }\n    return NgModuleRef;\n}());\n/**\n * @experimental\n */\nvar NgModuleFactory = /** @class */ (function () {\n    function NgModuleFactory() {\n    }\n    return NgModuleFactory;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar trace;\nvar events;\nfunction detectWTF() {\n    var wtf = _global /** TODO #9100 */['wtf'];\n    if (wtf) {\n        trace = wtf['trace'];\n        if (trace) {\n            events = trace['events'];\n            return true;\n        }\n    }\n    return false;\n}\nfunction createScope(signature, flags) {\n    if (flags === void 0) { flags = null; }\n    return events.createScope(signature, flags);\n}\nfunction leave(scope, returnValue) {\n    trace.leaveScope(scope, returnValue);\n    return returnValue;\n}\nfunction startTimeRange(rangeType, action) {\n    return trace.beginTimeRange(rangeType, action);\n}\nfunction endTimeRange(range) {\n    trace.endTimeRange(range);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * True if WTF is enabled.\n */\nvar wtfEnabled = detectWTF();\nfunction noopScope(arg0, arg1) {\n    return null;\n}\n/**\n * Create trace scope.\n *\n * Scopes must be strictly nested and are analogous to stack frames, but\n * do not have to follow the stack frames. Instead it is recommended that they follow logical\n * nesting. You may want to use\n * [Event\n * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n * as they are defined in WTF.\n *\n * Used to mark scope entry. The return value is used to leave the scope.\n *\n *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n *\n *     someMethod() {\n *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n *        // DO SOME WORK HERE\n *        return wtfLeave(s, 123); // Return value 123\n *     }\n *\n * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n * negatively impact the performance of your application. For this reason we recommend that\n * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n * exception, will produce incorrect trace, but presence of exception signifies logic error which\n * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n * an exception is expected during normal execution while profiling.\n *\n * @experimental\n */\nvar wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n/**\n * Used to mark end of Scope.\n *\n * - `scope` to end.\n * - `returnValue` (optional) to be passed to the WTF.\n *\n * Returns the `returnValue for easy chaining.\n * @experimental\n */\nvar wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n/**\n * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n * enabled.\n *\n *     someMethod() {\n *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n *        var future = new Future.delay(5).then((_) {\n *          wtfEndTimeRange(s);\n *        });\n *     }\n * @experimental\n */\nvar wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n/**\n * Ends a async time range operation.\n * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n * enabled.\n * @experimental\n */\nvar wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n *\n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {@link #run}.\n *\n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n *\n * ### Example\n *\n * ```\n * import {Component, NgZone} from '@angular/core';\n * import {NgIf} from '@angular/common';\n *\n * @Component({\n *   selector: 'ng-zone-demo',\n *   template: `\n *     <h2>Demo: NgZone</h2>\n *\n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n *\n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n *\n *   constructor(private _ngZone: NgZone) {}\n *\n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n *\n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *         // reenter the Angular zone and display done\n *         this._ngZone.run(() => { console.log('Outside Done!'); });\n *       });\n *     });\n *   }\n *\n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n *\n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n *\n * @experimental\n */\nvar NgZone = /** @class */ (function () {\n    function NgZone(_a) {\n        var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        /**\n         * Whether there are no outstanding microtasks or macrotasks.\n         */\n        this.isStable = true;\n        /**\n         * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n         */\n        this.onUnstable = new EventEmitter(false);\n        /**\n         * Notifies when there is no more microtasks enqueued in the current VM Turn.\n         * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n         * For this reason this event can fire multiple times per VM Turn.\n         */\n        this.onMicrotaskEmpty = new EventEmitter(false);\n        /**\n         * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n         * implies we are about to relinquish VM turn.\n         * This event gets called just once.\n         */\n        this.onStable = new EventEmitter(false);\n        /**\n         * Notifies that an error has been delivered.\n         */\n        this.onError = new EventEmitter(false);\n        if (typeof Zone == 'undefined') {\n            throw new Error(\"In this configuration Angular requires Zone.js\");\n        }\n        Zone.assertZonePatched();\n        var self = this;\n        self._nesting = 0;\n        self._outer = self._inner = Zone.current;\n        if (Zone['wtfZoneSpec']) {\n            self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n        }\n        if (Zone['TaskTrackingZoneSpec']) {\n            self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n        }\n        if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n            self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n        }\n        forkInnerZoneWithAngularBehavior(self);\n    }\n    NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n    NgZone.assertInAngularZone = function () {\n        if (!NgZone.isInAngularZone()) {\n            throw new Error('Expected to be in Angular Zone, but it is not!');\n        }\n    };\n    NgZone.assertNotInAngularZone = function () {\n        if (NgZone.isInAngularZone()) {\n            throw new Error('Expected to not be in Angular Zone, but it is!');\n        }\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n        return this._inner.run(fn, applyThis, applyArgs);\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n        var zone = this._inner;\n        var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n        try {\n            return zone.runTask(task, applyThis, applyArgs);\n        }\n        finally {\n            zone.cancelTask(task);\n        }\n    };\n    /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     */\n    NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n        return this._inner.runGuarded(fn, applyThis, applyArgs);\n    };\n    /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n     */\n    NgZone.prototype.runOutsideAngular = function (fn) {\n        return this._outer.run(fn);\n    };\n    return NgZone;\n}());\nfunction noop() { }\nvar EMPTY_PAYLOAD = {};\nfunction checkStable(zone) {\n    if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n        try {\n            zone._nesting++;\n            zone.onMicrotaskEmpty.emit(null);\n        }\n        finally {\n            zone._nesting--;\n            if (!zone.hasPendingMicrotasks) {\n                try {\n                    zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                }\n                finally {\n                    zone.isStable = true;\n                }\n            }\n        }\n    }\n}\nfunction forkInnerZoneWithAngularBehavior(zone) {\n    zone._inner = zone._inner.fork({\n        name: 'angular',\n        properties: { 'isAngularZone': true },\n        onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n            try {\n                onEnter(zone);\n                return delegate.invokeTask(target, task, applyThis, applyArgs);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n            try {\n                onEnter(zone);\n                return delegate.invoke(target, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onHasTask: function (delegate, current, target, hasTaskState) {\n            delegate.hasTask(target, hasTaskState);\n            if (current === target) {\n                // We are only interested in hasTask events which originate from our zone\n                // (A child hasTask event is not interesting to us)\n                if (hasTaskState.change == 'microTask') {\n                    zone.hasPendingMicrotasks = hasTaskState.microTask;\n                    checkStable(zone);\n                }\n                else if (hasTaskState.change == 'macroTask') {\n                    zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                }\n            }\n        },\n        onHandleError: function (delegate, current, target, error) {\n            delegate.handleError(target, error);\n            zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n            return false;\n        }\n    });\n}\nfunction onEnter(zone) {\n    zone._nesting++;\n    if (zone.isStable) {\n        zone.isStable = false;\n        zone.onUnstable.emit(null);\n    }\n}\nfunction onLeave(zone) {\n    zone._nesting--;\n    checkStable(zone);\n}\n/**\n * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n * to framework to perform rendering.\n */\nvar NoopNgZone = /** @class */ (function () {\n    function NoopNgZone() {\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        this.isStable = true;\n        this.onUnstable = new EventEmitter();\n        this.onMicrotaskEmpty = new EventEmitter();\n        this.onStable = new EventEmitter();\n        this.onError = new EventEmitter();\n    }\n    NoopNgZone.prototype.run = function (fn) { return fn(); };\n    NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n    NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n    NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n    return NoopNgZone;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The Testability service provides testing hooks that can be accessed from\n * the browser and by services such as Protractor. Each bootstrapped Angular\n * application on the page will have an instance of Testability.\n * @experimental\n */\nvar Testability = /** @class */ (function () {\n    function Testability(_ngZone) {\n        var _this = this;\n        this._ngZone = _ngZone;\n        this._pendingCount = 0;\n        this._isZoneStable = true;\n        /**\n         * Whether any work was done since the last 'whenStable' callback. This is\n         * useful to detect if this could have potentially destabilized another\n         * component while it is stabilizing.\n         * @internal\n         */\n        this._didWork = false;\n        this._callbacks = [];\n        this._watchAngularEvents();\n        _ngZone.run(function () { _this.taskTrackingZone = Zone.current.get('TaskTrackingZone'); });\n    }\n    Testability.prototype._watchAngularEvents = function () {\n        var _this = this;\n        this._ngZone.onUnstable.subscribe({\n            next: function () {\n                _this._didWork = true;\n                _this._isZoneStable = false;\n            }\n        });\n        this._ngZone.runOutsideAngular(function () {\n            _this._ngZone.onStable.subscribe({\n                next: function () {\n                    NgZone.assertNotInAngularZone();\n                    scheduleMicroTask(function () {\n                        _this._isZoneStable = true;\n                        _this._runCallbacksIfReady();\n                    });\n                }\n            });\n        });\n    };\n    /**\n     * Increases the number of pending request\n     * @deprecated pending requests are now tracked with zones.\n     */\n    Testability.prototype.increasePendingRequestCount = function () {\n        this._pendingCount += 1;\n        this._didWork = true;\n        return this._pendingCount;\n    };\n    /**\n     * Decreases the number of pending request\n     * @deprecated pending requests are now tracked with zones\n     */\n    Testability.prototype.decreasePendingRequestCount = function () {\n        this._pendingCount -= 1;\n        if (this._pendingCount < 0) {\n            throw new Error('pending async requests below zero');\n        }\n        this._runCallbacksIfReady();\n        return this._pendingCount;\n    };\n    /**\n     * Whether an associated application is stable\n     */\n    Testability.prototype.isStable = function () {\n        return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n    };\n    Testability.prototype._runCallbacksIfReady = function () {\n        var _this = this;\n        if (this.isStable()) {\n            // Schedules the call backs in a new frame so that it is always async.\n            scheduleMicroTask(function () {\n                while (_this._callbacks.length !== 0) {\n                    var cb = _this._callbacks.pop();\n                    clearTimeout(cb.timeoutId);\n                    cb.doneCb(_this._didWork);\n                }\n                _this._didWork = false;\n            });\n        }\n        else {\n            // Still not stable, send updates.\n            var pending_1 = this.getPendingTasks();\n            this._callbacks = this._callbacks.filter(function (cb) {\n                if (cb.updateCb && cb.updateCb(pending_1)) {\n                    clearTimeout(cb.timeoutId);\n                    return false;\n                }\n                return true;\n            });\n            this._didWork = true;\n        }\n    };\n    Testability.prototype.getPendingTasks = function () {\n        if (!this.taskTrackingZone) {\n            return [];\n        }\n        return this.taskTrackingZone.macroTasks.map(function (t) {\n            return {\n                source: t.source,\n                isPeriodic: t.data.isPeriodic,\n                delay: t.data.delay,\n                // From TaskTrackingZone:\n                // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                creationLocation: t.creationLocation,\n                // Added by Zones for XHRs\n                // https://github.com/angular/zone.js/blob/master/lib/browser/browser.ts#L133\n                xhr: t.data.target\n            };\n        });\n    };\n    Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n        var _this = this;\n        var timeoutId = -1;\n        if (timeout && timeout > 0) {\n            timeoutId = setTimeout(function () {\n                _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                cb(_this._didWork, _this.getPendingTasks());\n            }, timeout);\n        }\n        this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n    };\n    /**\n     * Wait for the application to be stable with a timeout. If the timeout is reached before that\n     * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n     *\n     * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n     *    whichever comes first.\n     * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n     *    specified, whenStable() will wait forever.\n     * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n     *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n     *    and no further updates will be issued.\n     */\n    Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n        if (updateCb && !this.taskTrackingZone) {\n            throw new Error('Task tracking zone is required when passing an update callback to ' +\n                'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n        }\n        // These arguments are 'Function' above to keep the public API simple.\n        this.addCallback(doneCb, timeout, updateCb);\n        this._runCallbacksIfReady();\n    };\n    /**\n     * Get the number of pending requests\n     * @deprecated pending requests are now tracked with zones\n     */\n    Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n    /**\n     * Find providers by name\n     * @param using The root element to search from\n     * @param provider The name of binding variable\n     * @param exactMatch Whether using exactMatch\n     */\n    Testability.prototype.findProviders = function (using, provider, exactMatch) {\n        // TODO(juliemr): implement.\n        return [];\n    };\n    Testability = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [NgZone])\n    ], Testability);\n    return Testability;\n}());\n/**\n * A global registry of {@link Testability} instances for specific elements.\n * @experimental\n */\nvar TestabilityRegistry = /** @class */ (function () {\n    function TestabilityRegistry() {\n        /** @internal */\n        this._applications = new Map();\n        _testabilityGetter.addToWindow(this);\n    }\n    /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param token token of application, root element\n     * @param testability Testability hook\n     */\n    TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n        this._applications.set(token, testability);\n    };\n    /**\n     * Unregisters an application.\n     * @param token token of application, root element\n     */\n    TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n    /**\n     * Unregisters all applications\n     */\n    TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n    /**\n     * Get a testability hook associated with the application\n     * @param elem root element\n     */\n    TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n    /**\n     * Get all registered testabilities\n     */\n    TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n    /**\n     * Get all registered applications(root elements)\n     */\n    TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n    /**\n     * Find testability of a node in the Tree\n     * @param elem node\n     * @param findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     */\n    TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n        if (findInAncestors === void 0) { findInAncestors = true; }\n        return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n    };\n    TestabilityRegistry = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [])\n    ], TestabilityRegistry);\n    return TestabilityRegistry;\n}());\nvar _NoopGetTestability = /** @class */ (function () {\n    function _NoopGetTestability() {\n    }\n    _NoopGetTestability.prototype.addToWindow = function (registry) { };\n    _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n        return null;\n    };\n    return _NoopGetTestability;\n}());\n/**\n * Set the {@link GetTestability} implementation used by the Angular testing framework.\n * @experimental\n */\nfunction setTestabilityGetter(getter) {\n    _testabilityGetter = getter;\n}\nvar _testabilityGetter = new _NoopGetTestability();\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _devMode = true;\nvar _runModeLocked = false;\nvar _platform;\nvar ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n/**\n * Disable Angular's development mode, which turns off assertions and other\n * checks within the framework.\n *\n * One important assertion this disables verifies that a change detection pass\n * does not result in additional changes to any bindings (also known as\n * unidirectional data flow).\n *\n *\n */\nfunction enableProdMode() {\n    if (_runModeLocked) {\n        throw new Error('Cannot enable prod mode after platform setup.');\n    }\n    _devMode = false;\n}\n/**\n * Returns whether Angular is in development mode. After called once,\n * the value is locked and won't change any more.\n *\n * By default, this is true, unless a user calls `enableProdMode` before calling this.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nfunction isDevMode() {\n    _runModeLocked = true;\n    return _devMode;\n}\n/**\n * A token for third-party components that can register themselves with NgProbe.\n *\n * @experimental\n */\nvar NgProbeToken = /** @class */ (function () {\n    function NgProbeToken(name, token) {\n        this.name = name;\n        this.token = token;\n    }\n    return NgProbeToken;\n}());\n/**\n * Creates a platform.\n * Platforms have to be eagerly created via this function.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nfunction createPlatform(injector) {\n    if (_platform && !_platform.destroyed &&\n        !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n        throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n    }\n    _platform = injector.get(PlatformRef);\n    var inits = injector.get(PLATFORM_INITIALIZER, null);\n    if (inits)\n        inits.forEach(function (init) { return init(); });\n    return _platform;\n}\n/**\n * Creates a factory for a platform\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nfunction createPlatformFactory(parentPlatformFactory, name, providers) {\n    if (providers === void 0) { providers = []; }\n    var desc = \"Platform: \" + name;\n    var marker = new InjectionToken(desc);\n    return function (extraProviders) {\n        if (extraProviders === void 0) { extraProviders = []; }\n        var platform = getPlatform();\n        if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            if (parentPlatformFactory) {\n                parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n            }\n            else {\n                var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n            }\n        }\n        return assertPlatform(marker);\n    };\n}\n/**\n * Checks that there currently is a platform which contains the given token as a provider.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nfunction assertPlatform(requiredToken) {\n    var platform = getPlatform();\n    if (!platform) {\n        throw new Error('No platform exists!');\n    }\n    if (!platform.injector.get(requiredToken, null)) {\n        throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n    }\n    return platform;\n}\n/**\n * Destroy the existing platform.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nfunction destroyPlatform() {\n    if (_platform && !_platform.destroyed) {\n        _platform.destroy();\n    }\n}\n/**\n * Returns the current platform.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nfunction getPlatform() {\n    return _platform && !_platform.destroyed ? _platform : null;\n}\n/**\n * The Angular platform is the entry point for Angular on a web page. Each page\n * has exactly one platform, and services (such as reflection) which are common\n * to every Angular application running on the page are bound in its scope.\n *\n * A page's platform is initialized implicitly when a platform is created via a platform factory\n * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n *\n *\n */\nvar PlatformRef = /** @class */ (function () {\n    /** @internal */\n    function PlatformRef(_injector) {\n        this._injector = _injector;\n        this._modules = [];\n        this._destroyListeners = [];\n        this._destroyed = false;\n    }\n    /**\n     * Creates an instance of an `@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n        var _this = this;\n        // Note: We need to create the NgZone _before_ we instantiate the module,\n        // as instantiating the module creates some providers eagerly.\n        // So we create a mini parent injector that just contains the new NgZone and\n        // pass that as parent to the NgModuleFactory.\n        var ngZoneOption = options ? options.ngZone : undefined;\n        var ngZone = getNgZone(ngZoneOption);\n        var providers = [{ provide: NgZone, useValue: ngZone }];\n        // Attention: Don't use ApplicationRef.run here,\n        // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n        return ngZone.run(function () {\n            var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n            var moduleRef = moduleFactory.create(ngZoneInjector);\n            var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n            if (!exceptionHandler) {\n                throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n            }\n            moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n            ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n            return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                initStatus.runInitializers();\n                return initStatus.donePromise.then(function () {\n                    _this._moduleDoBootstrap(moduleRef);\n                    return moduleRef;\n                });\n            });\n        });\n    };\n    /**\n     * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     *\n     */\n    PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n        var _this = this;\n        if (compilerOptions === void 0) { compilerOptions = []; }\n        var compilerFactory = this.injector.get(CompilerFactory);\n        var options = optionsReducer({}, compilerOptions);\n        var compiler$$1 = compilerFactory.createCompiler([options]);\n        return compiler$$1.compileModuleAsync(moduleType)\n            .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n    };\n    PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n        var appRef = moduleRef.injector.get(ApplicationRef);\n        if (moduleRef._bootstrapComponents.length > 0) {\n            moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n        }\n        else if (moduleRef.instance.ngDoBootstrap) {\n            moduleRef.instance.ngDoBootstrap(appRef);\n        }\n        else {\n            throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                \"Please define one of these.\");\n        }\n        this._modules.push(moduleRef);\n    };\n    /**\n     * Register a listener to be called when the platform is disposed.\n     */\n    PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n    Object.defineProperty(PlatformRef.prototype, \"injector\", {\n        /**\n         * Retrieve the platform {@link Injector}, which is the parent injector for\n         * every Angular application on the page and provides singleton providers.\n         */\n        get: function () { return this._injector; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     */\n    PlatformRef.prototype.destroy = function () {\n        if (this._destroyed) {\n            throw new Error('The platform has already been destroyed!');\n        }\n        this._modules.slice().forEach(function (module) { return module.destroy(); });\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n        this._destroyed = true;\n    };\n    Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n        get: function () { return this._destroyed; },\n        enumerable: true,\n        configurable: true\n    });\n    PlatformRef = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [Injector])\n    ], PlatformRef);\n    return PlatformRef;\n}());\nfunction getNgZone(ngZoneOption) {\n    var ngZone;\n    if (ngZoneOption === 'noop') {\n        ngZone = new NoopNgZone();\n    }\n    else {\n        ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n            new NgZone({ enableLongStackTrace: isDevMode() });\n    }\n    return ngZone;\n}\nfunction _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n    try {\n        var result = callback();\n        if (isPromise(result)) {\n            return result.catch(function (e) {\n                ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                // rethrow as the exception handler might not do it\n                throw e;\n            });\n        }\n        return result;\n    }\n    catch (e) {\n        ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n        // rethrow as the exception handler might not do it\n        throw e;\n    }\n}\nfunction optionsReducer(dst, objs) {\n    if (Array.isArray(objs)) {\n        dst = objs.reduce(optionsReducer, dst);\n    }\n    else {\n        dst = __assign({}, dst, objs);\n    }\n    return dst;\n}\n/**\n * A reference to an Angular application running on a page.\n *\n *\n */\nvar ApplicationRef = /** @class */ (function () {\n    /** @internal */\n    function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n        var _this = this;\n        this._zone = _zone;\n        this._console = _console;\n        this._injector = _injector;\n        this._exceptionHandler = _exceptionHandler;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._initStatus = _initStatus;\n        this._bootstrapListeners = [];\n        this._views = [];\n        this._runningTick = false;\n        this._enforceNoNewChanges = false;\n        this._stable = true;\n        /**\n         * Get a list of component types registered to this application.\n         * This list is populated even before the component is created.\n         */\n        this.componentTypes = [];\n        /**\n         * Get a list of components registered to this application.\n         */\n        this.components = [];\n        this._enforceNoNewChanges = isDevMode();\n        this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n        var isCurrentlyStable = new rxjs.Observable(function (observer) {\n            _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                !_this._zone.hasPendingMicrotasks;\n            _this._zone.runOutsideAngular(function () {\n                observer.next(_this._stable);\n                observer.complete();\n            });\n        });\n        var isStable = new rxjs.Observable(function (observer) {\n            // Create the subscription to onStable outside the Angular Zone so that\n            // the callback is run outside the Angular Zone.\n            var stableSub;\n            _this._zone.runOutsideAngular(function () {\n                stableSub = _this._zone.onStable.subscribe(function () {\n                    NgZone.assertNotInAngularZone();\n                    // Check whether there are no pending macro/micro tasks in the next tick\n                    // to allow for NgZone to update the state.\n                    scheduleMicroTask(function () {\n                        if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                            !_this._zone.hasPendingMicrotasks) {\n                            _this._stable = true;\n                            observer.next(true);\n                        }\n                    });\n                });\n            });\n            var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                NgZone.assertInAngularZone();\n                if (_this._stable) {\n                    _this._stable = false;\n                    _this._zone.runOutsideAngular(function () { observer.next(false); });\n                }\n            });\n            return function () {\n                stableSub.unsubscribe();\n                unstableSub.unsubscribe();\n            };\n        });\n        this.isStable =\n            rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n    }\n    ApplicationRef_1 = ApplicationRef;\n    /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the [componentType]'s\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * [componentType]'s selector.\n     *\n     * ### Example\n     * {@example core/ts/platform/platform.ts region='longform'}\n     */\n    ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n        var _this = this;\n        if (!this._initStatus.done) {\n            throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n        }\n        var componentFactory;\n        if (componentOrFactory instanceof ComponentFactory) {\n            componentFactory = componentOrFactory;\n        }\n        else {\n            componentFactory =\n                this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n        }\n        this.componentTypes.push(componentFactory.componentType);\n        // Create a factory associated with the current module if it's not bound to some other\n        var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n            null :\n            this._injector.get(NgModuleRef);\n        var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n        var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n        compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n        var testability = compRef.injector.get(Testability, null);\n        if (testability) {\n            compRef.injector.get(TestabilityRegistry)\n                .registerApplication(compRef.location.nativeElement, testability);\n        }\n        this._loadComponent(compRef);\n        if (isDevMode()) {\n            this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n        }\n        return compRef;\n    };\n    /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     */\n    ApplicationRef.prototype.tick = function () {\n        var _this = this;\n        if (this._runningTick) {\n            throw new Error('ApplicationRef.tick is called recursively');\n        }\n        var scope = ApplicationRef_1._tickScope();\n        try {\n            this._runningTick = true;\n            this._views.forEach(function (view) { return view.detectChanges(); });\n            if (this._enforceNoNewChanges) {\n                this._views.forEach(function (view) { return view.checkNoChanges(); });\n            }\n        }\n        catch (e) {\n            // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n            this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n        }\n        finally {\n            this._runningTick = false;\n            wtfLeave(scope);\n        }\n    };\n    /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     */\n    ApplicationRef.prototype.attachView = function (viewRef) {\n        var view = viewRef;\n        this._views.push(view);\n        view.attachToAppRef(this);\n    };\n    /**\n     * Detaches a view from dirty checking again.\n     */\n    ApplicationRef.prototype.detachView = function (viewRef) {\n        var view = viewRef;\n        remove(this._views, view);\n        view.detachFromAppRef();\n    };\n    ApplicationRef.prototype._loadComponent = function (componentRef) {\n        this.attachView(componentRef.hostView);\n        this.tick();\n        this.components.push(componentRef);\n        // Get the listeners lazily to prevent DI cycles.\n        var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n        listeners.forEach(function (listener) { return listener(componentRef); });\n    };\n    ApplicationRef.prototype._unloadComponent = function (componentRef) {\n        this.detachView(componentRef.hostView);\n        remove(this.components, componentRef);\n    };\n    /** @internal */\n    ApplicationRef.prototype.ngOnDestroy = function () {\n        // TODO(alxhub): Dispose of the NgZone.\n        this._views.slice().forEach(function (view) { return view.destroy(); });\n    };\n    Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n        /**\n         * Returns the number of attached views.\n         */\n        get: function () { return this._views.length; },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internal */\n    ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n    ApplicationRef = ApplicationRef_1 = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n            ErrorHandler,\n            ComponentFactoryResolver,\n            ApplicationInitStatus])\n    ], ApplicationRef);\n    return ApplicationRef;\n    var ApplicationRef_1;\n}());\nfunction remove(list, el) {\n    var index = list.indexOf(el);\n    if (index > -1) {\n        list.splice(index, 1);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for Zone\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n */\nvar RenderComponentType = /** @class */ (function () {\n    function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n        this.id = id;\n        this.templateUrl = templateUrl;\n        this.slotCount = slotCount;\n        this.encapsulation = encapsulation;\n        this.styles = styles;\n        this.animations = animations;\n    }\n    return RenderComponentType;\n}());\n/**\n * @deprecated Debug info is handeled internally in the view engine now.\n */\nvar RenderDebugInfo = /** @class */ (function () {\n    function RenderDebugInfo() {\n    }\n    return RenderDebugInfo;\n}());\n/**\n * @deprecated Use the `Renderer2` instead.\n */\nvar Renderer = /** @class */ (function () {\n    function Renderer() {\n    }\n    return Renderer;\n}());\nvar Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n/**\n * Injectable service that provides a low-level interface for modifying the UI.\n *\n * Use this service to bypass Angular's templating and make custom UI changes that can't be\n * expressed declaratively. For example if you need to set a property or an attribute whose name is\n * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n *\n * If you are implementing a custom renderer, you must implement this interface.\n *\n * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n *\n * @deprecated Use `RendererFactory2` instead.\n */\nvar RootRenderer = /** @class */ (function () {\n    function RootRenderer() {\n    }\n    return RootRenderer;\n}());\n/**\n * @experimental\n */\nvar RendererFactory2 = /** @class */ (function () {\n    function RendererFactory2() {\n    }\n    return RendererFactory2;\n}());\n/**\n * @experimental\n */\n\n(function (RendererStyleFlags2) {\n    RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n    RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n})(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n/**\n * @experimental\n */\nvar Renderer2 = /** @class */ (function () {\n    function Renderer2() {\n    }\n    return Renderer2;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for render\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to load ng module factories.\n *\n */\nvar NgModuleFactoryLoader = /** @class */ (function () {\n    function NgModuleFactoryLoader() {\n    }\n    return NgModuleFactoryLoader;\n}());\nvar moduleFactories = new Map();\n/**\n * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n * @experimental\n */\nfunction registerModuleFactory(id, factory) {\n    var existing = moduleFactories.get(id);\n    if (existing) {\n        throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n    }\n    moduleFactories.set(id, factory);\n}\n\n/**\n * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n * cannot be found.\n * @experimental\n */\nfunction getModuleFactory(id) {\n    var factory = moduleFactories.get(id);\n    if (!factory)\n        throw new Error(\"No module with ID \" + id + \" loaded\");\n    return factory;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n *\n * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n * provide.\n *\n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n *\n * Changes can be observed by subscribing to the changes `Observable`.\n *\n * NOTE: In the future this class will implement an `Observable` interface.\n *\n * ### Example ([live demo](http://plnkr.co/edit/RX8sJnQYl9FWuSCWme5z?p=preview))\n * ```typescript\n * @Component({...})\n * class Container {\n *   @ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n *\n */\nvar QueryList$1 = /** @class */ (function () {\n    function QueryList() {\n        this.dirty = true;\n        this._results = [];\n        this.changes = new EventEmitter();\n        this.length = 0;\n    }\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     */\n    QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     */\n    QueryList.prototype.filter = function (fn) {\n        return this._results.filter(fn);\n    };\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     */\n    QueryList.prototype.find = function (fn) {\n        return this._results.find(fn);\n    };\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     */\n    QueryList.prototype.reduce = function (fn, init) {\n        return this._results.reduce(fn, init);\n    };\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     */\n    QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     */\n    QueryList.prototype.some = function (fn) {\n        return this._results.some(fn);\n    };\n    QueryList.prototype.toArray = function () { return this._results.slice(); };\n    QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n    QueryList.prototype.toString = function () { return this._results.toString(); };\n    QueryList.prototype.reset = function (res) {\n        this._results = flatten$1(res);\n        this.dirty = false;\n        this.length = this._results.length;\n        this.last = this._results[this.length - 1];\n        this.first = this._results[0];\n    };\n    QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n    /** internal */\n    QueryList.prototype.setDirty = function () { this.dirty = true; };\n    /** internal */\n    QueryList.prototype.destroy = function () {\n        this.changes.complete();\n        this.changes.unsubscribe();\n    };\n    return QueryList;\n}());\nfunction flatten$1(list) {\n    return list.reduce(function (flat, item) {\n        var flatItem = Array.isArray(item) ? flatten$1(item) : item;\n        return flat.concat(flatItem);\n    }, []);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SEPARATOR = '#';\nvar FACTORY_CLASS_SUFFIX = 'NgFactory';\n/**\n * Configuration for SystemJsNgModuleLoader.\n * token.\n *\n * @experimental\n */\nvar SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n    function SystemJsNgModuleLoaderConfig() {\n    }\n    return SystemJsNgModuleLoaderConfig;\n}());\nvar DEFAULT_CONFIG = {\n    factoryPathPrefix: '',\n    factoryPathSuffix: '.ngfactory',\n};\n/**\n * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n * @experimental\n */\nvar SystemJsNgModuleLoader = /** @class */ (function () {\n    function SystemJsNgModuleLoader(_compiler, config) {\n        this._compiler = _compiler;\n        this._config = config || DEFAULT_CONFIG;\n    }\n    SystemJsNgModuleLoader.prototype.load = function (path) {\n        var offlineMode = this._compiler instanceof Compiler;\n        return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n    };\n    SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n        var _this = this;\n        var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n        if (exportName === undefined) {\n            exportName = 'default';\n        }\n        return System.import(module)\n            .then(function (module) { return module[exportName]; })\n            .then(function (type) { return checkNotEmpty(type, module, exportName); })\n            .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n    };\n    SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n        var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n        var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n        if (exportName === undefined) {\n            exportName = 'default';\n            factoryClassSuffix = '';\n        }\n        return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n            .then(function (module) { return module[exportName + factoryClassSuffix]; })\n            .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n    };\n    SystemJsNgModuleLoader = __decorate([\n        Injectable(),\n        __param(1, Optional()),\n        __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n    ], SystemJsNgModuleLoader);\n    return SystemJsNgModuleLoader;\n}());\nfunction checkNotEmpty(value, modulePath, exportName) {\n    if (!value) {\n        throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n    }\n    return value;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ViewRef$1 = /** @class */ (function (_super) {\n    __extends(ViewRef, _super);\n    function ViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ViewRef;\n}(ChangeDetectorRef));\n/**\n * Represents an Angular View.\n *\n * <!-- TODO: move the next two paragraphs to the dev guide -->\n * A View is a fundamental building block of the application UI. It is the smallest grouping of\n * Elements which are created and destroyed together.\n *\n * Properties of elements in a View can change, but the structure (number and order) of elements in\n * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n * removing nested Views via a {@link ViewContainerRef}. Each View can contain many View Containers.\n * <!-- /TODO -->\n *\n * ### Example\n *\n * Given this template...\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <li *ngFor=\"let  item of items\">{{item}}</li>\n * </ul>\n * ```\n *\n * We have two {@link TemplateRef}s:\n *\n * Outer {@link TemplateRef}:\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n * </ul>\n * ```\n *\n * Inner {@link TemplateRef}:\n * ```\n *   <li>{{item}}</li>\n * ```\n *\n * Notice that the original template is broken down into two separate {@link TemplateRef}s.\n *\n * The outer/inner {@link TemplateRef}s are then assembled into views like so:\n *\n * ```\n * <!-- ViewRef: outer-0 -->\n * Count: 2\n * <ul>\n *   <ng-template view-container-ref></ng-template>\n *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n * </ul>\n * <!-- /ViewRef: outer-0 -->\n * ```\n * @experimental\n */\nvar EmbeddedViewRef$1 = /** @class */ (function (_super) {\n    __extends(EmbeddedViewRef, _super);\n    function EmbeddedViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return EmbeddedViewRef;\n}(ViewRef$1));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for compiler\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EventListener = /** @class */ (function () {\n    function EventListener(name, callback) {\n        this.name = name;\n        this.callback = callback;\n    }\n    return EventListener;\n}());\n/**\n * @experimental All debugging apis are currently experimental.\n */\nvar DebugNode = /** @class */ (function () {\n    function DebugNode(nativeNode, parent, _debugContext) {\n        this._debugContext = _debugContext;\n        this.nativeNode = nativeNode;\n        if (parent && parent instanceof DebugElement) {\n            parent.addChild(this);\n        }\n        else {\n            this.parent = null;\n        }\n        this.listeners = [];\n    }\n    Object.defineProperty(DebugNode.prototype, \"injector\", {\n        get: function () { return this._debugContext.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n        get: function () { return this._debugContext.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"context\", {\n        get: function () { return this._debugContext.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"references\", {\n        get: function () { return this._debugContext.references; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n        get: function () { return this._debugContext.providerTokens; },\n        enumerable: true,\n        configurable: true\n    });\n    return DebugNode;\n}());\n/**\n * @experimental All debugging apis are currently experimental.\n */\nvar DebugElement = /** @class */ (function (_super) {\n    __extends(DebugElement, _super);\n    function DebugElement(nativeNode, parent, _debugContext) {\n        var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n        _this.properties = {};\n        _this.attributes = {};\n        _this.classes = {};\n        _this.styles = {};\n        _this.childNodes = [];\n        _this.nativeElement = nativeNode;\n        return _this;\n    }\n    DebugElement.prototype.addChild = function (child) {\n        if (child) {\n            this.childNodes.push(child);\n            child.parent = this;\n        }\n    };\n    DebugElement.prototype.removeChild = function (child) {\n        var childIndex = this.childNodes.indexOf(child);\n        if (childIndex !== -1) {\n            child.parent = null;\n            this.childNodes.splice(childIndex, 1);\n        }\n    };\n    DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n        var _this = this;\n        var siblingIndex = this.childNodes.indexOf(child);\n        if (siblingIndex !== -1) {\n            (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n            newChildren.forEach(function (c) {\n                if (c.parent) {\n                    c.parent.removeChild(c);\n                }\n                c.parent = _this;\n            });\n        }\n        var _a;\n    };\n    DebugElement.prototype.insertBefore = function (refChild, newChild) {\n        var refIndex = this.childNodes.indexOf(refChild);\n        if (refIndex === -1) {\n            this.addChild(newChild);\n        }\n        else {\n            if (newChild.parent) {\n                newChild.parent.removeChild(newChild);\n            }\n            newChild.parent = this;\n            this.childNodes.splice(refIndex, 0, newChild);\n        }\n    };\n    DebugElement.prototype.query = function (predicate) {\n        var results = this.queryAll(predicate);\n        return results[0] || null;\n    };\n    DebugElement.prototype.queryAll = function (predicate) {\n        var matches = [];\n        _queryElementChildren(this, predicate, matches);\n        return matches;\n    };\n    DebugElement.prototype.queryAllNodes = function (predicate) {\n        var matches = [];\n        _queryNodeChildren(this, predicate, matches);\n        return matches;\n    };\n    Object.defineProperty(DebugElement.prototype, \"children\", {\n        get: function () {\n            return this.childNodes.filter(function (node) { return node instanceof DebugElement; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n        this.listeners.forEach(function (listener) {\n            if (listener.name == eventName) {\n                listener.callback(eventObj);\n            }\n        });\n    };\n    return DebugElement;\n}(DebugNode));\n/**\n * @experimental\n */\nfunction asNativeElements(debugEls) {\n    return debugEls.map(function (el) { return el.nativeElement; });\n}\nfunction _queryElementChildren(element, predicate, matches) {\n    element.childNodes.forEach(function (node) {\n        if (node instanceof DebugElement) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            _queryElementChildren(node, predicate, matches);\n        }\n    });\n}\nfunction _queryNodeChildren(parentNode, predicate, matches) {\n    if (parentNode instanceof DebugElement) {\n        parentNode.childNodes.forEach(function (node) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            if (node instanceof DebugElement) {\n                _queryNodeChildren(node, predicate, matches);\n            }\n        });\n    }\n}\n// Need to keep the nodes in a global Map so that multiple angular apps are supported.\nvar _nativeNodeToDebugNode = new Map();\n/**\n * @experimental\n */\nfunction getDebugNode(nativeNode) {\n    return _nativeNodeToDebugNode.get(nativeNode) || null;\n}\n\nfunction indexDebugNode(node) {\n    _nativeNodeToDebugNode.set(node.nativeNode, node);\n}\nfunction removeDebugNodeFromIndex(node) {\n    _nativeNodeToDebugNode.delete(node.nativeNode);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Change detection enables data binding in Angular.\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _CORE_PLATFORM_PROVIDERS = [\n    // Set a default platform name for platforms that don't set it explicitly.\n    { provide: PLATFORM_ID, useValue: 'unknown' },\n    { provide: PlatformRef, deps: [Injector] },\n    { provide: TestabilityRegistry, deps: [] },\n    { provide: Console, deps: [] },\n];\n/**\n * This platform has to be included in any other platform\n *\n * @experimental\n */\nvar platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provide this token to set the locale of your application.\n * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n * DecimalPipe and PercentPipe) and by ICU expressions.\n *\n * See the {@linkDocs guide/i18n#setting-up-locale i18n guide} for more information.\n *\n * ### Example\n *\n * ```typescript\n * import { LOCALE_ID } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n * });\n * ```\n *\n * @experimental i18n support is experimental.\n */\nvar LOCALE_ID = new InjectionToken('LocaleId');\n/**\n * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n * `xlf` or `xlf2`) when you want to translate your application in another language.\n *\n * See the {@linkDocs guide/i18n#merge i18n guide} for more information.\n *\n * ### Example\n *\n * ```typescript\n * import { TRANSLATIONS } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * // content of your translation file\n * const translations = '....';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n * });\n * ```\n *\n * @experimental i18n support is experimental.\n */\nvar TRANSLATIONS = new InjectionToken('Translations');\n/**\n * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n * `xlf` or `xlf2`.\n *\n * See the {@linkDocs guide/i18n#merge i18n guide} for more information.\n *\n * ### Example\n *\n * ```typescript\n * import { TRANSLATIONS_FORMAT } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n * });\n * ```\n *\n * @experimental i18n support is experimental.\n */\nvar TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n/**\n * Use this enum at bootstrap as an option of `bootstrapModule` to define the strategy\n * that the compiler should use in case of missing translations:\n * - Error: throw if you have missing translations.\n * - Warning (default): show a warning in the console and/or shell.\n * - Ignore: do nothing.\n *\n * See the {@linkDocs guide/i18n#missing-translation i18n guide} for more information.\n *\n * ### Example\n * ```typescript\n * import { MissingTranslationStrategy } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   missingTranslation: MissingTranslationStrategy.Error\n * });\n * ```\n *\n * @experimental i18n support is experimental.\n */\n\n(function (MissingTranslationStrategy) {\n    MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n    MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n    MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n})(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction _iterableDiffersFactory() {\n    return defaultIterableDiffers;\n}\nfunction _keyValueDiffersFactory() {\n    return defaultKeyValueDiffers;\n}\nfunction _localeFactory(locale) {\n    return locale || 'en-US';\n}\n/**\n * This module includes the providers of @angular/core that are needed\n * to bootstrap components via `ApplicationRef`.\n *\n * @experimental\n */\nvar ApplicationModule = /** @class */ (function () {\n    // Inject ApplicationRef to make it eager...\n    function ApplicationModule(appRef) {\n    }\n    ApplicationModule = __decorate([\n        NgModule({\n            providers: [\n                ApplicationRef,\n                ApplicationInitStatus,\n                Compiler,\n                APP_ID_RANDOM_PROVIDER,\n                { provide: IterableDiffers, useFactory: _iterableDiffersFactory },\n                { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory },\n                {\n                    provide: LOCALE_ID,\n                    useFactory: _localeFactory,\n                    deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n                },\n            ],\n        }),\n        __metadata(\"design:paramtypes\", [ApplicationRef])\n    ], ApplicationModule);\n    return ApplicationModule;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n * that needs sanitizing.\n * Depending upon browser support we must use one of three strategies for doing this.\n * Support: Safari 10.x -> XHR strategy\n * Support: Firefox -> DomParser strategy\n * Default: InertDocument strategy\n */\nvar InertBodyHelper = /** @class */ (function () {\n    function InertBodyHelper(defaultDoc) {\n        this.defaultDoc = defaultDoc;\n        this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n        this.inertBodyElement = this.inertDocument.body;\n        if (this.inertBodyElement == null) {\n            // usually there should be only one body element in the document, but IE doesn't have any, so\n            // we need to create one.\n            var inertHtml = this.inertDocument.createElement('html');\n            this.inertDocument.appendChild(inertHtml);\n            this.inertBodyElement = this.inertDocument.createElement('body');\n            inertHtml.appendChild(this.inertBodyElement);\n        }\n        this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n        if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n            // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n            // so use the XHR strategy.\n            this.getInertBodyElement = this.getInertBodyElement_XHR;\n            return;\n        }\n        this.inertBodyElement.innerHTML =\n            '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n        if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n            // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n            // so use the DOMParser strategy, if it is available.\n            // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n            // fall through to the default strategy below.\n            if (isDOMParserAvailable()) {\n                this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                return;\n            }\n        }\n        // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n        this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n    }\n    /**\n     * Use XHR to create and fill an inert body element (on Safari 10.1)\n     * See\n     * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n     */\n    InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n        // We add these extra elements to ensure that the rest of the content is parsed as expected\n        // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n        // `<head>` tag.\n        html = '<body><remove></remove>' + html + '</body>';\n        try {\n            html = encodeURI(html);\n        }\n        catch (e) {\n            return null;\n        }\n        var xhr = new XMLHttpRequest();\n        xhr.responseType = 'document';\n        xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n        xhr.send(null);\n        var body = xhr.response.body;\n        body.removeChild(body.firstChild);\n        return body;\n    };\n    /**\n     * Use DOMParser to create and fill an inert body element (on Firefox)\n     * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n     *\n     */\n    InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n        // We add these extra elements to ensure that the rest of the content is parsed as expected\n        // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n        // `<head>` tag.\n        html = '<body><remove></remove>' + html + '</body>';\n        try {\n            var body = new window\n                .DOMParser()\n                .parseFromString(html, 'text/html')\n                .body;\n            body.removeChild(body.firstChild);\n            return body;\n        }\n        catch (e) {\n            return null;\n        }\n    };\n    /**\n     * Use an HTML5 `template` element, if supported, or an inert body element created via\n     * `createHtmlDocument` to create and fill an inert DOM element.\n     * This is the default sane strategy to use if the browser does not require one of the specialised\n     * strategies above.\n     */\n    InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n        // Prefer using <template> element if supported.\n        var templateEl = this.inertDocument.createElement('template');\n        if ('content' in templateEl) {\n            templateEl.innerHTML = html;\n            return templateEl;\n        }\n        this.inertBodyElement.innerHTML = html;\n        // Support: IE 9-11 only\n        // strip custom-namespaced attributes on IE<=11\n        if (this.defaultDoc.documentMode) {\n            this.stripCustomNsAttrs(this.inertBodyElement);\n        }\n        return this.inertBodyElement;\n    };\n    /**\n     * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n     * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n     * 'ns1:xlink:foo').\n     *\n     * This is undesirable since we don't want to allow any of these custom attributes. This method\n     * strips them all.\n     */\n    InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n        var elAttrs = el.attributes;\n        // loop backwards so that we can support removals.\n        for (var i = elAttrs.length - 1; 0 < i; i--) {\n            var attrib = elAttrs.item(i);\n            var attrName = attrib.name;\n            if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                el.removeAttribute(attrName);\n            }\n        }\n        var childNode = el.firstChild;\n        while (childNode) {\n            if (childNode.nodeType === Node.ELEMENT_NODE)\n                this.stripCustomNsAttrs(childNode);\n            childNode = childNode.nextSibling;\n        }\n    };\n    return InertBodyHelper;\n}());\n/**\n * We need to determine whether the DOMParser exists in the global context.\n * The try-catch is because, on some browsers, trying to access this property\n * on window can actually throw an error.\n *\n * @suppress {uselessCode}\n */\nfunction isDOMParserAvailable() {\n    try {\n        return !!window.DOMParser;\n    }\n    catch (e) {\n        return false;\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A pattern that recognizes a commonly useful subset of URLs that are safe.\n *\n * This regular expression matches a subset of URLs that will not cause script\n * execution if used in URL context within a HTML document. Specifically, this\n * regular expression matches if (comment from here on and regex copied from\n * Soy's EscapingConventions):\n * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n * (2) or no protocol.  A protocol must be followed by a colon. The below\n *     allows that by allowing colons only after one of the characters [/?#].\n *     A colon after a hash (#) must be in the fragment.\n *     Otherwise, a colon after a (?) must be in a query.\n *     Otherwise, a colon after a single solidus (/) must be in a path.\n *     Otherwise, a colon after a double solidus (//) must be in the authority\n *     (before port).\n *\n * The pattern disallows &, used in HTML entity declarations before\n * one of the characters in [/?#]. This disallows HTML entities used in the\n * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n * It also disallows HTML entities in the first path part of a relative path,\n * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n * that. More importantly, it disallows masking of a colon,\n * e.g. \"javascript&#58;...\".\n *\n * This regular expression was taken from the Closure sanitization library.\n */\nvar SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n/** A pattern that matches safe data URLs. Only matches image, video and audio types. */\nvar DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\nfunction _sanitizeUrl(url) {\n    url = String(url);\n    if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n        return url;\n    if (isDevMode()) {\n        console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n    }\n    return 'unsafe:' + url;\n}\nfunction sanitizeSrcset(srcset) {\n    srcset = String(srcset);\n    return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction tagSet(tags) {\n    var res = {};\n    try {\n        for (var _a = __values(tags.split(',')), _b = _a.next(); !_b.done; _b = _a.next()) {\n            var t = _b.value;\n            res[t] = true;\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return res;\n    var e_1, _c;\n}\nfunction merge$1() {\n    var sets = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        sets[_i] = arguments[_i];\n    }\n    var res = {};\n    try {\n        for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n            var s = sets_1_1.value;\n            for (var v in s) {\n                if (s.hasOwnProperty(v))\n                    res[v] = true;\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return res;\n    var e_2, _a;\n}\n// Good source of info about elements and attributes\n// http://dev.w3.org/html5/spec/Overview.html#semantics\n// http://simon.html5.org/html-elements\n// Safe Void Elements - HTML5\n// http://dev.w3.org/html5/spec/Overview.html#void-elements\nvar VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n// Elements that you can, intentionally, leave open (and which close themselves)\n// http://dev.w3.org/html5/spec/Overview.html#optional-tags\nvar OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\nvar OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\nvar OPTIONAL_END_TAG_ELEMENTS = merge$1(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n// Safe Block Elements - HTML5\nvar BLOCK_ELEMENTS = merge$1(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n    'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n    'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n// Inline Elements - HTML5\nvar INLINE_ELEMENTS = merge$1(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n    'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n    'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\nvar VALID_ELEMENTS = merge$1(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n// Attributes that have href and hence need to be sanitized\nvar URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n// Attributes that have special href set hence need to be sanitized\nvar SRCSET_ATTRS = tagSet('srcset');\nvar HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n    'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n    'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n    'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n    'valign,value,vspace,width');\n// NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n// issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n// innerHTML is required, SVG attributes should be added here.\n// NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n// can be sanitized, but they increase security surface area without a legitimate use case, so they\n// are left out here.\nvar VALID_ATTRS = merge$1(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n/**\n * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n * attributes.\n */\nvar SanitizingHtmlSerializer = /** @class */ (function () {\n    function SanitizingHtmlSerializer() {\n        // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n        // because characters were re-encoded.\n        this.sanitizedSomething = false;\n        this.buf = [];\n    }\n    SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n        // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n        // However this code never accesses properties off of `document` before deleting its contents\n        // again, so it shouldn't be vulnerable to DOM clobbering.\n        var current = el.firstChild;\n        while (current) {\n            if (current.nodeType === Node.ELEMENT_NODE) {\n                this.startElement(current);\n            }\n            else if (current.nodeType === Node.TEXT_NODE) {\n                this.chars(current.nodeValue);\n            }\n            else {\n                // Strip non-element, non-text nodes.\n                this.sanitizedSomething = true;\n            }\n            if (current.firstChild) {\n                current = current.firstChild;\n                continue;\n            }\n            while (current) {\n                // Leaving the element. Walk up and to the right, closing tags as we go.\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    this.endElement(current);\n                }\n                var next = this.checkClobberedElement(current, current.nextSibling);\n                if (next) {\n                    current = next;\n                    break;\n                }\n                current = this.checkClobberedElement(current, current.parentNode);\n            }\n        }\n        return this.buf.join('');\n    };\n    SanitizingHtmlSerializer.prototype.startElement = function (element) {\n        var tagName = element.nodeName.toLowerCase();\n        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n            this.sanitizedSomething = true;\n            return;\n        }\n        this.buf.push('<');\n        this.buf.push(tagName);\n        var elAttrs = element.attributes;\n        for (var i = 0; i < elAttrs.length; i++) {\n            var elAttr = elAttrs.item(i);\n            var attrName = elAttr.name;\n            var lower = attrName.toLowerCase();\n            if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                this.sanitizedSomething = true;\n                continue;\n            }\n            var value = elAttr.value;\n            // TODO(martinprobst): Special case image URIs for data:image/...\n            if (URI_ATTRS[lower])\n                value = _sanitizeUrl(value);\n            if (SRCSET_ATTRS[lower])\n                value = sanitizeSrcset(value);\n            this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n        }\n        this.buf.push('>');\n    };\n    SanitizingHtmlSerializer.prototype.endElement = function (current) {\n        var tagName = current.nodeName.toLowerCase();\n        if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n            this.buf.push('</');\n            this.buf.push(tagName);\n            this.buf.push('>');\n        }\n    };\n    SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n    SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n        if (nextNode &&\n            (node.compareDocumentPosition(nextNode) &\n                Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n            throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n        }\n        return nextNode;\n    };\n    return SanitizingHtmlSerializer;\n}());\n// Regular Expressions for parsing tags and attributes\nvar SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n// ! to ~ is the ASCII range.\nvar NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n/**\n * Escapes all potentially dangerous characters, so that the\n * resulting string can be safely inserted into attribute or\n * element text.\n * @param value\n */\nfunction encodeEntities(value) {\n    return value.replace(/&/g, '&amp;')\n        .replace(SURROGATE_PAIR_REGEXP, function (match) {\n        var hi = match.charCodeAt(0);\n        var low = match.charCodeAt(1);\n        return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n    })\n        .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;');\n}\nvar inertBodyHelper;\n/**\n * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n * the DOM in a browser environment.\n */\nfunction _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n    var inertBodyElement = null;\n    try {\n        inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n        // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n        var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n        inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n        // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n        var mXSSAttempts = 5;\n        var parsedHtml = unsafeHtml;\n        do {\n            if (mXSSAttempts === 0) {\n                throw new Error('Failed to sanitize html because the input is unstable');\n            }\n            mXSSAttempts--;\n            unsafeHtml = parsedHtml;\n            parsedHtml = inertBodyElement.innerHTML;\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        } while (unsafeHtml !== parsedHtml);\n        var sanitizer = new SanitizingHtmlSerializer();\n        var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n        if (isDevMode() && sanitizer.sanitizedSomething) {\n            console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n        }\n        return safeHtml;\n    }\n    finally {\n        // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n        if (inertBodyElement) {\n            var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n            while (parent_1.firstChild) {\n                parent_1.removeChild(parent_1.firstChild);\n            }\n        }\n    }\n}\nfunction getTemplateContent(el) {\n    return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n        el.content :\n        null;\n}\nfunction isTemplateElement(el) {\n    return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Regular expression for safe style values.\n *\n * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n *\n * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n * of XSS.\n *\n * The function expression checks only for XSS safety, not for CSS validity.\n *\n * This regular expression was taken from the Closure sanitization library, and augmented for\n * transformation values.\n */\nvar VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\nvar TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\nvar COLOR_FNS = '(?:rgb|hsl)a?';\nvar GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\nvar CSS3_FNS = '(?:calc|attr)';\nvar FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\nvar SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n    (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n    (FN_ARGS + \")$\"), 'g');\n/**\n * Matches a `url(...)` value with an arbitrary argument as long as it does\n * not contain parentheses.\n *\n * The URL value still needs to be sanitized separately.\n *\n * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n * by observing whether scroll bars are displayed, or character ranges used by a font face\n * definition.\n *\n * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n * binding a URL value without further cooperation from the page will cause an information leak, and\n * if so, it is just a leak, not a full blown XSS vulnerability.\n *\n * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n * code is permissive and allows URLs that sanitize otherwise.\n */\nvar URL_RE = /^url\\(([^)]+)\\)$/;\n/**\n * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n * that neither escape (\\) nor any other character that could result in\n * breaking out of a string parsing context are allowed;\n * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n *\n * This code was taken from the Closure sanitization library.\n */\nfunction hasBalancedQuotes(value) {\n    var outsideSingle = true;\n    var outsideDouble = true;\n    for (var i = 0; i < value.length; i++) {\n        var c = value.charAt(i);\n        if (c === '\\'' && outsideDouble) {\n            outsideSingle = !outsideSingle;\n        }\n        else if (c === '\"' && outsideSingle) {\n            outsideDouble = !outsideDouble;\n        }\n    }\n    return outsideSingle && outsideDouble;\n}\n/**\n * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n * value) and returns a value that is safe to use in a browser environment.\n */\nfunction _sanitizeStyle(value) {\n    value = String(value).trim(); // Make sure it's actually a string.\n    if (!value)\n        return '';\n    // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n    // reasoning behind this.\n    var urlMatch = value.match(URL_RE);\n    if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n        value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n        return value; // Safe style values.\n    }\n    if (isDevMode()) {\n        console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n    }\n    return 'unsafe';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A SecurityContext marks a location that has dangerous security implications, e.g. a DOM property\n * like `innerHTML` that could cause Cross Site Scripting (XSS) security bugs when improperly\n * handled.\n *\n * See DomSanitizer for more details on security in Angular applications.\n *\n *\n */\n\n(function (SecurityContext) {\n    SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n    SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n    SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n    SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n    SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n    SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n})(exports.SecurityContext || (exports.SecurityContext = {}));\n/**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n *\n *\n */\nvar Sanitizer = /** @class */ (function () {\n    function Sanitizer() {\n    }\n    return Sanitizer;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n    flags |= 1 /* TypeElement */;\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    var template = templateFactory ? resolveDefinition(templateFactory) : null;\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: flags,\n        checkIndex: -1,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: {\n            ns: null,\n            name: null,\n            attrs: null, template: template,\n            componentProvider: null,\n            componentView: null,\n            componentRendererType: null,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\nfunction elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n    if (fixedAttrs === void 0) { fixedAttrs = []; }\n    if (!handleEvent) {\n        handleEvent = NOOP;\n    }\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    var ns = null;\n    var name = null;\n    if (namespaceAndName) {\n        _b = __read(splitNamespace(namespaceAndName), 2), ns = _b[0], name = _b[1];\n    }\n    bindings = bindings || [];\n    var bindingDefs = new Array(bindings.length);\n    for (var i = 0; i < bindings.length; i++) {\n        var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n        var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n        var securityContext = undefined;\n        var suffix = undefined;\n        switch (bindingFlags & 15 /* Types */) {\n            case 4 /* TypeElementStyle */:\n                suffix = suffixOrSecurityContext;\n                break;\n            case 1 /* TypeElementAttribute */:\n            case 8 /* TypeProperty */:\n                securityContext = suffixOrSecurityContext;\n                break;\n        }\n        bindingDefs[i] =\n            { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n    }\n    outputs = outputs || [];\n    var outputDefs = new Array(outputs.length);\n    for (var i = 0; i < outputs.length; i++) {\n        var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n        outputDefs[i] = {\n            type: 0 /* ElementOutput */,\n            target: target, eventName: eventName,\n            propName: null\n        };\n    }\n    fixedAttrs = fixedAttrs || [];\n    var attrs = fixedAttrs.map(function (_a) {\n        var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n        var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n        return [ns, name, value];\n    });\n    componentRendererType = resolveRendererType2(componentRendererType);\n    if (componentView) {\n        flags |= 33554432 /* ComponentView */;\n    }\n    flags |= 1 /* TypeElement */;\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n        bindings: bindingDefs,\n        bindingFlags: calcBindingFlags(bindingDefs),\n        outputs: outputDefs,\n        element: {\n            ns: ns,\n            name: name,\n            attrs: attrs,\n            template: null,\n            // will bet set by the view definition\n            componentProvider: null,\n            componentView: componentView || null,\n            componentRendererType: componentRendererType,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP,\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n    var _b;\n}\nfunction createElement(view, renderHost, def) {\n    var elDef = def.element;\n    var rootSelectorOrNode = view.root.selectorOrNode;\n    var renderer = view.renderer;\n    var el;\n    if (view.parent || !rootSelectorOrNode) {\n        if (elDef.name) {\n            el = renderer.createElement(elDef.name, elDef.ns);\n        }\n        else {\n            el = renderer.createComment('');\n        }\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, el);\n        }\n    }\n    else {\n        el = renderer.selectRootElement(rootSelectorOrNode);\n    }\n    if (elDef.attrs) {\n        for (var i = 0; i < elDef.attrs.length; i++) {\n            var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n            renderer.setAttribute(el, name_2, value, ns);\n        }\n    }\n    return el;\n}\nfunction listenToElementOutputs(view, compView, def, el) {\n    for (var i = 0; i < def.outputs.length; i++) {\n        var output = def.outputs[i];\n        var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n        var listenTarget = output.target;\n        var listenerView = view;\n        if (output.target === 'component') {\n            listenTarget = null;\n            listenerView = compView;\n        }\n        var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n        view.disposables[def.outputIndex + i] = disposable;\n    }\n}\nfunction renderEventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\nfunction checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var bindLen = def.bindings.length;\n    var changed = false;\n    if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n        changed = true;\n    return changed;\n}\nfunction checkAndUpdateElementDynamic(view, def, values) {\n    var changed = false;\n    for (var i = 0; i < values.length; i++) {\n        if (checkAndUpdateElementValue(view, def, i, values[i]))\n            changed = true;\n    }\n    return changed;\n}\nfunction checkAndUpdateElementValue(view, def, bindingIdx, value) {\n    if (!checkAndUpdateBinding$1(view, def, bindingIdx, value)) {\n        return false;\n    }\n    var binding = def.bindings[bindingIdx];\n    var elData = asElementData(view, def.nodeIndex);\n    var renderNode$$1 = elData.renderElement;\n    var name = binding.name;\n    switch (binding.flags & 15 /* Types */) {\n        case 1 /* TypeElementAttribute */:\n            setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n            break;\n        case 2 /* TypeElementClass */:\n            setElementClass(view, renderNode$$1, name, value);\n            break;\n        case 4 /* TypeElementStyle */:\n            setElementStyle(view, binding, renderNode$$1, name, value);\n            break;\n        case 8 /* TypeProperty */:\n            var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                binding.flags & 32 /* SyntheticHostProperty */) ?\n                elData.componentView :\n                view;\n            setElementProperty(bindView, binding, renderNode$$1, name, value);\n            break;\n    }\n    return true;\n}\nfunction setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n    var securityContext = binding.securityContext;\n    var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    renderValue = renderValue != null ? renderValue.toString() : null;\n    var renderer = view.renderer;\n    if (value != null) {\n        renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n    }\n    else {\n        renderer.removeAttribute(renderNode$$1, name, ns);\n    }\n}\nfunction setElementClass(view, renderNode$$1, name, value) {\n    var renderer = view.renderer;\n    if (value) {\n        renderer.addClass(renderNode$$1, name);\n    }\n    else {\n        renderer.removeClass(renderNode$$1, name);\n    }\n}\nfunction setElementStyle(view, binding, renderNode$$1, name, value) {\n    var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n    if (renderValue != null) {\n        renderValue = renderValue.toString();\n        var unit = binding.suffix;\n        if (unit != null) {\n            renderValue = renderValue + unit;\n        }\n    }\n    else {\n        renderValue = null;\n    }\n    var renderer = view.renderer;\n    if (renderValue != null) {\n        renderer.setStyle(renderNode$$1, name, renderValue);\n    }\n    else {\n        renderer.removeStyle(renderNode$$1, name);\n    }\n}\nfunction setElementProperty(view, binding, renderNode$$1, name, value) {\n    var securityContext = binding.securityContext;\n    var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    view.renderer.setProperty(renderNode$$1, name, renderValue);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar UNDEFINED_VALUE = new Object();\nvar InjectorRefTokenKey$1 = tokenKey(Injector);\nvar INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\nvar NgModuleRefTokenKey = tokenKey(NgModuleRef);\nfunction moduleProvideDef(flags, token, value, deps) {\n    // Need to resolve forwardRefs as e.g. for `useValue` we\n    // lowered the expression and then stopped evaluating it,\n    // i.e. also didn't unwrap it.\n    value = resolveForwardRef(value);\n    var depDefs = splitDepsDsl(deps, stringify(token));\n    return {\n        // will bet set by the module definition\n        index: -1,\n        deps: depDefs, flags: flags, token: token, value: value\n    };\n}\nfunction moduleDef(providers) {\n    var providersByKey = {};\n    var modules = [];\n    var isRoot = false;\n    for (var i = 0; i < providers.length; i++) {\n        var provider = providers[i];\n        if (provider.token === APP_ROOT) {\n            isRoot = true;\n        }\n        if (provider.flags & 1073741824 /* TypeNgModule */) {\n            modules.push(provider.token);\n        }\n        provider.index = i;\n        providersByKey[tokenKey(provider.token)] = provider;\n    }\n    return {\n        // Will be filled later...\n        factory: null,\n        providersByKey: providersByKey,\n        providers: providers,\n        modules: modules,\n        isRoot: isRoot,\n    };\n}\nfunction initNgModule(data) {\n    var def = data._def;\n    var providers = data._providers = new Array(def.providers.length);\n    for (var i = 0; i < def.providers.length; i++) {\n        var provDef = def.providers[i];\n        if (!(provDef.flags & 4096 /* LazyProvider */)) {\n            // Make sure the provider has not been already initialized outside this loop.\n            if (providers[i] === undefined) {\n                providers[i] = _createProviderInstance$1(data, provDef);\n            }\n        }\n    }\n}\nfunction resolveNgModuleDep(data, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    var former = setCurrentInjector(data);\n    try {\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        if (depDef.flags & 1 /* SkipSelf */) {\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        var tokenKey_1 = depDef.tokenKey;\n        switch (tokenKey_1) {\n            case InjectorRefTokenKey$1:\n            case INJECTORRefTokenKey$1:\n            case NgModuleRefTokenKey:\n                return data;\n        }\n        var providerDef = data._def.providersByKey[tokenKey_1];\n        if (providerDef) {\n            var providerInstance = data._providers[providerDef.index];\n            if (providerInstance === undefined) {\n                providerInstance = data._providers[providerDef.index] =\n                    _createProviderInstance$1(data, providerDef);\n            }\n            return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n        }\n        else if (depDef.token.ngInjectableDef && targetsModule(data, depDef.token.ngInjectableDef)) {\n            var injectableDef = depDef.token.ngInjectableDef;\n            var index = data._providers.length;\n            data._def.providersByKey[depDef.tokenKey] = {\n                flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                value: injectableDef.factory,\n                deps: [], index: index,\n                token: depDef.token,\n            };\n            data._providers[index] = UNDEFINED_VALUE;\n            return (data._providers[index] =\n                _createProviderInstance$1(data, data._def.providersByKey[depDef.tokenKey]));\n        }\n        return data._parent.get(depDef.token, notFoundValue);\n    }\n    finally {\n        setCurrentInjector(former);\n    }\n}\nfunction moduleTransitivelyPresent(ngModule, scope) {\n    return ngModule._def.modules.indexOf(scope) > -1;\n}\nfunction targetsModule(ngModule, def) {\n    return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n        def.providedIn === 'root' && ngModule._def.isRoot);\n}\nfunction _createProviderInstance$1(ngModule, providerDef) {\n    var injectable;\n    switch (providerDef.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 1024 /* TypeFactoryProvider */:\n            injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 2048 /* TypeUseExistingProvider */:\n            injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n            break;\n        case 256 /* TypeValueProvider */:\n            injectable = providerDef.value;\n            break;\n    }\n    // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n    // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n    // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n    // set (ngOnDestroy was detected statically).\n    if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n        !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n        providerDef.flags |= 131072 /* OnDestroy */;\n    }\n    return injectable === undefined ? UNDEFINED_VALUE : injectable;\n}\nfunction _createClass(ngModule, ctor, deps) {\n    var len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            var depValues = new Array(len);\n            for (var i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n    }\n}\nfunction _callFactory(ngModule, factory, deps) {\n    var len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            var depValues = Array(len);\n            for (var i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return factory.apply(void 0, __spread(depValues));\n    }\n}\nfunction callNgModuleLifecycle(ngModule, lifecycles) {\n    var def = ngModule._def;\n    var destroyed = new Set();\n    for (var i = 0; i < def.providers.length; i++) {\n        var provDef = def.providers[i];\n        if (provDef.flags & 131072 /* OnDestroy */) {\n            var instance = ngModule._providers[i];\n            if (instance && instance !== UNDEFINED_VALUE) {\n                var onDestroy = instance.ngOnDestroy;\n                if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                    onDestroy.apply(instance);\n                    destroyed.add(instance);\n                }\n            }\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction attachEmbeddedView(parentView, elementData, viewIndex, view) {\n    var embeddedViews = elementData.viewContainer._embeddedViews;\n    if (viewIndex === null || viewIndex === undefined) {\n        viewIndex = embeddedViews.length;\n    }\n    view.viewContainerParent = parentView;\n    addToArray(embeddedViews, viewIndex, view);\n    attachProjectedView(elementData, view);\n    Services.dirtyParentQueries(view);\n    var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n}\nfunction attachProjectedView(vcElementData, view) {\n    var dvcElementData = declaredViewContainer(view);\n    if (!dvcElementData || dvcElementData === vcElementData ||\n        view.state & 16 /* IsProjectedView */) {\n        return;\n    }\n    // Note: For performance reasons, we\n    // - add a view to template._projectedViews only 1x throughout its lifetime,\n    //   and remove it not until the view is destroyed.\n    //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n    //    nested projected views as well, even across component boundaries).\n    // - don't track the insertion order of views in the projected views array\n    //   (hard, as when the views of the same template are inserted different view containers)\n    view.state |= 16 /* IsProjectedView */;\n    var projectedViews = dvcElementData.template._projectedViews;\n    if (!projectedViews) {\n        projectedViews = dvcElementData.template._projectedViews = [];\n    }\n    projectedViews.push(view);\n    // Note: we are changing the NodeDef here as we cannot calculate\n    // the fact whether a template is used for projection during compilation.\n    markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n}\nfunction markNodeAsProjectedTemplate(viewDef, nodeDef) {\n    if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n        return;\n    }\n    viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n    nodeDef.flags |= 4 /* ProjectedTemplate */;\n    var parentNodeDef = nodeDef.parent;\n    while (parentNodeDef) {\n        parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n        parentNodeDef = parentNodeDef.parent;\n    }\n}\nfunction detachEmbeddedView(elementData, viewIndex) {\n    var embeddedViews = elementData.viewContainer._embeddedViews;\n    if (viewIndex == null || viewIndex >= embeddedViews.length) {\n        viewIndex = embeddedViews.length - 1;\n    }\n    if (viewIndex < 0) {\n        return null;\n    }\n    var view = embeddedViews[viewIndex];\n    view.viewContainerParent = null;\n    removeFromArray(embeddedViews, viewIndex);\n    // See attachProjectedView for why we don't update projectedViews here.\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    return view;\n}\nfunction detachProjectedView(view) {\n    if (!(view.state & 16 /* IsProjectedView */)) {\n        return;\n    }\n    var dvcElementData = declaredViewContainer(view);\n    if (dvcElementData) {\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (projectedViews) {\n            removeFromArray(projectedViews, projectedViews.indexOf(view));\n            Services.dirtyParentQueries(view);\n        }\n    }\n}\nfunction moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n    var embeddedViews = elementData.viewContainer._embeddedViews;\n    var view = embeddedViews[oldViewIndex];\n    removeFromArray(embeddedViews, oldViewIndex);\n    if (newViewIndex == null) {\n        newViewIndex = embeddedViews.length;\n    }\n    addToArray(embeddedViews, newViewIndex, view);\n    // Note: Don't need to change projectedViews as the order in there\n    // as always invalid...\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n    return view;\n}\nfunction renderAttachEmbeddedView(elementData, prevView, view) {\n    var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n        elementData.renderElement;\n    var parentNode = view.renderer.parentNode(prevRenderNode);\n    var nextSibling = view.renderer.nextSibling(prevRenderNode);\n    // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n    // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n    visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n}\nfunction renderDetachView(view) {\n    visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n}\nfunction addToArray(arr, index, value) {\n    // perf: array.push is faster than array.splice!\n    if (index >= arr.length) {\n        arr.push(value);\n    }\n    else {\n        arr.splice(index, 0, value);\n    }\n}\nfunction removeFromArray(arr, index) {\n    // perf: array.pop is faster than array.splice!\n    if (index >= arr.length - 1) {\n        arr.pop();\n    }\n    else {\n        arr.splice(index, 1);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EMPTY_CONTEXT = new Object();\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nfunction createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n    return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n}\nfunction getComponentViewDefinitionFactory(componentFactory) {\n    return componentFactory.viewDefFactory;\n}\nvar ComponentFactory_ = /** @class */ (function (_super) {\n    __extends(ComponentFactory_, _super);\n    function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.selector = selector;\n        _this.componentType = componentType;\n        _this._inputs = _inputs;\n        _this._outputs = _outputs;\n        _this.ngContentSelectors = ngContentSelectors;\n        _this.viewDefFactory = viewDefFactory;\n        return _this;\n    }\n    Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n        get: function () {\n            var inputsArr = [];\n            var inputs = this._inputs;\n            for (var propName in inputs) {\n                var templateName = inputs[propName];\n                inputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return inputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n        get: function () {\n            var outputsArr = [];\n            for (var propName in this._outputs) {\n                var templateName = this._outputs[propName];\n                outputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return outputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new component.\n     */\n    ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        if (!ngModule) {\n            throw new Error('ngModule should be provided');\n        }\n        var viewDef = resolveDefinition(this.viewDefFactory);\n        var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n        var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n        var component = asProviderData(view, componentNodeIndex).instance;\n        if (rootSelectorOrNode) {\n            view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n        }\n        return new ComponentRef_(view, new ViewRef_(view), component);\n    };\n    return ComponentFactory_;\n}(ComponentFactory));\nvar ComponentRef_ = /** @class */ (function (_super) {\n    __extends(ComponentRef_, _super);\n    function ComponentRef_(_view, _viewRef, _component) {\n        var _this = _super.call(this) || this;\n        _this._view = _view;\n        _this._viewRef = _viewRef;\n        _this._component = _component;\n        _this._elDef = _this._view.def.nodes[0];\n        _this.hostView = _viewRef;\n        _this.changeDetectorRef = _viewRef;\n        _this.instance = _component;\n        return _this;\n    }\n    Object.defineProperty(ComponentRef_.prototype, \"location\", {\n        get: function () {\n            return new ElementRef$1(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n        get: function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n        get: function () { return this._component.constructor; },\n        enumerable: true,\n        configurable: true\n    });\n    ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n    ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n    return ComponentRef_;\n}(ComponentRef));\nfunction createViewContainerData(view, elDef, elData) {\n    return new ViewContainerRef_(view, elDef, elData);\n}\nvar ViewContainerRef_ = /** @class */ (function () {\n    function ViewContainerRef_(_view, _elDef, _data) {\n        this._view = _view;\n        this._elDef = _elDef;\n        this._data = _data;\n        /**\n         * @internal\n         */\n        this._embeddedViews = [];\n    }\n    Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n        get: function () { return new ElementRef$1(this._data.renderElement); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n        get: function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n        get: function () {\n            var view = this._view;\n            var elDef = this._elDef.parent;\n            while (!elDef && view) {\n                elDef = viewParentEl(view);\n                view = view.parent;\n            }\n            return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ViewContainerRef_.prototype.clear = function () {\n        var len = this._embeddedViews.length;\n        for (var i = len - 1; i >= 0; i--) {\n            var view = detachEmbeddedView(this._data, i);\n            Services.destroyView(view);\n        }\n    };\n    ViewContainerRef_.prototype.get = function (index) {\n        var view = this._embeddedViews[index];\n        if (view) {\n            var ref = new ViewRef_(view);\n            ref.attachToViewContainerRef(this);\n            return ref;\n        }\n        return null;\n    };\n    Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n        get: function () { return this._embeddedViews.length; },\n        enumerable: true,\n        configurable: true\n    });\n    ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n        var viewRef = templateRef.createEmbeddedView(context || {});\n        this.insert(viewRef, index);\n        return viewRef;\n    };\n    ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n        var contextInjector = injector || this.parentInjector;\n        if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n            ngModuleRef = contextInjector.get(NgModuleRef);\n        }\n        var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n        this.insert(componentRef.hostView, index);\n        return componentRef;\n    };\n    ViewContainerRef_.prototype.insert = function (viewRef, index) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n        }\n        var viewRef_ = viewRef;\n        var viewData = viewRef_._view;\n        attachEmbeddedView(this._view, this._data, index, viewData);\n        viewRef_.attachToViewContainerRef(this);\n        return viewRef;\n    };\n    ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot move a destroyed View in a ViewContainer!');\n        }\n        var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n        moveEmbeddedView(this._data, previousIndex, currentIndex);\n        return viewRef;\n    };\n    ViewContainerRef_.prototype.indexOf = function (viewRef) {\n        return this._embeddedViews.indexOf(viewRef._view);\n    };\n    ViewContainerRef_.prototype.remove = function (index) {\n        var viewData = detachEmbeddedView(this._data, index);\n        if (viewData) {\n            Services.destroyView(viewData);\n        }\n    };\n    ViewContainerRef_.prototype.detach = function (index) {\n        var view = detachEmbeddedView(this._data, index);\n        return view ? new ViewRef_(view) : null;\n    };\n    return ViewContainerRef_;\n}());\nfunction createChangeDetectorRef(view) {\n    return new ViewRef_(view);\n}\nvar ViewRef_ = /** @class */ (function () {\n    function ViewRef_(_view) {\n        this._view = _view;\n        this._viewContainerRef = null;\n        this._appRef = null;\n    }\n    Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n        get: function () { return rootRenderNodes(this._view); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"context\", {\n        get: function () { return this._view.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n        get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n        enumerable: true,\n        configurable: true\n    });\n    ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n    ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n    ViewRef_.prototype.detectChanges = function () {\n        var fs = this._view.root.rendererFactory;\n        if (fs.begin) {\n            fs.begin();\n        }\n        try {\n            Services.checkAndUpdateView(this._view);\n        }\n        finally {\n            if (fs.end) {\n                fs.end();\n            }\n        }\n    };\n    ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n    ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n    ViewRef_.prototype.onDestroy = function (callback) {\n        if (!this._view.disposables) {\n            this._view.disposables = [];\n        }\n        this._view.disposables.push(callback);\n    };\n    ViewRef_.prototype.destroy = function () {\n        if (this._appRef) {\n            this._appRef.detachView(this);\n        }\n        else if (this._viewContainerRef) {\n            this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n        }\n        Services.destroyView(this._view);\n    };\n    ViewRef_.prototype.detachFromAppRef = function () {\n        this._appRef = null;\n        renderDetachView(this._view);\n        Services.dirtyParentQueries(this._view);\n    };\n    ViewRef_.prototype.attachToAppRef = function (appRef) {\n        if (this._viewContainerRef) {\n            throw new Error('This view is already attached to a ViewContainer!');\n        }\n        this._appRef = appRef;\n    };\n    ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n        if (this._appRef) {\n            throw new Error('This view is already attached directly to the ApplicationRef!');\n        }\n        this._viewContainerRef = vcRef;\n    };\n    return ViewRef_;\n}());\nfunction createTemplateData(view, def) {\n    return new TemplateRef_(view, def);\n}\nvar TemplateRef_ = /** @class */ (function (_super) {\n    __extends(TemplateRef_, _super);\n    function TemplateRef_(_parentView, _def) {\n        var _this = _super.call(this) || this;\n        _this._parentView = _parentView;\n        _this._def = _def;\n        return _this;\n    }\n    TemplateRef_.prototype.createEmbeddedView = function (context) {\n        return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n    };\n    Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n        get: function () {\n            return new ElementRef$1(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TemplateRef_;\n}(TemplateRef$1));\nfunction createInjector$1(view, elDef) {\n    return new Injector_(view, elDef);\n}\nvar Injector_ = /** @class */ (function () {\n    function Injector_(view, elDef) {\n        this.view = view;\n        this.elDef = elDef;\n    }\n    Injector_.prototype.get = function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n        return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n    };\n    return Injector_;\n}());\nfunction nodeValue(view, index) {\n    var def = view.def.nodes[index];\n    if (def.flags & 1 /* TypeElement */) {\n        var elData = asElementData(view, def.nodeIndex);\n        return def.element.template ? elData.template : elData.renderElement;\n    }\n    else if (def.flags & 2 /* TypeText */) {\n        return asTextData(view, def.nodeIndex).renderText;\n    }\n    else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n        return asProviderData(view, def.nodeIndex).instance;\n    }\n    throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n}\nfunction createRendererV1(view) {\n    return new RendererAdapter(view.renderer);\n}\nvar RendererAdapter = /** @class */ (function () {\n    function RendererAdapter(delegate) {\n        this.delegate = delegate;\n    }\n    RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n        return this.delegate.selectRootElement(selectorOrNode);\n    };\n    RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n        var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        var el = this.delegate.createElement(name, ns);\n        if (parent) {\n            this.delegate.appendChild(parent, el);\n        }\n        return el;\n    };\n    RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n    RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n        var comment = this.delegate.createComment('');\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, comment);\n        }\n        return comment;\n    };\n    RendererAdapter.prototype.createText = function (parentElement, value) {\n        var node = this.delegate.createText(value);\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, node);\n        }\n        return node;\n    };\n    RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            this.delegate.appendChild(parentElement, nodes[i]);\n        }\n    };\n    RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n        var parentElement = this.delegate.parentNode(node);\n        var nextSibling = this.delegate.nextSibling(node);\n        for (var i = 0; i < viewRootNodes.length; i++) {\n            this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n        }\n    };\n    RendererAdapter.prototype.detachView = function (viewRootNodes) {\n        for (var i = 0; i < viewRootNodes.length; i++) {\n            var node = viewRootNodes[i];\n            var parentElement = this.delegate.parentNode(node);\n            this.delegate.removeChild(parentElement, node);\n        }\n    };\n    RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n        for (var i = 0; i < viewAllNodes.length; i++) {\n            this.delegate.destroyNode(viewAllNodes[i]);\n        }\n    };\n    RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n        return this.delegate.listen(renderElement, name, callback);\n    };\n    RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n        return this.delegate.listen(target, name, callback);\n    };\n    RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n        this.delegate.setProperty(renderElement, propertyName, propertyValue);\n    };\n    RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n        var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        if (attributeValue != null) {\n            this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n        }\n        else {\n            this.delegate.removeAttribute(renderElement, name, ns);\n        }\n    };\n    RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n    RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n        if (isAdd) {\n            this.delegate.addClass(renderElement, className);\n        }\n        else {\n            this.delegate.removeClass(renderElement, className);\n        }\n    };\n    RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n        if (styleValue != null) {\n            this.delegate.setStyle(renderElement, styleName, styleValue);\n        }\n        else {\n            this.delegate.removeStyle(renderElement, styleName);\n        }\n    };\n    RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n        renderElement[methodName].apply(renderElement, args);\n    };\n    RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n    RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n    return RendererAdapter;\n}());\nfunction createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n    return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n}\nvar NgModuleRef_ = /** @class */ (function () {\n    function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n        this._moduleType = _moduleType;\n        this._parent = _parent;\n        this._bootstrapComponents = _bootstrapComponents;\n        this._def = _def;\n        this._destroyListeners = [];\n        this._destroyed = false;\n        this.injector = this;\n        initNgModule(this);\n    }\n    NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (injectFlags === void 0) { injectFlags = 0 /* Default */; }\n        var flags = 0;\n        if (injectFlags & 4 /* SkipSelf */) {\n            flags |= 1 /* SkipSelf */;\n        }\n        else if (injectFlags & 2 /* Self */) {\n            flags |= 4 /* Self */;\n        }\n        return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n    };\n    Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n        get: function () { return this.get(this._moduleType); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n        get: function () { return this.get(ComponentFactoryResolver); },\n        enumerable: true,\n        configurable: true\n    });\n    NgModuleRef_.prototype.destroy = function () {\n        if (this._destroyed) {\n            throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n        }\n        this._destroyed = true;\n        callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n    };\n    NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n    return NgModuleRef_;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar RendererV1TokenKey = tokenKey(Renderer);\nvar Renderer2TokenKey = tokenKey(Renderer2);\nvar ElementRefTokenKey = tokenKey(ElementRef$1);\nvar ViewContainerRefTokenKey = tokenKey(ViewContainerRef$1);\nvar TemplateRefTokenKey = tokenKey(TemplateRef$1);\nvar ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\nvar InjectorRefTokenKey = tokenKey(Injector);\nvar INJECTORRefTokenKey = tokenKey(INJECTOR);\nfunction directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n    var bindings = [];\n    if (props) {\n        for (var prop in props) {\n            var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n            bindings[bindingIndex] = {\n                flags: 8 /* TypeProperty */,\n                name: prop, nonMinifiedName: nonMinifiedName,\n                ns: null,\n                securityContext: null,\n                suffix: null\n            };\n        }\n    }\n    var outputDefs = [];\n    if (outputs) {\n        for (var propName in outputs) {\n            outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n        }\n    }\n    flags |= 16384 /* TypeDirective */;\n    return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n}\nfunction pipeDef(flags, ctor, deps) {\n    flags |= 16 /* TypePipe */;\n    return _def(-1, flags, null, 0, ctor, ctor, deps);\n}\nfunction providerDef(flags, matchedQueries, token, value, deps) {\n    return _def(-1, flags, matchedQueries, 0, token, value, deps);\n}\nfunction _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    if (!outputs) {\n        outputs = [];\n    }\n    if (!bindings) {\n        bindings = [];\n    }\n    // Need to resolve forwardRefs as e.g. for `useValue` we\n    // lowered the expression and then stopped evaluating it,\n    // i.e. also didn't unwrap it.\n    value = resolveForwardRef(value);\n    var depDefs = splitDepsDsl(deps, stringify(token));\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n        ngContentIndex: -1, childCount: childCount, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n        element: null,\n        provider: { token: token, value: value, deps: depDefs },\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\nfunction createProviderInstance(view, def) {\n    return _createProviderInstance(view, def);\n}\nfunction createPipeInstance(view, def) {\n    // deps are looked up from component.\n    var compView = view;\n    while (compView.parent && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    // pipes can see the private services of the component\n    var allowPrivateServices = true;\n    // pipes are always eager and classes!\n    return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n}\nfunction createDirectiveInstance(view, def) {\n    // components can see other private services, other directives can't.\n    var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n    // directives are always eager and classes!\n    var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n    if (def.outputs.length) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var subscription = instance[output.propName].subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n            view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n        }\n    }\n    return instance;\n}\nfunction eventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\nfunction checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var providerData = asProviderData(view, def.nodeIndex);\n    var directive = providerData.instance;\n    var changed = false;\n    var changes = undefined;\n    var bindLen = def.bindings.length;\n    if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 0, v0, changes);\n    }\n    if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 1, v1, changes);\n    }\n    if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 2, v2, changes);\n    }\n    if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 3, v3, changes);\n    }\n    if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 4, v4, changes);\n    }\n    if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 5, v5, changes);\n    }\n    if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 6, v6, changes);\n    }\n    if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 7, v7, changes);\n    }\n    if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 8, v8, changes);\n    }\n    if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 9, v9, changes);\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((def.flags & 65536 /* OnInit */) &&\n        shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\nfunction checkAndUpdateDirectiveDynamic(view, def, values) {\n    var providerData = asProviderData(view, def.nodeIndex);\n    var directive = providerData.instance;\n    var changed = false;\n    var changes = undefined;\n    for (var i = 0; i < values.length; i++) {\n        if (checkBinding(view, def, i, values[i])) {\n            changed = true;\n            changes = updateProp(view, providerData, def, i, values[i], changes);\n        }\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((def.flags & 65536 /* OnInit */) &&\n        shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\nfunction _createProviderInstance(view, def) {\n    // private services can see other private services\n    var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n    var providerDef = def.provider;\n    switch (def.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n        case 1024 /* TypeFactoryProvider */:\n            return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n        case 2048 /* TypeUseExistingProvider */:\n            return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n        case 256 /* TypeValueProvider */:\n            return providerDef.value;\n    }\n}\nfunction createClass(view, elDef, allowPrivateServices, ctor, deps) {\n    var len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            var depValues = new Array(len);\n            for (var i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n    }\n}\nfunction callFactory(view, elDef, allowPrivateServices, factory, deps) {\n    var len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            var depValues = Array(len);\n            for (var i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return factory.apply(void 0, __spread(depValues));\n    }\n}\n// This default value is when checking the hierarchy for a token.\n//\n// It means both:\n// - the token is not provided by the current injector,\n// - only the element injectors should be checked (ie do not check module injectors\n//\n//          mod1\n//         /\n//       el1   mod2\n//         \\  /\n//         el2\n//\n// When requesting el2.injector.get(token), we should check in the following order and return the\n// first found value:\n// - el2.injector.get(token, default)\n// - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n// - mod2.injector.get(token, default)\nvar NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\nfunction resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    if (depDef.flags & 8 /* Value */) {\n        return depDef.token;\n    }\n    var startView = view;\n    if (depDef.flags & 2 /* Optional */) {\n        notFoundValue = null;\n    }\n    var tokenKey$$1 = depDef.tokenKey;\n    if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n        // directives on the same element as a component should be able to control the change detector\n        // of that component as well.\n        allowPrivateServices = !!(elDef && elDef.element.componentView);\n    }\n    if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n        allowPrivateServices = false;\n        elDef = elDef.parent;\n    }\n    var searchView = view;\n    while (searchView) {\n        if (elDef) {\n            switch (tokenKey$$1) {\n                case RendererV1TokenKey: {\n                    var compView = findCompView(searchView, elDef, allowPrivateServices);\n                    return createRendererV1(compView);\n                }\n                case Renderer2TokenKey: {\n                    var compView = findCompView(searchView, elDef, allowPrivateServices);\n                    return compView.renderer;\n                }\n                case ElementRefTokenKey:\n                    return new ElementRef$1(asElementData(searchView, elDef.nodeIndex).renderElement);\n                case ViewContainerRefTokenKey:\n                    return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                case TemplateRefTokenKey: {\n                    if (elDef.element.template) {\n                        return asElementData(searchView, elDef.nodeIndex).template;\n                    }\n                    break;\n                }\n                case ChangeDetectorRefTokenKey: {\n                    var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                    return createChangeDetectorRef(cdView);\n                }\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                    return createInjector$1(searchView, elDef);\n                default:\n                    var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                        elDef.element.publicProviders)[tokenKey$$1];\n                    if (providerDef_1) {\n                        var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                        if (!providerData) {\n                            providerData = { instance: _createProviderInstance(searchView, providerDef_1) };\n                            searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                        }\n                        return providerData.instance;\n                    }\n            }\n        }\n        allowPrivateServices = isComponentView(searchView);\n        elDef = viewParentEl(searchView);\n        searchView = searchView.parent;\n        if (depDef.flags & 4 /* Self */) {\n            searchView = null;\n        }\n    }\n    var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n    if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n        notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n        // Return the value from the root element injector when\n        // - it provides it\n        //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        // - the module injector should not be checked\n        //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        return value;\n    }\n    return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n}\nfunction findCompView(view, elDef, allowPrivateServices) {\n    var compView;\n    if (allowPrivateServices) {\n        compView = asElementData(view, elDef.nodeIndex).componentView;\n    }\n    else {\n        compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n    }\n    return compView;\n}\nfunction updateProp(view, providerData, def, bindingIdx, value, changes) {\n    if (def.flags & 32768 /* Component */) {\n        var compView = asElementData(view, def.parent.nodeIndex).componentView;\n        if (compView.def.flags & 2 /* OnPush */) {\n            compView.state |= 8 /* ChecksEnabled */;\n        }\n    }\n    var binding = def.bindings[bindingIdx];\n    var propName = binding.name;\n    // Note: This is still safe with Closure Compiler as\n    // the user passed in the property name as an object has to `providerDef`,\n    // so Closure Compiler will have renamed the property correctly already.\n    providerData.instance[propName] = value;\n    if (def.flags & 524288 /* OnChanges */) {\n        changes = changes || {};\n        var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n        var binding_1 = def.bindings[bindingIdx];\n        changes[binding_1.nonMinifiedName] =\n            new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n    }\n    view.oldValues[def.bindingIndex + bindingIdx] = value;\n    return changes;\n}\n// This function calls the ngAfterContentCheck, ngAfterContentInit,\n// ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n// flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n// called during a pre-order traversal of the view tree (that is calling the\n// parent hooks before the child hooks) these events are sent in using a\n// post-order traversal of the tree (children before parents). This changes the\n// meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n// expected nodeIndex which a ngOnInit should be called. When sending\n// ngAfterContentInit and ngAfterViewInit it is the expected count of\n// ngAfterContentInit or ngAfterViewInit methods that have been called. This\n// ensure that despite being called recursively or after picking up after an\n// exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n// correct nodes. Consider for example, the following (where E is an element\n// and D is a directive)\n//  Tree:       pre-order index  post-order index\n//    E1        0                6\n//      E2      1                1\n//       D3     2                0\n//      E4      3                5\n//       E5     4                4\n//        E6    5                2\n//        E7    6                3\n// As can be seen, the post-order index has an unclear relationship to the\n// pre-order index (postOrderIndex === preOrderIndex - parentCount +\n// childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n// are stable (will be the same for the same view regardless of exceptions or\n// recursion) we just need to count them which will roughly correspond to the\n// post-order index (it skips elements and directives that do not have\n// lifecycle hooks).\n//\n// For example, if an exception is raised in the E6.onAfterViewInit() the\n// initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n// initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n// not have their ngAfterViewInit() called but, starting with E7, the rest of\n// the view will begin getting ngAfterViewInit() called until a check and\n// pass is complete.\n//\n// This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n// indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n// initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n// D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n// When the recursion returns the initIndex will be 7 so E1 is skipped as it\n// has already been called in the recursively called checkAnUpdateView().\nfunction callLifecycleHooksChildrenFirst(view, lifecycles) {\n    if (!(view.def.nodeFlags & lifecycles)) {\n        return;\n    }\n    var nodes = view.def.nodes;\n    var initIndex = 0;\n    for (var i = 0; i < nodes.length; i++) {\n        var nodeDef = nodes[i];\n        var parent_1 = nodeDef.parent;\n        if (!parent_1 && nodeDef.flags & lifecycles) {\n            // matching root node (e.g. a pipe)\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n        }\n        if ((nodeDef.childFlags & lifecycles) === 0) {\n            // no child matches one of the lifecycles\n            i += nodeDef.childCount;\n        }\n        while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n            i === parent_1.nodeIndex + parent_1.childCount) {\n            // last child of an element\n            if (parent_1.directChildFlags & lifecycles) {\n                initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n            }\n            parent_1 = parent_1.parent;\n        }\n    }\n}\nfunction callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n    for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n        var nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & lifecycles) {\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n        }\n        // only visit direct children\n        i += nodeDef.childCount;\n    }\n    return initIndex;\n}\nfunction callProviderLifecycles(view, index, lifecycles, initIndex) {\n    var providerData = asProviderData(view, index);\n    if (!providerData) {\n        return;\n    }\n    var provider = providerData.instance;\n    if (!provider) {\n        return;\n    }\n    Services.setCurrentNode(view, index);\n    if (lifecycles & 1048576 /* AfterContentInit */ &&\n        shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n        provider.ngAfterContentInit();\n    }\n    if (lifecycles & 2097152 /* AfterContentChecked */) {\n        provider.ngAfterContentChecked();\n    }\n    if (lifecycles & 4194304 /* AfterViewInit */ &&\n        shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n        provider.ngAfterViewInit();\n    }\n    if (lifecycles & 8388608 /* AfterViewChecked */) {\n        provider.ngAfterViewChecked();\n    }\n    if (lifecycles & 131072 /* OnDestroy */) {\n        provider.ngOnDestroy();\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction queryDef(flags, id, bindings) {\n    var bindingDefs = [];\n    for (var propName in bindings) {\n        var bindingType = bindings[propName];\n        bindingDefs.push({ propName: propName, bindingType: bindingType });\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        // TODO(vicb): check\n        checkIndex: -1, flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        ngContentIndex: -1,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n        ngContent: null\n    };\n}\nfunction createQuery$1() {\n    return new QueryList$1();\n}\nfunction dirtyParentQueries(view) {\n    var queryIds = view.def.nodeMatchedQueries;\n    while (view.parent && isEmbeddedView(view)) {\n        var tplDef = view.parentNodeDef;\n        view = view.parent;\n        // content queries\n        var end = tplDef.nodeIndex + tplDef.childCount;\n        for (var i = 0; i <= end; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                asQueryList(view, i).setDirty();\n            }\n            if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                // skip elements that don't contain the template element or no query.\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    // view queries\n    if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n        for (var i = 0; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                asQueryList(view, i).setDirty();\n            }\n            // only visit the root nodes\n            i += nodeDef.childCount;\n        }\n    }\n}\nfunction checkAndUpdateQuery(view, nodeDef) {\n    var queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (!queryList.dirty) {\n        return;\n    }\n    var directiveInstance;\n    var newValues = undefined;\n    if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n        var elementDef = nodeDef.parent.parent;\n        newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n        directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n    }\n    else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n        newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n        directiveInstance = view.component;\n    }\n    queryList.reset(newValues);\n    var bindings = nodeDef.query.bindings;\n    var notify = false;\n    for (var i = 0; i < bindings.length; i++) {\n        var binding = bindings[i];\n        var boundValue = void 0;\n        switch (binding.bindingType) {\n            case 0 /* First */:\n                boundValue = queryList.first;\n                break;\n            case 1 /* All */:\n                boundValue = queryList;\n                notify = true;\n                break;\n        }\n        directiveInstance[binding.propName] = boundValue;\n    }\n    if (notify) {\n        queryList.notifyOnChanges();\n    }\n}\nfunction calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n    for (var i = startIndex; i <= endIndex; i++) {\n        var nodeDef = view.def.nodes[i];\n        var valueType = nodeDef.matchedQueries[queryDef.id];\n        if (valueType != null) {\n            values.push(getQueryValue(view, nodeDef, valueType));\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n            (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                queryDef.filterId) {\n            var elementData = asElementData(view, i);\n            // check embedded views that were attached at the place of their template,\n            // but process child nodes first if some match the query (see issue #16568)\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                i += nodeDef.childCount;\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = elementData.viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    var embeddedView = embeddedViews[k];\n                    var dvc = declaredViewContainer(embeddedView);\n                    if (dvc && dvc === elementData) {\n                        calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            var projectedViews = elementData.template._projectedViews;\n            if (projectedViews) {\n                for (var k = 0; k < projectedViews.length; k++) {\n                    var projectedView = projectedViews[k];\n                    calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                }\n            }\n        }\n        if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n            // if no child matches the query, skip the children.\n            i += nodeDef.childCount;\n        }\n    }\n    return values;\n}\nfunction getQueryValue(view, nodeDef, queryValueType) {\n    if (queryValueType != null) {\n        // a match\n        switch (queryValueType) {\n            case 1 /* RenderElement */:\n                return asElementData(view, nodeDef.nodeIndex).renderElement;\n            case 0 /* ElementRef */:\n                return new ElementRef$1(asElementData(view, nodeDef.nodeIndex).renderElement);\n            case 2 /* TemplateRef */:\n                return asElementData(view, nodeDef.nodeIndex).template;\n            case 3 /* ViewContainerRef */:\n                return asElementData(view, nodeDef.nodeIndex).viewContainer;\n            case 4 /* Provider */:\n                return asProviderData(view, nodeDef.nodeIndex).instance;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction ngContentDef(ngContentIndex, index) {\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: -1,\n        flags: 8 /* TypeNgContent */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex: ngContentIndex,\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: { index: index }\n    };\n}\nfunction appendNgContent(view, renderHost, def) {\n    var parentEl = getParentRenderElement(view, renderHost, def);\n    if (!parentEl) {\n        // Nothing to do if there is no parent element.\n        return;\n    }\n    var ngContentIndex = def.ngContent.index;\n    visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction purePipeDef(checkIndex, argCount) {\n    // argCount + 1 to include the pipe as first arg\n    return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n}\nfunction pureArrayDef(checkIndex, argCount) {\n    return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n}\nfunction pureObjectDef(checkIndex, propToIndex) {\n    var keys = Object.keys(propToIndex);\n    var nbKeys = keys.length;\n    var propertyNames = new Array(nbKeys);\n    for (var i = 0; i < nbKeys; i++) {\n        var key = keys[i];\n        var index = propToIndex[key];\n        propertyNames[index] = key;\n    }\n    return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n}\nfunction _pureExpressionDef(flags, checkIndex, propertyNames) {\n    var bindings = new Array(propertyNames.length);\n    for (var i = 0; i < propertyNames.length; i++) {\n        var prop = propertyNames[i];\n        bindings[i] = {\n            flags: 8 /* TypeProperty */,\n            name: prop,\n            ns: null,\n            nonMinifiedName: prop,\n            securityContext: null,\n            suffix: null\n        };\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        ngContentIndex: -1,\n        childCount: 0, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings),\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\nfunction createPureExpression(view, def) {\n    return { value: undefined };\n}\nfunction checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var bindings = def.bindings;\n    var changed = false;\n    var bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding$1(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding$1(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding$1(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding$1(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding$1(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding$1(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding$1(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding$1(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding$1(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding$1(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var data = asPureExpressionData(view, def.nodeIndex);\n        var value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = new Array(bindings.length);\n                if (bindLen > 0)\n                    value[0] = v0;\n                if (bindLen > 1)\n                    value[1] = v1;\n                if (bindLen > 2)\n                    value[2] = v2;\n                if (bindLen > 3)\n                    value[3] = v3;\n                if (bindLen > 4)\n                    value[4] = v4;\n                if (bindLen > 5)\n                    value[5] = v5;\n                if (bindLen > 6)\n                    value[6] = v6;\n                if (bindLen > 7)\n                    value[7] = v7;\n                if (bindLen > 8)\n                    value[8] = v8;\n                if (bindLen > 9)\n                    value[9] = v9;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                if (bindLen > 0)\n                    value[bindings[0].name] = v0;\n                if (bindLen > 1)\n                    value[bindings[1].name] = v1;\n                if (bindLen > 2)\n                    value[bindings[2].name] = v2;\n                if (bindLen > 3)\n                    value[bindings[3].name] = v3;\n                if (bindLen > 4)\n                    value[bindings[4].name] = v4;\n                if (bindLen > 5)\n                    value[bindings[5].name] = v5;\n                if (bindLen > 6)\n                    value[bindings[6].name] = v6;\n                if (bindLen > 7)\n                    value[bindings[7].name] = v7;\n                if (bindLen > 8)\n                    value[bindings[8].name] = v8;\n                if (bindLen > 9)\n                    value[bindings[9].name] = v9;\n                break;\n            case 128 /* TypePurePipe */:\n                var pipe = v0;\n                switch (bindLen) {\n                    case 1:\n                        value = pipe.transform(v0);\n                        break;\n                    case 2:\n                        value = pipe.transform(v1);\n                        break;\n                    case 3:\n                        value = pipe.transform(v1, v2);\n                        break;\n                    case 4:\n                        value = pipe.transform(v1, v2, v3);\n                        break;\n                    case 5:\n                        value = pipe.transform(v1, v2, v3, v4);\n                        break;\n                    case 6:\n                        value = pipe.transform(v1, v2, v3, v4, v5);\n                        break;\n                    case 7:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                        break;\n                    case 8:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                        break;\n                    case 9:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                        break;\n                    case 10:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                        break;\n                }\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\nfunction checkAndUpdatePureExpressionDynamic(view, def, values) {\n    var bindings = def.bindings;\n    var changed = false;\n    for (var i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding$1(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var data = asPureExpressionData(view, def.nodeIndex);\n        var value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = values;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                for (var i = 0; i < values.length; i++) {\n                    value[bindings[i].name] = values[i];\n                }\n                break;\n            case 128 /* TypePurePipe */:\n                var pipe = values[0];\n                var params = values.slice(1);\n                value = pipe.transform.apply(pipe, __spread(params));\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction textDef(checkIndex, ngContentIndex, staticText) {\n    var bindings = new Array(staticText.length - 1);\n    for (var i = 1; i < staticText.length; i++) {\n        bindings[i - 1] = {\n            flags: 8 /* TypeProperty */,\n            name: null,\n            ns: null,\n            nonMinifiedName: null,\n            securityContext: null,\n            suffix: staticText[i],\n        };\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: 2 /* TypeText */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex: ngContentIndex,\n        childCount: 0, bindings: bindings,\n        bindingFlags: 8 /* TypeProperty */,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: { prefix: staticText[0] },\n        query: null,\n        ngContent: null,\n    };\n}\nfunction createText(view, renderHost, def) {\n    var renderNode$$1;\n    var renderer = view.renderer;\n    renderNode$$1 = renderer.createText(def.text.prefix);\n    var parentEl = getParentRenderElement(view, renderHost, def);\n    if (parentEl) {\n        renderer.appendChild(parentEl, renderNode$$1);\n    }\n    return { renderText: renderNode$$1 };\n}\nfunction checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var changed = false;\n    var bindings = def.bindings;\n    var bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding$1(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding$1(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding$1(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding$1(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding$1(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding$1(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding$1(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding$1(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding$1(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding$1(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var value = def.text.prefix;\n        if (bindLen > 0)\n            value += _addInterpolationPart(v0, bindings[0]);\n        if (bindLen > 1)\n            value += _addInterpolationPart(v1, bindings[1]);\n        if (bindLen > 2)\n            value += _addInterpolationPart(v2, bindings[2]);\n        if (bindLen > 3)\n            value += _addInterpolationPart(v3, bindings[3]);\n        if (bindLen > 4)\n            value += _addInterpolationPart(v4, bindings[4]);\n        if (bindLen > 5)\n            value += _addInterpolationPart(v5, bindings[5]);\n        if (bindLen > 6)\n            value += _addInterpolationPart(v6, bindings[6]);\n        if (bindLen > 7)\n            value += _addInterpolationPart(v7, bindings[7]);\n        if (bindLen > 8)\n            value += _addInterpolationPart(v8, bindings[8]);\n        if (bindLen > 9)\n            value += _addInterpolationPart(v9, bindings[9]);\n        var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\nfunction checkAndUpdateTextDynamic(view, def, values) {\n    var bindings = def.bindings;\n    var changed = false;\n    for (var i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding$1(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var value = '';\n        for (var i = 0; i < values.length; i++) {\n            value = value + _addInterpolationPart(values[i], bindings[i]);\n        }\n        value = def.text.prefix + value;\n        var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\nfunction _addInterpolationPart(value, binding) {\n    var valueStr = value != null ? value.toString() : '';\n    return valueStr + binding.suffix;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction viewDef(flags, nodes, updateDirectives, updateRenderer) {\n    // clone nodes and set auto calculated values\n    var viewBindingCount = 0;\n    var viewDisposableCount = 0;\n    var viewNodeFlags = 0;\n    var viewRootNodeFlags = 0;\n    var viewMatchedQueries = 0;\n    var currentParent = null;\n    var currentRenderParent = null;\n    var currentElementHasPublicProviders = false;\n    var currentElementHasPrivateProviders = false;\n    var lastRenderRootNode = null;\n    for (var i = 0; i < nodes.length; i++) {\n        var node = nodes[i];\n        node.nodeIndex = i;\n        node.parent = currentParent;\n        node.bindingIndex = viewBindingCount;\n        node.outputIndex = viewDisposableCount;\n        node.renderParent = currentRenderParent;\n        viewNodeFlags |= node.flags;\n        viewMatchedQueries |= node.matchedQueryIds;\n        if (node.element) {\n            var elDef = node.element;\n            elDef.publicProviders =\n                currentParent ? currentParent.element.publicProviders : Object.create(null);\n            elDef.allProviders = elDef.publicProviders;\n            // Note: We assume that all providers of an element are before any child element!\n            currentElementHasPublicProviders = false;\n            currentElementHasPrivateProviders = false;\n            if (node.element.template) {\n                viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        validateNode(currentParent, node, nodes.length);\n        viewBindingCount += node.bindings.length;\n        viewDisposableCount += node.outputs.length;\n        if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n            lastRenderRootNode = node;\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            if (!currentElementHasPublicProviders) {\n                currentElementHasPublicProviders = true;\n                // Use prototypical inheritance to not get O(n^2) complexity...\n                currentParent.element.publicProviders =\n                    Object.create(currentParent.element.publicProviders);\n                currentParent.element.allProviders = currentParent.element.publicProviders;\n            }\n            var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n            var isComponent = (node.flags & 32768 /* Component */) !== 0;\n            if (!isPrivateService || isComponent) {\n                currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n            }\n            else {\n                if (!currentElementHasPrivateProviders) {\n                    currentElementHasPrivateProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.allProviders =\n                        Object.create(currentParent.element.publicProviders);\n                }\n                currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n            }\n            if (isComponent) {\n                currentParent.element.componentProvider = node;\n            }\n        }\n        if (currentParent) {\n            currentParent.childFlags |= node.flags;\n            currentParent.directChildFlags |= node.flags;\n            currentParent.childMatchedQueries |= node.matchedQueryIds;\n            if (node.element && node.element.template) {\n                currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        else {\n            viewRootNodeFlags |= node.flags;\n        }\n        if (node.childCount > 0) {\n            currentParent = node;\n            if (!isNgContainer(node)) {\n                currentRenderParent = node;\n            }\n        }\n        else {\n            // When the current node has no children, check if it is the last children of its parent.\n            // When it is, propagate the flags up.\n            // The loop is required because an element could be the last transitive children of several\n            // elements. We loop to either the root or the highest opened element (= with remaining\n            // children)\n            while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                var newParent = currentParent.parent;\n                if (newParent) {\n                    newParent.childFlags |= currentParent.childFlags;\n                    newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                }\n                currentParent = newParent;\n                // We also need to update the render parent & account for ng-container\n                if (currentParent && isNgContainer(currentParent)) {\n                    currentRenderParent = currentParent.renderParent;\n                }\n                else {\n                    currentRenderParent = currentParent;\n                }\n            }\n        }\n    }\n    var handleEvent = function (view, nodeIndex, eventName, event) {\n        return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n    };\n    return {\n        // Will be filled later...\n        factory: null,\n        nodeFlags: viewNodeFlags,\n        rootNodeFlags: viewRootNodeFlags,\n        nodeMatchedQueries: viewMatchedQueries, flags: flags,\n        nodes: nodes,\n        updateDirectives: updateDirectives || NOOP,\n        updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n        bindingCount: viewBindingCount,\n        outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n    };\n}\nfunction isNgContainer(node) {\n    return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n}\nfunction validateNode(parent, node, nodeCount) {\n    var template = node.element && node.element.template;\n    if (template) {\n        if (!template.lastRenderRootNode) {\n            throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n        }\n        if (template.lastRenderRootNode &&\n            template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n            throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.flags & 20224 /* CatProvider */) {\n        var parentFlags = parent ? parent.flags : 0;\n        if ((parentFlags & 1 /* TypeElement */) === 0) {\n            throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.query) {\n        if (node.flags & 67108864 /* TypeContentQuery */ &&\n            (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n            throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n        }\n        if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n            throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.childCount) {\n        var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n        if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n            throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n}\nfunction createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n    // embedded views are seen as siblings to the anchor, so we need\n    // to get the parent of the anchor and use it as parentIndex.\n    var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n    initView(view, parent.component, context);\n    createViewNodes(view);\n    return view;\n}\nfunction createRootView(root, def, context) {\n    var view = createView(root, root.renderer, null, null, def);\n    initView(view, context, context);\n    createViewNodes(view);\n    return view;\n}\nfunction createComponentView(parentView, nodeDef, viewDef, hostElement) {\n    var rendererType = nodeDef.element.componentRendererType;\n    var compRenderer;\n    if (!rendererType) {\n        compRenderer = parentView.root.renderer;\n    }\n    else {\n        compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n    }\n    return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n}\nfunction createView(root, renderer, parent, parentNodeDef, def) {\n    var nodes = new Array(def.nodes.length);\n    var disposables = def.outputCount ? new Array(def.outputCount) : null;\n    var view = {\n        def: def,\n        parent: parent,\n        viewContainerParent: null, parentNodeDef: parentNodeDef,\n        context: null,\n        component: null, nodes: nodes,\n        state: 13 /* CatInit */, root: root, renderer: renderer,\n        oldValues: new Array(def.bindingCount), disposables: disposables,\n        initIndex: -1\n    };\n    return view;\n}\nfunction initView(view, component, context) {\n    view.component = component;\n    view.context = context;\n}\nfunction createViewNodes(view) {\n    var renderHost;\n    if (isComponentView(view)) {\n        var hostDef = view.parentNodeDef;\n        renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n    }\n    var def = view.def;\n    var nodes = view.nodes;\n    for (var i = 0; i < def.nodes.length; i++) {\n        var nodeDef = def.nodes[i];\n        Services.setCurrentNode(view, i);\n        var nodeData = void 0;\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                var el = createElement(view, renderHost, nodeDef);\n                var componentView = undefined;\n                if (nodeDef.flags & 33554432 /* ComponentView */) {\n                    var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                    componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                }\n                listenToElementOutputs(view, componentView, nodeDef, el);\n                nodeData = {\n                    renderElement: el,\n                    componentView: componentView,\n                    viewContainer: null,\n                    template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                };\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                }\n                break;\n            case 2 /* TypeText */:\n                nodeData = createText(view, renderHost, nodeDef);\n                break;\n            case 512 /* TypeClassProvider */:\n            case 1024 /* TypeFactoryProvider */:\n            case 2048 /* TypeUseExistingProvider */:\n            case 256 /* TypeValueProvider */: {\n                nodeData = nodes[i];\n                if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                    var instance = createProviderInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                }\n                break;\n            }\n            case 16 /* TypePipe */: {\n                var instance = createPipeInstance(view, nodeDef);\n                nodeData = { instance: instance };\n                break;\n            }\n            case 16384 /* TypeDirective */: {\n                nodeData = nodes[i];\n                if (!nodeData) {\n                    var instance = createDirectiveInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                }\n                if (nodeDef.flags & 32768 /* Component */) {\n                    var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                    initView(compView, nodeData.instance, nodeData.instance);\n                }\n                break;\n            }\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                nodeData = createPureExpression(view, nodeDef);\n                break;\n            case 67108864 /* TypeContentQuery */:\n            case 134217728 /* TypeViewQuery */:\n                nodeData = createQuery$1();\n                break;\n            case 8 /* TypeNgContent */:\n                appendNgContent(view, renderHost, nodeDef);\n                // no runtime data needed for NgContent...\n                nodeData = undefined;\n                break;\n        }\n        nodes[i] = nodeData;\n    }\n    // Create the ViewData.nodes of component views after we created everything else,\n    // so that e.g. ng-content works\n    execComponentViewsAction(view, ViewAction.CreateViewNodes);\n    // fill static content and view queries\n    execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n}\nfunction checkNoChangesView(view) {\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 1 /* CheckNoChanges */);\n    execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n    Services.updateRenderer(view, 1 /* CheckNoChanges */);\n    execComponentViewsAction(view, ViewAction.CheckNoChanges);\n    // Note: We don't check queries for changes as we didn't do this in v2.x.\n    // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n}\nfunction checkAndUpdateView(view) {\n    if (view.state & 1 /* BeforeFirstCheck */) {\n        view.state &= ~1 /* BeforeFirstCheck */;\n        view.state |= 2 /* FirstCheck */;\n    }\n    else {\n        view.state &= ~2 /* FirstCheck */;\n    }\n    shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n    execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n    callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n    Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n    execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n    callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n    if (view.def.flags & 2 /* OnPush */) {\n        view.state &= ~8 /* ChecksEnabled */;\n    }\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n}\nfunction checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n    }\n}\nfunction markProjectedViewsForCheck(view) {\n    var def = view.def;\n    if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n        return;\n    }\n    for (var i = 0; i < def.nodes.length; i++) {\n        var nodeDef = def.nodes[i];\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            var projectedViews = asElementData(view, i).template._projectedViews;\n            if (projectedViews) {\n                for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                    var projectedView = projectedViews[i_1];\n                    projectedView.state |= 32 /* CheckProjectedView */;\n                    markParentViewsForCheckProjectedViews(projectedView, view);\n                }\n            }\n        }\n        else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\nfunction checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        default:\n            throw 'unreachable';\n    }\n}\nfunction checkAndUpdateNodeDynamic(view, nodeDef, values) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementDynamic(view, nodeDef, values);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextDynamic(view, nodeDef, values);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n        default:\n            throw 'unreachable';\n    }\n}\nfunction checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        checkNoChangesNodeDynamic(view, nodeDef, v0);\n    }\n    // Returning false is ok here as we would have thrown in case of a change.\n    return false;\n}\nfunction checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var bindLen = nodeDef.bindings.length;\n    if (bindLen > 0)\n        checkBindingNoChanges(view, nodeDef, 0, v0);\n    if (bindLen > 1)\n        checkBindingNoChanges(view, nodeDef, 1, v1);\n    if (bindLen > 2)\n        checkBindingNoChanges(view, nodeDef, 2, v2);\n    if (bindLen > 3)\n        checkBindingNoChanges(view, nodeDef, 3, v3);\n    if (bindLen > 4)\n        checkBindingNoChanges(view, nodeDef, 4, v4);\n    if (bindLen > 5)\n        checkBindingNoChanges(view, nodeDef, 5, v5);\n    if (bindLen > 6)\n        checkBindingNoChanges(view, nodeDef, 6, v6);\n    if (bindLen > 7)\n        checkBindingNoChanges(view, nodeDef, 7, v7);\n    if (bindLen > 8)\n        checkBindingNoChanges(view, nodeDef, 8, v8);\n    if (bindLen > 9)\n        checkBindingNoChanges(view, nodeDef, 9, v9);\n}\nfunction checkNoChangesNodeDynamic(view, nodeDef, values) {\n    for (var i = 0; i < values.length; i++) {\n        checkBindingNoChanges(view, nodeDef, i, values[i]);\n    }\n}\n/**\n * Workaround https://github.com/angular/tsickle/issues/497\n * @suppress {misplacedTypeAnnotation}\n */\nfunction checkNoChangesQuery(view, nodeDef) {\n    var queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (queryList.dirty) {\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\nfunction destroyView(view) {\n    if (view.state & 128 /* Destroyed */) {\n        return;\n    }\n    execEmbeddedViewsAction(view, ViewAction.Destroy);\n    execComponentViewsAction(view, ViewAction.Destroy);\n    callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n    if (view.disposables) {\n        for (var i = 0; i < view.disposables.length; i++) {\n            view.disposables[i]();\n        }\n    }\n    detachProjectedView(view);\n    if (view.renderer.destroyNode) {\n        destroyViewNodes(view);\n    }\n    if (isComponentView(view)) {\n        view.renderer.destroy();\n    }\n    view.state |= 128 /* Destroyed */;\n}\nfunction destroyViewNodes(view) {\n    var len = view.def.nodes.length;\n    for (var i = 0; i < len; i++) {\n        var def = view.def.nodes[i];\n        if (def.flags & 1 /* TypeElement */) {\n            view.renderer.destroyNode(asElementData(view, i).renderElement);\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            view.renderer.destroyNode(asTextData(view, i).renderText);\n        }\n        else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n            asQueryList(view, i).destroy();\n        }\n    }\n}\nvar ViewAction;\n(function (ViewAction) {\n    ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n    ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n    ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n    ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n    ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n    ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n})(ViewAction || (ViewAction = {}));\nfunction execComponentViewsAction(view, action) {\n    var def = view.def;\n    if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n        return;\n    }\n    for (var i = 0; i < def.nodes.length; i++) {\n        var nodeDef = def.nodes[i];\n        if (nodeDef.flags & 33554432 /* ComponentView */) {\n            // a leaf\n            callViewAction(asElementData(view, i).componentView, action);\n        }\n        else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\nfunction execEmbeddedViewsAction(view, action) {\n    var def = view.def;\n    if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n        return;\n    }\n    for (var i = 0; i < def.nodes.length; i++) {\n        var nodeDef = def.nodes[i];\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            // a leaf\n            var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n            for (var k = 0; k < embeddedViews.length; k++) {\n                callViewAction(embeddedViews[k], action);\n            }\n        }\n        else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\nfunction callViewAction(view, action) {\n    var viewState = view.state;\n    switch (action) {\n        case ViewAction.CheckNoChanges:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckNoChangesProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdate:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdateProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.Destroy:\n            // Note: destroyView recurses over all views,\n            // so we don't need to special case projected views here.\n            destroyView(view);\n            break;\n        case ViewAction.CreateViewNodes:\n            createViewNodes(view);\n            break;\n    }\n}\nfunction execProjectedViewsAction(view, action) {\n    execEmbeddedViewsAction(view, action);\n    execComponentViewsAction(view, action);\n}\nfunction execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n    if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n        return;\n    }\n    var nodeCount = view.def.nodes.length;\n    for (var i = 0; i < nodeCount; i++) {\n        var nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n            Services.setCurrentNode(view, nodeDef.nodeIndex);\n            switch (checkType) {\n                case 0 /* CheckAndUpdate */:\n                    checkAndUpdateQuery(view, nodeDef);\n                    break;\n                case 1 /* CheckNoChanges */:\n                    checkNoChangesQuery(view, nodeDef);\n                    break;\n            }\n        }\n        if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n            // no child has a matching query\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar initialized = false;\nfunction initServicesIfNeeded() {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    var services = isDevMode() ? createDebugServices() : createProdServices();\n    Services.setCurrentNode = services.setCurrentNode;\n    Services.createRootView = services.createRootView;\n    Services.createEmbeddedView = services.createEmbeddedView;\n    Services.createComponentView = services.createComponentView;\n    Services.createNgModuleRef = services.createNgModuleRef;\n    Services.overrideProvider = services.overrideProvider;\n    Services.overrideComponentView = services.overrideComponentView;\n    Services.clearOverrides = services.clearOverrides;\n    Services.checkAndUpdateView = services.checkAndUpdateView;\n    Services.checkNoChangesView = services.checkNoChangesView;\n    Services.destroyView = services.destroyView;\n    Services.resolveDep = resolveDep;\n    Services.createDebugContext = services.createDebugContext;\n    Services.handleEvent = services.handleEvent;\n    Services.updateDirectives = services.updateDirectives;\n    Services.updateRenderer = services.updateRenderer;\n    Services.dirtyParentQueries = dirtyParentQueries;\n}\nfunction createProdServices() {\n    return {\n        setCurrentNode: function () { },\n        createRootView: createProdRootView,\n        createEmbeddedView: createEmbeddedView,\n        createComponentView: createComponentView,\n        createNgModuleRef: createNgModuleRef,\n        overrideProvider: NOOP,\n        overrideComponentView: NOOP,\n        clearOverrides: NOOP,\n        checkAndUpdateView: checkAndUpdateView,\n        checkNoChangesView: checkNoChangesView,\n        destroyView: destroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: function (view, nodeIndex, eventName, event) {\n            return view.def.handleEvent(view, nodeIndex, eventName, event);\n        },\n        updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n            prodCheckNoChangesNode, view); },\n        updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n            prodCheckNoChangesNode, view); },\n    };\n}\nfunction createDebugServices() {\n    return {\n        setCurrentNode: debugSetCurrentNode,\n        createRootView: debugCreateRootView,\n        createEmbeddedView: debugCreateEmbeddedView,\n        createComponentView: debugCreateComponentView,\n        createNgModuleRef: debugCreateNgModuleRef,\n        overrideProvider: debugOverrideProvider,\n        overrideComponentView: debugOverrideComponentView,\n        clearOverrides: debugClearOverrides,\n        checkAndUpdateView: debugCheckAndUpdateView,\n        checkNoChangesView: debugCheckNoChangesView,\n        destroyView: debugDestroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: debugHandleEvent,\n        updateDirectives: debugUpdateDirectives,\n        updateRenderer: debugUpdateRenderer,\n    };\n}\nfunction createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var rendererFactory = ngModule.injector.get(RendererFactory2);\n    return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n}\nfunction debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var rendererFactory = ngModule.injector.get(RendererFactory2);\n    var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n    var defWithOverride = applyProviderOverridesToView(def);\n    return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n}\nfunction createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n    var sanitizer = ngModule.injector.get(Sanitizer);\n    var errorHandler = ngModule.injector.get(ErrorHandler);\n    var renderer = rendererFactory.createRenderer(null, null);\n    return {\n        ngModule: ngModule,\n        injector: elInjector, projectableNodes: projectableNodes,\n        selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n    };\n}\nfunction debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n    var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n    return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n}\nfunction debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n    var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n    if (overrideComponentView) {\n        viewDef$$1 = overrideComponentView;\n    }\n    else {\n        viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n    }\n    return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n}\nfunction debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n    var defWithOverride = applyProviderOverridesToNgModule(def);\n    return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n}\nvar providerOverrides = new Map();\nvar providerOverridesWithScope = new Map();\nvar viewDefOverrides = new Map();\nfunction debugOverrideProvider(override) {\n    providerOverrides.set(override.token, override);\n    if (typeof override.token === 'function' && override.token.ngInjectableDef &&\n        typeof override.token.ngInjectableDef.providedIn === 'function') {\n        providerOverridesWithScope.set(override.token, override);\n    }\n}\nfunction debugOverrideComponentView(comp, compFactory) {\n    var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n    var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n    viewDefOverrides.set(comp, compViewDef);\n}\nfunction debugClearOverrides() {\n    providerOverrides.clear();\n    providerOverridesWithScope.clear();\n    viewDefOverrides.clear();\n}\n// Notes about the algorithm:\n// 1) Locate the providers of an element and check if one of them was overwritten\n// 2) Change the providers of that element\n//\n// We only create new datastructures if we need to, to keep perf impact\n// reasonable.\nfunction applyProviderOverridesToView(def) {\n    if (providerOverrides.size === 0) {\n        return def;\n    }\n    var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n    if (elementIndicesWithOverwrittenProviders.length === 0) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = def.factory(function () { return NOOP; });\n    for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n        applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n    }\n    return def;\n    function findElementIndicesWithOverwrittenProviders(def) {\n        var elIndicesWithOverwrittenProviders = [];\n        var lastElementDef = null;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                lastElementDef = nodeDef;\n            }\n            if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                providerOverrides.has(nodeDef.provider.token)) {\n                elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                lastElementDef = null;\n            }\n        }\n        return elIndicesWithOverwrittenProviders;\n    }\n    function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n        for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                // stop at the next element\n                return;\n            }\n            if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                var provider = nodeDef.provider;\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n        }\n    }\n}\n// Notes about the algorithm:\n// We only create new datastructures if we need to, to keep perf impact\n// reasonable.\nfunction applyProviderOverridesToNgModule(def) {\n    var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n    if (!hasOverrides) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = def.factory(function () { return NOOP; });\n    applyProviderOverrides(def);\n    return def;\n    function calcHasOverrides(def) {\n        var hasOverrides = false;\n        var hasDeprecatedOverrides = false;\n        if (providerOverrides.size === 0) {\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        def.providers.forEach(function (node) {\n            var override = providerOverrides.get(node.token);\n            if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                hasOverrides = true;\n                hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n            }\n        });\n        def.modules.forEach(function (module) {\n            providerOverridesWithScope.forEach(function (override, token) {\n                if (token.ngInjectableDef.providedIn === module) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n        });\n        return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n    }\n    function applyProviderOverrides(def) {\n        for (var i = 0; i < def.providers.length; i++) {\n            var provider = def.providers[i];\n            if (hasDeprecatedOverrides) {\n                // We had a bug where me made\n                // all providers lazy. Keep this logic behind a flag\n                // for migrating existing users.\n                provider.flags |= 4096 /* LazyProvider */;\n            }\n            var override = providerOverrides.get(provider.token);\n            if (override) {\n                provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                provider.deps = splitDepsDsl(override.deps);\n                provider.value = override.value;\n            }\n        }\n        if (providerOverridesWithScope.size > 0) {\n            var moduleSet_1 = new Set(def.modules);\n            providerOverridesWithScope.forEach(function (override, token) {\n                if (moduleSet_1.has(token.ngInjectableDef.providedIn)) {\n                    var provider = {\n                        token: token,\n                        flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                        deps: splitDepsDsl(override.deps),\n                        value: override.value,\n                        index: def.providers.length,\n                    };\n                    def.providers.push(provider);\n                    def.providersByKey[tokenKey(token)] = provider;\n                }\n            });\n        }\n    }\n}\nfunction prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var nodeDef = view.def.nodes[checkIndex];\n    checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\nfunction prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var nodeDef = view.def.nodes[checkIndex];\n    checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\nfunction debugCheckAndUpdateView(view) {\n    return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n}\nfunction debugCheckNoChangesView(view) {\n    return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n}\nfunction debugDestroyView(view) {\n    return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n}\nvar DebugAction;\n(function (DebugAction) {\n    DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n    DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n    DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n    DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n    DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n})(DebugAction || (DebugAction = {}));\nvar _currentAction;\nvar _currentView;\nvar _currentNodeIndex;\nfunction debugSetCurrentNode(view, nodeIndex) {\n    _currentView = view;\n    _currentNodeIndex = nodeIndex;\n}\nfunction debugHandleEvent(view, nodeIndex, eventName, event) {\n    debugSetCurrentNode(view, nodeIndex);\n    return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n}\nfunction debugUpdateDirectives(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n    return view.def.updateDirectives(debugCheckDirectivesFn, view);\n    function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\nfunction debugUpdateRenderer(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n    return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n    function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\nfunction debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n    var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n    if (changed) {\n        var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            var bindingValues = {};\n            for (var i = 0; i < nodeDef.bindings.length; i++) {\n                var binding = nodeDef.bindings[i];\n                var value = values[i];\n                if (binding.flags & 8 /* TypeProperty */) {\n                    bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                        normalizeDebugBindingValue(value);\n                }\n            }\n            var elDef = nodeDef.parent;\n            var el = asElementData(view, elDef.nodeIndex).renderElement;\n            if (!elDef.element.name) {\n                // a comment.\n                view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n            }\n            else {\n                // a regular element.\n                for (var attr in bindingValues) {\n                    var value = bindingValues[attr];\n                    if (value != null) {\n                        view.renderer.setAttribute(el, attr, value);\n                    }\n                    else {\n                        view.renderer.removeAttribute(el, attr);\n                    }\n                }\n            }\n        }\n    }\n}\nfunction debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n    checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n}\nfunction normalizeDebugBindingName(name) {\n    // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n    name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n    return \"ng-reflect-\" + name;\n}\nvar CAMEL_CASE_REGEXP = /([A-Z])/g;\nfunction camelCaseToDashCase(input) {\n    return input.replace(CAMEL_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return '-' + m[1].toLowerCase();\n    });\n}\nfunction normalizeDebugBindingValue(value) {\n    try {\n        // Limit the size of the value as otherwise the DOM just gets polluted.\n        return value != null ? value.toString().slice(0, 30) : value;\n    }\n    catch (e) {\n        return '[ERROR] Exception while trying to serialize the value';\n    }\n}\nfunction nextDirectiveWithBinding(view, nodeIndex) {\n    for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n        var nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\nfunction nextRenderNodeWithBinding(view, nodeIndex) {\n    for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n        var nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\nvar DebugContext_ = /** @class */ (function () {\n    function DebugContext_(view, nodeIndex) {\n        this.view = view;\n        this.nodeIndex = nodeIndex;\n        if (nodeIndex == null) {\n            this.nodeIndex = nodeIndex = 0;\n        }\n        this.nodeDef = view.def.nodes[nodeIndex];\n        var elDef = this.nodeDef;\n        var elView = view;\n        while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n            elDef = elDef.parent;\n        }\n        if (!elDef) {\n            while (!elDef && elView) {\n                elDef = viewParentEl(elView);\n                elView = elView.parent;\n            }\n        }\n        this.elDef = elDef;\n        this.elView = elView;\n    }\n    Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n        get: function () {\n            // Has to be done lazily as we use the DebugContext also during creation of elements...\n            return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"injector\", {\n        get: function () { return createInjector$1(this.elView, this.elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"component\", {\n        get: function () { return this.elOrCompView.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"context\", {\n        get: function () { return this.elOrCompView.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n        get: function () {\n            var tokens = [];\n            if (this.elDef) {\n                for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                    var childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        tokens.push(childDef.provider.token);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return tokens;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"references\", {\n        get: function () {\n            var references = {};\n            if (this.elDef) {\n                collectReferences(this.elView, this.elDef, references);\n                for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                    var childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        collectReferences(this.elView, childDef, references);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return references;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n        get: function () {\n            var elData = findHostElement(this.elOrCompView);\n            return elData ? elData.renderElement : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n        get: function () {\n            return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                renderNode(this.elView, this.elDef);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DebugContext_.prototype.logError = function (console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        var logViewDef;\n        var logNodeIndex;\n        if (this.nodeDef.flags & 2 /* TypeText */) {\n            logViewDef = this.view.def;\n            logNodeIndex = this.nodeDef.nodeIndex;\n        }\n        else {\n            logViewDef = this.elView.def;\n            logNodeIndex = this.elDef.nodeIndex;\n        }\n        // Note: we only generate a log function for text and element nodes\n        // to make the generated code as small as possible.\n        var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n        var currRenderNodeIndex = -1;\n        var nodeLogger = function () {\n            currRenderNodeIndex++;\n            if (currRenderNodeIndex === renderNodeIndex) {\n                return (_a = console.error).bind.apply(_a, __spread([console], values));\n            }\n            else {\n                return NOOP;\n            }\n            var _a;\n        };\n        logViewDef.factory(nodeLogger);\n        if (currRenderNodeIndex < renderNodeIndex) {\n            console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n            console.error.apply(console, __spread(values));\n        }\n    };\n    return DebugContext_;\n}());\nfunction getRenderNodeIndex(viewDef$$1, nodeIndex) {\n    var renderNodeIndex = -1;\n    for (var i = 0; i <= nodeIndex; i++) {\n        var nodeDef = viewDef$$1.nodes[i];\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            renderNodeIndex++;\n        }\n    }\n    return renderNodeIndex;\n}\nfunction findHostElement(view) {\n    while (view && !isComponentView(view)) {\n        view = view.parent;\n    }\n    if (view.parent) {\n        return asElementData(view.parent, viewParentEl(view).nodeIndex);\n    }\n    return null;\n}\nfunction collectReferences(view, nodeDef, references) {\n    for (var refName in nodeDef.references) {\n        references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n    }\n}\nfunction callWithDebugContext(action, fn, self, args) {\n    var oldAction = _currentAction;\n    var oldView = _currentView;\n    var oldNodeIndex = _currentNodeIndex;\n    try {\n        _currentAction = action;\n        var result = fn.apply(self, args);\n        _currentView = oldView;\n        _currentNodeIndex = oldNodeIndex;\n        _currentAction = oldAction;\n        return result;\n    }\n    catch (e) {\n        if (isViewDebugError(e) || !_currentView) {\n            throw e;\n        }\n        throw viewWrappedDebugError(e, getCurrentDebugContext());\n    }\n}\nfunction getCurrentDebugContext() {\n    return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n}\nvar DebugRendererFactory2 = /** @class */ (function () {\n    function DebugRendererFactory2(delegate) {\n        this.delegate = delegate;\n    }\n    DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n        return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n    };\n    DebugRendererFactory2.prototype.begin = function () {\n        if (this.delegate.begin) {\n            this.delegate.begin();\n        }\n    };\n    DebugRendererFactory2.prototype.end = function () {\n        if (this.delegate.end) {\n            this.delegate.end();\n        }\n    };\n    DebugRendererFactory2.prototype.whenRenderingDone = function () {\n        if (this.delegate.whenRenderingDone) {\n            return this.delegate.whenRenderingDone();\n        }\n        return Promise.resolve(null);\n    };\n    return DebugRendererFactory2;\n}());\nvar DebugRenderer2 = /** @class */ (function () {\n    function DebugRenderer2(delegate) {\n        this.delegate = delegate;\n        this.data = this.delegate.data;\n    }\n    DebugRenderer2.prototype.destroyNode = function (node) {\n        removeDebugNodeFromIndex(getDebugNode(node));\n        if (this.delegate.destroyNode) {\n            this.delegate.destroyNode(node);\n        }\n    };\n    DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n    DebugRenderer2.prototype.createElement = function (name, namespace) {\n        var el = this.delegate.createElement(name, namespace);\n        var debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            var debugEl = new DebugElement(el, null, debugCtx);\n            debugEl.name = name;\n            indexDebugNode(debugEl);\n        }\n        return el;\n    };\n    DebugRenderer2.prototype.createComment = function (value) {\n        var comment = this.delegate.createComment(value);\n        var debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(comment, null, debugCtx));\n        }\n        return comment;\n    };\n    DebugRenderer2.prototype.createText = function (value) {\n        var text = this.delegate.createText(value);\n        var debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(text, null, debugCtx));\n        }\n        return text;\n    };\n    DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n        var debugEl = getDebugNode(parent);\n        var debugChildEl = getDebugNode(newChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.addChild(debugChildEl);\n        }\n        this.delegate.appendChild(parent, newChild);\n    };\n    DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n        var debugEl = getDebugNode(parent);\n        var debugChildEl = getDebugNode(newChild);\n        var debugRefEl = getDebugNode(refChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.insertBefore(debugRefEl, debugChildEl);\n        }\n        this.delegate.insertBefore(parent, newChild, refChild);\n    };\n    DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n        var debugEl = getDebugNode(parent);\n        var debugChildEl = getDebugNode(oldChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.removeChild(debugChildEl);\n        }\n        this.delegate.removeChild(parent, oldChild);\n    };\n    DebugRenderer2.prototype.selectRootElement = function (selectorOrNode) {\n        var el = this.delegate.selectRootElement(selectorOrNode);\n        var debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugElement(el, null, debugCtx));\n        }\n        return el;\n    };\n    DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            var fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = value;\n        }\n        this.delegate.setAttribute(el, name, value, namespace);\n    };\n    DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            var fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = null;\n        }\n        this.delegate.removeAttribute(el, name, namespace);\n    };\n    DebugRenderer2.prototype.addClass = function (el, name) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = true;\n        }\n        this.delegate.addClass(el, name);\n    };\n    DebugRenderer2.prototype.removeClass = function (el, name) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = false;\n        }\n        this.delegate.removeClass(el, name);\n    };\n    DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = value;\n        }\n        this.delegate.setStyle(el, style, value, flags);\n    };\n    DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = null;\n        }\n        this.delegate.removeStyle(el, style, flags);\n    };\n    DebugRenderer2.prototype.setProperty = function (el, name, value) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.properties[name] = value;\n        }\n        this.delegate.setProperty(el, name, value);\n    };\n    DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n        if (typeof target !== 'string') {\n            var debugEl = getDebugNode(target);\n            if (debugEl) {\n                debugEl.listeners.push(new EventListener(eventName, callback));\n            }\n        }\n        return this.delegate.listen(target, eventName, callback);\n    };\n    DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n    DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n    DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n    return DebugRenderer2;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction overrideProvider(override) {\n    initServicesIfNeeded();\n    return Services.overrideProvider(override);\n}\nfunction overrideComponentView(comp, componentFactory) {\n    initServicesIfNeeded();\n    return Services.overrideComponentView(comp, componentFactory);\n}\nfunction clearOverrides() {\n    initServicesIfNeeded();\n    return Services.clearOverrides();\n}\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nfunction createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n    return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n}\nvar NgModuleFactory_ = /** @class */ (function (_super) {\n    __extends(NgModuleFactory_, _super);\n    function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.moduleType = moduleType;\n        _this._bootstrapComponents = _bootstrapComponents;\n        _this._ngModuleDefFactory = _ngModuleDefFactory;\n        return _this;\n    }\n    NgModuleFactory_.prototype.create = function (parentInjector) {\n        initServicesIfNeeded();\n        var def = resolveDefinition(this._ngModuleDefFactory);\n        return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n    };\n    return NgModuleFactory_;\n}(NgModuleFactory));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BRAND = '__SANITIZER_TRUSTED_BRAND__';\n/**\n * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n * dangerous content.\n *\n * This method parses the `html` and locates potentially dangerous content (such as urls and\n * javascript) and removes it.\n *\n * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n *\n * @param unsafeHtml untrusted `html`, typically from the user.\n * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n * and urls have been removed.\n */\nfunction sanitizeHtml(unsafeHtml) {\n    var s = getCurrentSanitizer();\n    if (s) {\n        return s.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n    }\n    if (unsafeHtml instanceof String && unsafeHtml[BRAND] === 'Html') {\n        return unsafeHtml.toString();\n    }\n    return _sanitizeHtml(document, stringify$1(unsafeHtml));\n}\n/**\n * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n * dangerous content.\n *\n * This method parses the `style` and locates potentially dangerous content (such as urls and\n * javascript) and removes it.\n *\n * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n *\n * @param unsafeStyle untrusted `style`, typically from the user.\n * @returns `style` string which is safe to bind to the `style` properties, because all of the\n * dangerous javascript and urls have been removed.\n */\nfunction sanitizeStyle(unsafeStyle) {\n    var s = getCurrentSanitizer();\n    if (s) {\n        return s.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n    }\n    if (unsafeStyle instanceof String && unsafeStyle[BRAND] === 'Style') {\n        return unsafeStyle.toString();\n    }\n    return _sanitizeStyle(stringify$1(unsafeStyle));\n}\n/**\n * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n * dangerous\n * content.\n *\n * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n * removes it.\n *\n * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n *\n * @param unsafeUrl untrusted `url`, typically from the user.\n * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n * all of the dangerous javascript has been removed.\n */\nfunction sanitizeUrl(unsafeUrl) {\n    var s = getCurrentSanitizer();\n    if (s) {\n        return s.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n    }\n    if (unsafeUrl instanceof String && unsafeUrl[BRAND] === 'Url') {\n        return unsafeUrl.toString();\n    }\n    return _sanitizeUrl(stringify$1(unsafeUrl));\n}\n/**\n * A `url` sanitizer which only lets trusted `url`s through.\n *\n * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n *\n * @param unsafeResourceUrl untrusted `url`, typically from the user.\n * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n * only trusted `url`s have been allowed to pass.\n */\nfunction sanitizeResourceUrl(unsafeResourceUrl) {\n    var s = getCurrentSanitizer();\n    if (s) {\n        return s.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n    }\n    if (unsafeResourceUrl instanceof String &&\n        unsafeResourceUrl[BRAND] === 'ResourceUrl') {\n        return unsafeResourceUrl.toString();\n    }\n    throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n}\n/**\n * A `script` sanitizer which only lets trusted javascript through.\n *\n * This passes only `script`s marked trusted by calling {@link bypassSanitizationTrustScript}.\n *\n * @param unsafeScript untrusted `script`, typically from the user.\n * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n * because only trusted `scripts`s have been allowed to pass.\n */\n\n/**\n * Mark `html` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n *\n * @param trustedHtml `html` string which needs to be implicitly trusted.\n * @returns a `html` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustHtml(trustedHtml) {\n    return bypassSanitizationTrustString(trustedHtml, 'Html');\n}\n/**\n * Mark `style` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link styleSanitizer} to be trusted implicitly.\n *\n * @param trustedStyle `style` string which needs to be implicitly trusted.\n * @returns a `style` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustStyle(trustedStyle) {\n    return bypassSanitizationTrustString(trustedStyle, 'Style');\n}\n/**\n * Mark `script` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n *\n * @param trustedScript `script` string which needs to be implicitly trusted.\n * @returns a `script` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustScript(trustedScript) {\n    return bypassSanitizationTrustString(trustedScript, 'Script');\n}\n/**\n * Mark `url` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link urlSanitizer} to be trusted implicitly.\n *\n * @param trustedUrl `url` string which needs to be implicitly trusted.\n * @returns a `url` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustUrl(trustedUrl) {\n    return bypassSanitizationTrustString(trustedUrl, 'Url');\n}\n/**\n * Mark `url` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n *\n * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n * @returns a `url` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n    return bypassSanitizationTrustString(trustedResourceUrl, 'ResourceUrl');\n}\nfunction bypassSanitizationTrustString(trustedString, mode) {\n    var trusted = new String(trustedString);\n    trusted[BRAND] = mode;\n    return trusted;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// clang-format off\n\n// clang-format on\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point from which you should import all public core APIs.\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file is not used to build this module. It is only used during editing\n// by the TypeScript language service and during build for verification. `ngc`\n// replaces this file with production index.ts when it rewrites private symbol\n// names.\n\nexports.createPlatform = createPlatform;\nexports.assertPlatform = assertPlatform;\nexports.destroyPlatform = destroyPlatform;\nexports.getPlatform = getPlatform;\nexports.PlatformRef = PlatformRef;\nexports.ApplicationRef = ApplicationRef;\nexports.enableProdMode = enableProdMode;\nexports.isDevMode = isDevMode;\nexports.createPlatformFactory = createPlatformFactory;\nexports.NgProbeToken = NgProbeToken;\nexports.APP_ID = APP_ID;\nexports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\nexports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\nexports.PLATFORM_ID = PLATFORM_ID;\nexports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\nexports.APP_INITIALIZER = APP_INITIALIZER;\nexports.ApplicationInitStatus = ApplicationInitStatus;\nexports.DebugElement = DebugElement;\nexports.DebugNode = DebugNode;\nexports.asNativeElements = asNativeElements;\nexports.getDebugNode = getDebugNode;\nexports.Testability = Testability;\nexports.TestabilityRegistry = TestabilityRegistry;\nexports.setTestabilityGetter = setTestabilityGetter;\nexports.TRANSLATIONS = TRANSLATIONS;\nexports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\nexports.LOCALE_ID = LOCALE_ID;\nexports.ApplicationModule = ApplicationModule;\nexports.wtfCreateScope = wtfCreateScope;\nexports.wtfLeave = wtfLeave;\nexports.wtfStartTimeRange = wtfStartTimeRange;\nexports.wtfEndTimeRange = wtfEndTimeRange;\nexports.Type = Type;\nexports.EventEmitter = EventEmitter;\nexports.ErrorHandler = ErrorHandler;\nexports.Sanitizer = Sanitizer;\nexports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\nexports.Attribute = Attribute;\nexports.ContentChild = ContentChild;\nexports.ContentChildren = ContentChildren;\nexports.Query = Query;\nexports.ViewChild = ViewChild;\nexports.ViewChildren = ViewChildren;\nexports.Component = Component;\nexports.Directive = Directive;\nexports.HostBinding = HostBinding;\nexports.HostListener = HostListener;\nexports.Input = Input;\nexports.Output = Output;\nexports.Pipe = Pipe;\nexports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\nexports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\nexports.NgModule = NgModule;\nexports.Version = Version;\nexports.VERSION = VERSION;\nexports.defineInjectable = defineInjectable;\nexports.defineInjector = defineInjector;\nexports.forwardRef = forwardRef;\nexports.resolveForwardRef = resolveForwardRef;\nexports.Injectable = Injectable;\nexports.inject = inject;\nexports.INJECTOR = INJECTOR;\nexports.Injector = Injector;\nexports.ReflectiveInjector = ReflectiveInjector;\nexports.createInjector = createInjector;\nexports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\nexports.ReflectiveKey = ReflectiveKey;\nexports.InjectionToken = InjectionToken;\nexports.Inject = Inject;\nexports.Optional = Optional;\nexports.Self = Self;\nexports.SkipSelf = SkipSelf;\nexports.Host = Host;\nexports.NgZone = NgZone;\nexports.RenderComponentType = RenderComponentType;\nexports.Renderer = Renderer;\nexports.Renderer2 = Renderer2;\nexports.RendererFactory2 = RendererFactory2;\nexports.RootRenderer = RootRenderer;\nexports.COMPILER_OPTIONS = COMPILER_OPTIONS;\nexports.Compiler = Compiler;\nexports.CompilerFactory = CompilerFactory;\nexports.ModuleWithComponentFactories = ModuleWithComponentFactories;\nexports.ComponentFactory = ComponentFactory;\nexports.ComponentRef = ComponentRef;\nexports.ComponentFactoryResolver = ComponentFactoryResolver;\nexports.ElementRef = ElementRef$1;\nexports.NgModuleFactory = NgModuleFactory;\nexports.NgModuleRef = NgModuleRef;\nexports.NgModuleFactoryLoader = NgModuleFactoryLoader;\nexports.getModuleFactory = getModuleFactory;\nexports.QueryList = QueryList$1;\nexports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\nexports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\nexports.TemplateRef = TemplateRef$1;\nexports.ViewContainerRef = ViewContainerRef$1;\nexports.EmbeddedViewRef = EmbeddedViewRef$1;\nexports.ViewRef = ViewRef$1;\nexports.ChangeDetectorRef = ChangeDetectorRef;\nexports.DefaultIterableDiffer = DefaultIterableDiffer;\nexports.IterableDiffers = IterableDiffers;\nexports.KeyValueDiffers = KeyValueDiffers;\nexports.SimpleChange = SimpleChange;\nexports.WrappedValue = WrappedValue;\nexports.platformCore = platformCore;\nexports.ÉµALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\nexports.ÉµAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\nexports.ÉµdefaultIterableDiffers = defaultIterableDiffers;\nexports.ÉµdevModeEqual = devModeEqual;\nexports.ÉµisListLikeIterable = isListLikeIterable;\nexports.ÉµisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\nexports.ÉµConsole = Console;\nexports.Éµinject = inject;\nexports.ÉµsetCurrentInjector = setCurrentInjector;\nexports.ÉµAPP_ROOT = APP_ROOT;\nexports.ÉµivyEnabled = ivyEnabled;\nexports.ÉµComponentFactory = ComponentFactory;\nexports.ÉµCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\nexports.ÉµReflectionCapabilities = ReflectionCapabilities;\nexports.ÉµRenderDebugInfo = RenderDebugInfo;\nexports.Éµ_sanitizeHtml = _sanitizeHtml;\nexports.Éµ_sanitizeStyle = _sanitizeStyle;\nexports.Éµ_sanitizeUrl = _sanitizeUrl;\nexports.Éµglobal = _global;\nexports.ÉµlooseIdentical = looseIdentical;\nexports.Éµstringify = stringify;\nexports.ÉµmakeDecorator = makeDecorator;\nexports.ÉµisObservable = isObservable;\nexports.ÉµisPromise = isPromise;\nexports.ÉµclearOverrides = clearOverrides;\nexports.ÉµoverrideComponentView = overrideComponentView;\nexports.ÉµoverrideProvider = overrideProvider;\nexports.ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\nexports.ÉµdefineComponent = defineComponent;\nexports.ÉµdefineDirective = defineDirective;\nexports.ÉµdefinePipe = definePipe;\nexports.ÉµdetectChanges = detectChanges;\nexports.ÉµrenderComponent = renderComponent;\nexports.ÉµdirectiveInject = directiveInject;\nexports.ÉµinjectTemplateRef = injectTemplateRef;\nexports.ÉµinjectViewContainerRef = injectViewContainerRef;\nexports.ÉµinjectChangeDetectorRef = injectChangeDetectorRef;\nexports.ÉµinjectAttribute = injectAttribute;\nexports.ÉµPublicFeature = PublicFeature;\nexports.ÉµNgOnChangesFeature = NgOnChangesFeature;\nexports.ÉµmarkDirty = markDirty;\nexports.ÉµNC = NO_CHANGE;\nexports.ÉµC = container;\nexports.ÉµE = elementStart;\nexports.ÉµL = listener;\nexports.ÉµT = text;\nexports.ÉµV = embeddedViewStart;\nexports.ÉµQ = query;\nexports.Éµd = loadDirective;\nexports.ÉµP = projection;\nexports.Éµb = bind;\nexports.Éµi1 = interpolation1;\nexports.Éµi2 = interpolation2;\nexports.Éµi3 = interpolation3;\nexports.Éµi4 = interpolation4;\nexports.Éµi5 = interpolation5;\nexports.Éµi6 = interpolation6;\nexports.Éµi7 = interpolation7;\nexports.Éµi8 = interpolation8;\nexports.ÉµiV = interpolationV;\nexports.Éµpb1 = pipeBind1;\nexports.Éµpb2 = pipeBind2;\nexports.Éµpb3 = pipeBind3;\nexports.Éµpb4 = pipeBind4;\nexports.ÉµpbV = pipeBindV;\nexports.Éµf0 = pureFunction0;\nexports.Éµf1 = pureFunction1;\nexports.Éµf2 = pureFunction2;\nexports.Éµf3 = pureFunction3;\nexports.Éµf4 = pureFunction4;\nexports.Éµf5 = pureFunction5;\nexports.Éµf6 = pureFunction6;\nexports.Éµf7 = pureFunction7;\nexports.Éµf8 = pureFunction8;\nexports.ÉµfV = pureFunctionV;\nexports.ÉµcR = containerRefreshStart;\nexports.Éµcr = containerRefreshEnd;\nexports.ÉµqR = queryRefresh;\nexports.Éµe = elementEnd;\nexports.Éµp = elementProperty;\nexports.ÉµpD = projectionDef;\nexports.ÉµrS = reserveSlots;\nexports.Éµa = elementAttribute;\nexports.Éµs = elementStyle;\nexports.Éµsn = elementStyleNamed;\nexports.Éµk = elementClass;\nexports.Éµkn = elementClassNamed;\nexports.Éµt = textBinding;\nexports.Éµv = embeddedViewEnd;\nexports.Éµst = store;\nexports.Éµld = load;\nexports.ÉµPp = pipe;\nexports.ÉµwhenRendered = whenRendered;\nexports.ÉµbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\nexports.ÉµbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\nexports.ÉµbypassSanitizationTrustScript = bypassSanitizationTrustScript;\nexports.ÉµbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\nexports.ÉµbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\nexports.ÉµsanitizeHtml = sanitizeHtml;\nexports.ÉµsanitizeStyle = sanitizeStyle;\nexports.ÉµsanitizeUrl = sanitizeUrl;\nexports.ÉµsanitizeResourceUrl = sanitizeResourceUrl;\nexports.ÉµregisterModuleFactory = registerModuleFactory;\nexports.ÉµEMPTY_ARRAY = EMPTY_ARRAY$1;\nexports.ÉµEMPTY_MAP = EMPTY_MAP;\nexports.Éµand = anchorDef;\nexports.Éµccf = createComponentFactory;\nexports.Éµcmf = createNgModuleFactory;\nexports.Éµcrt = createRendererType2;\nexports.Éµdid = directiveDef;\nexports.Éµeld = elementDef;\nexports.ÉµelementEventFullName = elementEventFullName;\nexports.ÉµgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\nexports.ÉµinlineInterpolate = inlineInterpolate;\nexports.Éµinterpolate = interpolate;\nexports.Éµmod = moduleDef;\nexports.Éµmpd = moduleProvideDef;\nexports.Éµncd = ngContentDef;\nexports.Éµnov = nodeValue;\nexports.Éµpid = pipeDef;\nexports.Éµprd = providerDef;\nexports.Éµpad = pureArrayDef;\nexports.Éµpod = pureObjectDef;\nexports.Éµppd = purePipeDef;\nexports.Éµqud = queryDef;\nexports.Éµted = textDef;\nexports.Éµunv = unwrapValue;\nexports.Éµvid = viewDef;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}